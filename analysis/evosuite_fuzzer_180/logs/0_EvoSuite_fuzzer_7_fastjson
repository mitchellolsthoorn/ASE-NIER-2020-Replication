* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONArray
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.parser.JSONReaderScanner
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONValidator
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONReader
* Starting Client-0
* Connecting to master process on port 12808
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 12811
* Connecting to master process on port 12812
* Starting Client-0
* Connecting to master process on port 12813
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONValidator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1127
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 268 / 1127
[MASTER] 16:55:59.770 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 16:55:59.771 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.JSONReaderScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 16:56:00.327 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 16:56:00.328 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Total number of test goals for DYNAMOSA: 1110
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 338 / 1110
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONArray
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1055
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 674 / 1055
* Total number of test goals for DYNAMOSA: 740
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 232 / 740
[MASTER] 16:56:01.805 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 16:56:01.811 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 16:56:01.868 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 16:56:01.873 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
[MASTER] 16:56:03.219 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 16:56:18.816 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 16:56:22.114 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 16:56:33.048 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 16:56:46.573 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 16:57:35.782 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 182s and 64 generations, 21986 statements, best individual has fitness: 151.0
* Minimizing test suite
* Search finished after 184s and 79 generations, 25380 statements, best individual has fitness: 273.0
* Search finished after 186s and 56 generations, 29815 statements, best individual has fitness: 170.0
* Minimizing test suite
* Minimizing test suite
* Search finished after 189s and 47 generations, 15943 statements, best individual has fitness: 189.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 83%
* Total number of goals: 156
* Number of covered goals: 129
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 104
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 662
* Number of covered goals: 598
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 75%
* Total number of goals: 40
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 104
* Number of covered goals: 81
* Minimizing test suite
* Generated 70 tests with total length 210
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 157
* Number of covered goals: 136
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 115
* Number of covered goals: 95
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 79%
* Total number of goals: 266
* Number of covered goals: 209
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 37
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 25
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 115
* Number of covered goals: 95
* Generated 73 tests with total length 282
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 266
* Number of covered goals: 225
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 212
* Number of covered goals: 181
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 375
* Number of covered goals: 356
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 14
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 24
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 24
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Resulting test suite's mutation score: 52%
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 212
* Number of covered goals: 181
* Compiling and checking tests
* Generated 69 tests with total length 173
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Writing tests to file
* Writing JUnit test case 'JSONReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 173
* Number of covered goals: 151
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 101
* Number of covered goals: 83
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 95%
* Total number of goals: 99
* Number of covered goals: 94
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 325
* Number of covered goals: 301
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 219
* Number of covered goals: 95
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 68
* Number of covered goals: 66
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 101
* Number of covered goals: 83
* Generated 176 tests with total length 461
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JSONValidator_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JSONReaderScanner_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
[MASTER] 17:00:22.738 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1590159622712/com/alibaba/fastjson/JSONArray_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1590159622712/com/alibaba/fastjson/JSONArray_26_tmp__ESTest_scaffolding.java]]
[MASTER] 17:00:22.738 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:00:22.738 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:00:22.741 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Object> cannot be converted to java.lang.Class<java.util.HashMap<java.util.HashMap,java.lang.Object>>: 26
[MASTER] 17:00:22.742 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1590159622712/com/alibaba/fastjson/JSONArray_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 15:00:22 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.JSONArray;
12: import java.util.HashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class JSONArray_26_tmp__ESTest extends JSONArray_26_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       JSONArray jSONArray0 = new JSONArray();
23:       Class<Object> class0 = Object.class;
24:       // Undeclared exception!
25:       try { 
26:         jSONArray0.getObject((-1402), (Class<HashMap<HashMap, Object>>) class0);
27:         fail("Expecting exception: ArrayIndexOutOfBoundsException");
28:       
29:       } catch(ArrayIndexOutOfBoundsException e) {
30:          //
31:          // no message in exception (getMessage() returned null)
32:          //
33:       }
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_26_1590159622712/com/alibaba/fastjson/JSONArray_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 15:00:22 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONArray_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONArray"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONArray_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
89:       "com.alibaba.fastjson.serializer.JSONSerializable",
90:       "com.alibaba.fastjson.serializer.SerializeWriter",
91:       "com.alibaba.fastjson.serializer.ReferenceCodec",
92:       "com.alibaba.fastjson.JSONException",
93:       "com.alibaba.fastjson.asm.TypeCollector$1",
94:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
95:       "com.alibaba.fastjson.serializer.ToStringSerializer",
96:       "com.alibaba.fastjson.serializer.SerialContext",
97:       "com.alibaba.fastjson.serializer.AfterFilter",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.TypeReference",
100:       "com.alibaba.fastjson.serializer.ObjectSerializer",
101:       "com.alibaba.fastjson.serializer.MapSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
106:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
107:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
108:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
109:       "com.alibaba.fastjson.util.FieldInfo",
110:       "com.alibaba.fastjson.serializer.PropertyFilter",
111:       "com.alibaba.fastjson.annotation.JSONField",
112:       "com.alibaba.fastjson.parser.SymbolTable",
113:       "com.alibaba.fastjson.serializer.NameFilter",
114:       "com.alibaba.fastjson.serializer.ListSerializer",
115:       "com.alibaba.fastjson.JSONArray",
116:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
117:       "com.alibaba.fastjson.JSONAware",
118:       "com.alibaba.fastjson.serializer.LongCodec",
119:       "com.alibaba.fastjson.util.ASMClassLoader",
120:       "com.alibaba.fastjson.PropertyNamingStrategy",
121:       "com.alibaba.fastjson.parser.JSONToken",
122:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
123:       "com.alibaba.fastjson.serializer.AppendableSerializer",
124:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
125:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
126:       "com.alibaba.fastjson.serializer.ContextValueFilter",
127:       "com.alibaba.fastjson.util.ServiceLoader",
128:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
129:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
130:       "com.alibaba.fastjson.parser.DefaultJSONParser",
131:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
132:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
133:       "com.alibaba.fastjson.serializer.BeanContext",
134:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
135:       "com.alibaba.fastjson.util.IdentityHashMap",
136:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
137:       "com.alibaba.fastjson.JSON",
138:       "com.alibaba.fastjson.serializer.StringCodec",
139:       "com.alibaba.fastjson.serializer.SerializeFilterable",
140:       "com.alibaba.fastjson.JSONWriter",
141:       "com.alibaba.fastjson.asm.Opcodes",
142:       "com.alibaba.fastjson.JSONReader",
143:       "com.alibaba.fastjson.JSONStreamAware",
144:       "com.alibaba.fastjson.asm.MethodWriter",
145:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
146:       "com.alibaba.fastjson.serializer.SerializerFeature",
147:       "com.alibaba.fastjson.serializer.CalendarCodec",
148:       "com.alibaba.fastjson.util.IOUtils",
149:       "com.alibaba.fastjson.util.TypeUtils",
150:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
151:       "com.alibaba.fastjson.asm.ClassReader",
152:       "com.alibaba.fastjson.spi.Module",
153:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
154:       "com.alibaba.fastjson.serializer.MiscCodec",
155:       "com.alibaba.fastjson.util.IOUtils$1",
156:       "com.alibaba.fastjson.serializer.IntegerCodec",
157:       "com.alibaba.fastjson.serializer.SerializeFilter",
158:       "com.alibaba.fastjson.JSONPObject",
159:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
160:       "com.alibaba.fastjson.serializer.BeforeFilter",
161:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
162:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
163:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
164:       "com.alibaba.fastjson.JSONObject",
165:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
166:       "com.alibaba.fastjson.serializer.CharacterCodec",
167:       "com.alibaba.fastjson.asm.TypeCollector",
168:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
169:       "com.alibaba.fastjson.asm.ByteVector",
170:       "com.alibaba.fastjson.parser.JSONLexer",
171:       "com.alibaba.fastjson.util.ASMClassLoader$1",
172:       "com.alibaba.fastjson.asm.Label",
173:       "com.alibaba.fastjson.asm.FieldWriter",
174:       "com.alibaba.fastjson.serializer.JSONSerializer",
175:       "com.alibaba.fastjson.util.JavaBeanInfo",
176:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
177:       "com.alibaba.fastjson.serializer.SerializeConfig",
178:       "com.alibaba.fastjson.serializer.AtomicCodec",
179:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
180:       "com.alibaba.fastjson.asm.Type",
181:       "com.alibaba.fastjson.serializer.FieldSerializer",
182:       "com.alibaba.fastjson.serializer.FloatCodec",
183:       "com.alibaba.fastjson.parser.JSONReaderScanner",
184:       "com.alibaba.fastjson.serializer.ValueFilter",
185:       "com.alibaba.fastjson.JSONPathException",
186:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
187:       "com.alibaba.fastjson.serializer.Labels",
188:       "com.alibaba.fastjson.serializer.CollectionCodec",
189:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
190:       "com.alibaba.fastjson.serializer.CharArrayCodec",
191:       "com.alibaba.fastjson.asm.MethodVisitor",
192:       "com.alibaba.fastjson.annotation.JSONCreator",
193:       "com.alibaba.fastjson.asm.MethodCollector",
194:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
195:       "com.alibaba.fastjson.annotation.JSONType",
196:       "com.alibaba.fastjson.serializer.LabelFilter",
197:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
198:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
199:       "com.alibaba.fastjson.serializer.DoubleSerializer",
200:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
201:       "com.alibaba.fastjson.serializer.BooleanCodec",
202:       "com.alibaba.fastjson.parser.Feature",
203:       "com.alibaba.fastjson.parser.ParserConfig",
204:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
205:       "com.alibaba.fastjson.parser.ParseContext"
206:     );
207:   } 
208: 
209:   private static void resetClasses() {
210:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONArray_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
211: 
212:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
213:       "com.alibaba.fastjson.parser.Feature",
214:       "com.alibaba.fastjson.serializer.SerializerFeature",
215:       "com.alibaba.fastjson.util.IOUtils$1",
216:       "com.alibaba.fastjson.util.IOUtils",
217:       "com.alibaba.fastjson.JSON",
218:       "com.alibaba.fastjson.JSONArray",
219:       "com.alibaba.fastjson.util.TypeUtils",
220:       "com.alibaba.fastjson.util.IdentityHashMap",
221:       "com.alibaba.fastjson.util.ASMUtils",
222:       "com.alibaba.fastjson.parser.SymbolTable",
223:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
224:       "com.alibaba.fastjson.util.ASMClassLoader$1",
225:       "com.alibaba.fastjson.util.ASMClassLoader",
226:       "com.alibaba.fastjson.serializer.MiscCodec",
227:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
228:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
229:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
230:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
231:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
232:       "com.alibaba.fastjson.serializer.DateCodec",
233:       "com.alibaba.fastjson.serializer.CalendarCodec",
234:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
235:       "com.alibaba.fastjson.serializer.CollectionCodec",
236:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
237:       "com.alibaba.fastjson.serializer.StringCodec",
238:       "com.alibaba.fastjson.serializer.CharacterCodec",
239:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
240:       "com.alibaba.fastjson.serializer.IntegerCodec",
241:       "com.alibaba.fastjson.serializer.LongCodec",
242:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
243:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
244:       "com.alibaba.fastjson.serializer.FloatCodec",
245:       "com.alibaba.fastjson.serializer.BooleanCodec",
246:       "com.alibaba.fastjson.serializer.CharArrayCodec",
247:       "com.alibaba.fastjson.serializer.ReferenceCodec",
248:       "com.alibaba.fastjson.serializer.AtomicCodec",
249:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
250:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
251:       "com.alibaba.fastjson.parser.ParserConfig",
252:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
253:       "com.alibaba.fastjson.serializer.DoubleSerializer",
254:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
255:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
256:       "com.alibaba.fastjson.serializer.AppendableSerializer",
257:       "com.alibaba.fastjson.serializer.ToStringSerializer",
258:       "com.alibaba.fastjson.serializer.SerializeConfig",
259:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
260:       "com.alibaba.fastjson.JSONObject",
261:       "com.alibaba.fastjson.parser.DefaultJSONParser",
262:       "com.alibaba.fastjson.parser.JSONLexerBase",
263:       "com.alibaba.fastjson.parser.JSONScanner",
264:       "com.alibaba.fastjson.JSONException",
265:       "com.alibaba.fastjson.parser.JSONToken",
266:       "com.alibaba.fastjson.serializer.SerializeWriter",
267:       "com.alibaba.fastjson.serializer.SerializeFilterable",
268:       "com.alibaba.fastjson.serializer.JSONSerializer",
269:       "com.alibaba.fastjson.util.ServiceLoader",
270:       "com.alibaba.fastjson.serializer.ListSerializer",
271:       "com.alibaba.fastjson.serializer.SerialContext",
272:       "com.alibaba.fastjson.util.JavaBeanInfo",
273:       "com.alibaba.fastjson.asm.ClassWriter",
274:       "com.alibaba.fastjson.asm.ByteVector",
275:       "com.alibaba.fastjson.asm.Item",
276:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
277:       "com.alibaba.fastjson.asm.MethodWriter",
278:       "com.alibaba.fastjson.asm.Label",
279:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
280:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
281:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
282:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
283:       "com.alibaba.fastjson.parser.ParseContext",
284:       "com.alibaba.fastjson.serializer.MapSerializer",
285:       "com.alibaba.fastjson.util.FieldInfo",
286:       "com.alibaba.fastjson.asm.FieldWriter",
287:       "com.alibaba.fastjson.asm.Type",
288:       "com.alibaba.fastjson.serializer.FieldSerializer",
289:       "com.alibaba.fastjson.serializer.BeanContext",
290:       "com.alibaba.fastjson.util.UTF8Decoder",
291:       "com.alibaba.fastjson.TypeReference$1",
292:       "com.alibaba.fastjson.TypeReference",
293:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
294:       "com.alibaba.fastjson.serializer.EnumSerializer",
295:       "com.alibaba.fastjson.parser.JSONReaderScanner",
296:       "com.alibaba.fastjson.asm.ClassReader",
297:       "com.alibaba.fastjson.asm.TypeCollector$1",
298:       "com.alibaba.fastjson.asm.TypeCollector",
299:       "com.alibaba.fastjson.asm.MethodCollector",
300:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
301:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
302:       "com.alibaba.fastjson.PropertyNamingStrategy$1",
303:       "com.alibaba.fastjson.serializer.PascalNameFilter",
304:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
305:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
306:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
307:       "com.alibaba.fastjson.PropertyNamingStrategy"
308:     );
309:   }
310: }

[MASTER] 17:00:22.743 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
JSONArray jSONArray0 = new JSONArray();
Class<Object> class0 = Object.class;
jSONArray0.getObject((-1402), (Class<HashMap<HashMap, Object>>) class0);

[MASTER] 17:00:27.228 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_115_1590159627191/com/alibaba/fastjson/JSONArray_115_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_115_1590159627191/com/alibaba/fastjson/JSONArray_115_tmp__ESTest_scaffolding.java]]
[MASTER] 17:00:27.228 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:00:27.228 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:00:27.229 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Object> cannot be converted to java.lang.Class<java.util.HashMap<java.util.HashMap,java.lang.Object>>: 26
[MASTER] 17:00:27.231 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_115_1590159627191/com/alibaba/fastjson/JSONArray_115_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 15:00:27 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.JSONArray;
12: import java.util.HashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class JSONArray_115_tmp__ESTest extends JSONArray_115_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       JSONArray jSONArray0 = new JSONArray();
23:       Class<Object> class0 = Object.class;
24:       // Undeclared exception!
25:       try { 
26:         jSONArray0.getObject(3089, (Class<HashMap<HashMap, Object>>) class0);
27:         fail("Expecting exception: IndexOutOfBoundsException");
28:       
29:       } catch(IndexOutOfBoundsException e) {
30:          //
31:          // Index: 3089, Size: 0
32:          //
33:          verifyException("java.util.ArrayList", e);
34:       }
35:   }
36: }
RegularFileObject[/tmp/EvoSuite_115_1590159627191/com/alibaba/fastjson/JSONArray_115_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 15:00:27 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONArray_115_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONArray"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONArray_115_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
89:       "com.alibaba.fastjson.serializer.JSONSerializable",
90:       "com.alibaba.fastjson.serializer.SerializeWriter",
91:       "com.alibaba.fastjson.serializer.ReferenceCodec",
92:       "com.alibaba.fastjson.JSONException",
93:       "com.alibaba.fastjson.asm.TypeCollector$1",
94:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
95:       "com.alibaba.fastjson.serializer.ToStringSerializer",
96:       "com.alibaba.fastjson.serializer.SerialContext",
97:       "com.alibaba.fastjson.serializer.AfterFilter",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.TypeReference",
100:       "com.alibaba.fastjson.serializer.ObjectSerializer",
101:       "com.alibaba.fastjson.serializer.MapSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
106:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
107:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
108:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
109:       "com.alibaba.fastjson.util.FieldInfo",
110:       "com.alibaba.fastjson.serializer.PropertyFilter",
111:       "com.alibaba.fastjson.annotation.JSONField",
112:       "com.alibaba.fastjson.parser.SymbolTable",
113:       "com.alibaba.fastjson.serializer.NameFilter",
114:       "com.alibaba.fastjson.serializer.ListSerializer",
115:       "com.alibaba.fastjson.JSONArray",
116:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
117:       "com.alibaba.fastjson.JSONAware",
118:       "com.alibaba.fastjson.serializer.LongCodec",
119:       "com.alibaba.fastjson.util.ASMClassLoader",
120:       "com.alibaba.fastjson.PropertyNamingStrategy",
121:       "com.alibaba.fastjson.parser.JSONToken",
122:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
123:       "com.alibaba.fastjson.serializer.AppendableSerializer",
124:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
125:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
126:       "com.alibaba.fastjson.serializer.ContextValueFilter",
127:       "com.alibaba.fastjson.util.ServiceLoader",
128:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
129:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
130:       "com.alibaba.fastjson.parser.DefaultJSONParser",
131:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
132:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
133:       "com.alibaba.fastjson.serializer.BeanContext",
134:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
135:       "com.alibaba.fastjson.util.IdentityHashMap",
136:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
137:       "com.alibaba.fastjson.JSON",
138:       "com.alibaba.fastjson.serializer.StringCodec",
139:       "com.alibaba.fastjson.serializer.SerializeFilterable",
140:       "com.alibaba.fastjson.JSONWriter",
141:       "com.alibaba.fastjson.asm.Opcodes",
142:       "com.alibaba.fastjson.JSONReader",
143:       "com.alibaba.fastjson.JSONStreamAware",
144:       "com.alibaba.fastjson.asm.MethodWriter",
145:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
146:       "com.alibaba.fastjson.serializer.SerializerFeature",
147:       "com.alibaba.fastjson.serializer.CalendarCodec",
148:       "com.alibaba.fastjson.util.IOUtils",
149:       "com.alibaba.fastjson.util.TypeUtils",
150:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
151:       "com.alibaba.fastjson.asm.ClassReader",
152:       "com.alibaba.fastjson.spi.Module",
153:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
154:       "com.alibaba.fastjson.serializer.MiscCodec",
155:       "com.alibaba.fastjson.util.IOUtils$1",
156:       "com.alibaba.fastjson.serializer.IntegerCodec",
157:       "com.alibaba.fastjson.serializer.SerializeFilter",
158:       "com.alibaba.fastjson.JSONPObject",
159:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
160:       "com.alibaba.fastjson.serializer.BeforeFilter",
161:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
162:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
163:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
164:       "com.alibaba.fastjson.JSONObject",
165:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
166:       "com.alibaba.fastjson.serializer.CharacterCodec",
167:       "com.alibaba.fastjson.asm.TypeCollector",
168:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
169:       "com.alibaba.fastjson.asm.ByteVector",
170:       "com.alibaba.fastjson.parser.JSONLexer",
171:       "com.alibaba.fastjson.util.ASMClassLoader$1",
172:       "com.alibaba.fastjson.asm.Label",
173:       "com.alibaba.fastjson.asm.FieldWriter",
174:       "com.alibaba.fastjson.serializer.JSONSerializer",
175:       "com.alibaba.fastjson.util.JavaBeanInfo",
176:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
177:       "com.alibaba.fastjson.serializer.SerializeConfig",
178:       "com.alibaba.fastjson.serializer.AtomicCodec",
179:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
180:       "com.alibaba.fastjson.asm.Type",
181:       "com.alibaba.fastjson.serializer.FieldSerializer",
182:       "com.alibaba.fastjson.serializer.FloatCodec",
183:       "com.alibaba.fastjson.parser.JSONReaderScanner",
184:       "com.alibaba.fastjson.serializer.ValueFilter",
185:       "com.alibaba.fastjson.JSONPathException",
186:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
187:       "com.alibaba.fastjson.serializer.Labels",
188:       "com.alibaba.fastjson.serializer.CollectionCodec",
189:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
190:       "com.alibaba.fastjson.serializer.CharArrayCodec",
191:       "com.alibaba.fastjson.asm.MethodVisitor",
192:       "com.alibaba.fastjson.annotation.JSONCreator",
193:       "com.alibaba.fastjson.asm.MethodCollector",
194:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
195:       "com.alibaba.fastjson.annotation.JSONType",
196:       "com.alibaba.fastjson.serializer.LabelFilter",
197:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
198:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
199:       "com.alibaba.fastjson.serializer.DoubleSerializer",
200:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
201:       "com.alibaba.fastjson.serializer.BooleanCodec",
202:       "com.alibaba.fastjson.parser.Feature",
203:       "com.alibaba.fastjson.parser.ParserConfig",
204:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
205:       "com.alibaba.fastjson.parser.ParseContext"
206:     );
207:   } 
208: 
209:   private static void resetClasses() {
210:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONArray_115_tmp__ESTest_scaffolding.class.getClassLoader()); 
211: 
212:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
213:       "com.alibaba.fastjson.parser.Feature",
214:       "com.alibaba.fastjson.serializer.SerializerFeature",
215:       "com.alibaba.fastjson.util.IOUtils$1",
216:       "com.alibaba.fastjson.util.IOUtils",
217:       "com.alibaba.fastjson.JSON",
218:       "com.alibaba.fastjson.JSONArray",
219:       "com.alibaba.fastjson.util.TypeUtils",
220:       "com.alibaba.fastjson.util.IdentityHashMap",
221:       "com.alibaba.fastjson.util.ASMUtils",
222:       "com.alibaba.fastjson.parser.SymbolTable",
223:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
224:       "com.alibaba.fastjson.util.ASMClassLoader$1",
225:       "com.alibaba.fastjson.util.ASMClassLoader",
226:       "com.alibaba.fastjson.serializer.MiscCodec",
227:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
228:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
229:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
230:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
231:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
232:       "com.alibaba.fastjson.serializer.DateCodec",
233:       "com.alibaba.fastjson.serializer.CalendarCodec",
234:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
235:       "com.alibaba.fastjson.serializer.CollectionCodec",
236:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
237:       "com.alibaba.fastjson.serializer.StringCodec",
238:       "com.alibaba.fastjson.serializer.CharacterCodec",
239:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
240:       "com.alibaba.fastjson.serializer.IntegerCodec",
241:       "com.alibaba.fastjson.serializer.LongCodec",
242:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
243:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
244:       "com.alibaba.fastjson.serializer.FloatCodec",
245:       "com.alibaba.fastjson.serializer.BooleanCodec",
246:       "com.alibaba.fastjson.serializer.CharArrayCodec",
247:       "com.alibaba.fastjson.serializer.ReferenceCodec",
248:       "com.alibaba.fastjson.serializer.AtomicCodec",
249:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
250:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
251:       "com.alibaba.fastjson.parser.ParserConfig",
252:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
253:       "com.alibaba.fastjson.serializer.DoubleSerializer",
254:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
255:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
256:       "com.alibaba.fastjson.serializer.AppendableSerializer",
257:       "com.alibaba.fastjson.serializer.ToStringSerializer",
258:       "com.alibaba.fastjson.serializer.SerializeConfig",
259:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
260:       "com.alibaba.fastjson.JSONObject",
261:       "com.alibaba.fastjson.parser.DefaultJSONParser",
262:       "com.alibaba.fastjson.parser.JSONLexerBase",
263:       "com.alibaba.fastjson.parser.JSONScanner",
264:       "com.alibaba.fastjson.JSONException",
265:       "com.alibaba.fastjson.parser.JSONToken",
266:       "com.alibaba.fastjson.serializer.SerializeWriter",
267:       "com.alibaba.fastjson.serializer.SerializeFilterable",
268:       "com.alibaba.fastjson.serializer.JSONSerializer",
269:       "com.alibaba.fastjson.util.ServiceLoader",
270:       "com.alibaba.fastjson.serializer.ListSerializer",
271:       "com.alibaba.fastjson.serializer.SerialContext",
272:       "com.alibaba.fastjson.util.JavaBeanInfo",
273:       "com.alibaba.fastjson.asm.ClassWriter",
274:       "com.alibaba.fastjson.asm.ByteVector",
275:       "com.alibaba.fastjson.asm.Item",
276:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
277:       "com.alibaba.fastjson.asm.MethodWriter",
278:       "com.alibaba.fastjson.asm.Label",
279:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
280:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
281:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
282:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
283:       "com.alibaba.fastjson.parser.ParseContext",
284:       "com.alibaba.fastjson.serializer.MapSerializer",
285:       "com.alibaba.fastjson.util.FieldInfo",
286:       "com.alibaba.fastjson.asm.FieldWriter",
287:       "com.alibaba.fastjson.asm.Type",
288:       "com.alibaba.fastjson.serializer.FieldSerializer",
289:       "com.alibaba.fastjson.serializer.BeanContext",
290:       "com.alibaba.fastjson.util.UTF8Decoder",
291:       "com.alibaba.fastjson.TypeReference$1",
292:       "com.alibaba.fastjson.TypeReference",
293:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
294:       "com.alibaba.fastjson.serializer.EnumSerializer",
295:       "com.alibaba.fastjson.parser.JSONReaderScanner",
296:       "com.alibaba.fastjson.asm.ClassReader",
297:       "com.alibaba.fastjson.asm.TypeCollector$1",
298:       "com.alibaba.fastjson.asm.TypeCollector",
299:       "com.alibaba.fastjson.asm.MethodCollector",
300:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
301:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
302:       "com.alibaba.fastjson.PropertyNamingStrategy$1",
303:       "com.alibaba.fastjson.serializer.PascalNameFilter",
304:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
305:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
306:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
307:       "com.alibaba.fastjson.PropertyNamingStrategy"
308:     );
309:   }
310: }

[MASTER] 17:00:27.231 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
JSONArray jSONArray0 = new JSONArray();
Class<Object> class0 = Object.class;
jSONArray0.getObject(3089, (Class<HashMap<HashMap, Object>>) class0);

[MASTER] 17:00:33.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 17:00:33.049 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONArray jSONArray0 = new JSONArray();
JSONArray jSONArray1 = jSONArray0.fluentSet(989, jSONArray0);
jSONArray1.fluentRetainAll(jSONArray0);
assertFalse(jSONArray0.isEmpty());
assertEquals(990, jSONArray0.size());


[MASTER] 17:00:55.769 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 17:00:55.770 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONArray jSONArray0 = new JSONArray();
JSONArray jSONArray1 = jSONArray0.fluentSet(1024, jSONArray0);
boolean boolean0 = jSONArray1.contains(jSONArray0);
assertEquals(1025, jSONArray0.size());
assertTrue(boolean0);


[MASTER] 17:00:58.388 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 17:00:58.388 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONArray jSONArray0 = new JSONArray(1509950721);

[MASTER] 17:01:09.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONException: can not cast to float, value : [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"$ref":"@"}]
[MASTER] 17:01:09.046 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONArray jSONArray0 = new JSONArray();
jSONArray0.set(1063, jSONArray0);
JSONArray jSONArray1 = (JSONArray)jSONArray0.set(1063, (Object) null);
jSONArray1.fluentSet(3089, jSONArray0);
jSONArray0.getFloat(3089);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'JSONArray_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.parser.JSONScanner
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONPath
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSON
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONObject
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 12813
* Starting Client-0
* Connecting to master process on port 12808
* Starting Client-0
* Connecting to master process on port 12811
* Connecting to master process on port 12812
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:06:45.236 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:06:45.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONObject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 17:06:46.489 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:06:46.494 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Total number of test goals for DYNAMOSA: 1211
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 496 / 1211
[MASTER] 17:06:46.782 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:06:46.783 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:06:46.783 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 17:06:46.784 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSON
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 17:06:47.866 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
* Total number of test goals for DYNAMOSA: 2080
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 747 / 2080
[MASTER] 17:06:48.229 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:06:48.232 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:06:48.261 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Enum<E> : Type points to itself
[MASTER] 17:06:48.261 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:06:48.261 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:06:50.502 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:06:50.503 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONPath
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.JSONScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7058
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 865 / 7058
* Total number of test goals for DYNAMOSA: 5652
* Using seed 7
* Starting evolution
[MASTER] 17:06:52.217 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:06:52.237 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 17:06:52.237 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 17:06:52.237 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumSet<E> : Type points to itself
[MASTER] 17:06:52.238 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashSet<E> : Type points to itself
[MASTER] 17:06:52.238 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 17:06:52.238 [logback-2] ERROR TestCluster - Failed to check cache for java.util.PriorityQueue<E> : Type points to itself
[MASTER] 17:06:52.238 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ServiceLoader<S> : Type points to itself
[MASTER] 17:06:52.238 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Stack<E> : Type points to itself
[MASTER] 17:06:52.238 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 17:06:52.239 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 17:06:52.239 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:06:52.250 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Enum<E> : Type points to itself
[MASTER] 17:06:52.261 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:06:52.261 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Initial Number of Goals in DynaMOSA = 470 / 5652
[MASTER] 17:06:52.962 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:06:52.964 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
[MASTER] 17:06:57.362 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 17:06:57.605 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 17:07:01.782 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:07:11.980 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 17:07:22.225 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:07:48.502 [logback-1] WARN  ClassResetter - class java.lang.reflect.InvocationTargetException thrown during execution of method  __STATIC_RESET() for class com.alibaba.fastjson.parser.ParserConfig, java.lang.NullPointerException
[MASTER] 17:08:00.568 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
[MASTER] 17:08:10.966 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 17:09:00.582 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Search finished after 183s and 199 generations, 109958 statements, best individual has fitness: 546.0
* Search finished after 185s and 118 generations, 42299 statements, best individual has fitness: 516.0
* Minimizing test suite
* Search finished after 185s and 192 generations, 144609 statements, best individual has fitness: 3687.0
[MASTER] 17:09:57.053 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Search finished after 186s and 420 generations, 235700 statements, best individual has fitness: 3177.0
* Minimizing test suite
[MASTER] 17:10:00.454 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.executedAndThenSendIndividualToMaster(StatisticsSender.java:98) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTests(TestSuiteGenerator.java:687) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:245) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_SQLNonTransientConnectionException.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 435
* Number of covered goals: 374
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 283
* Number of covered goals: 235
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 130
* Number of covered goals: 130
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 716
* Number of covered goals: 550
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 197
* Number of covered goals: 81
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 83
* Number of covered goals: 81
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 89%
* Total number of goals: 83
* Number of covered goals: 74
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 283
* Number of covered goals: 220
* Generated 257 tests with total length 1105
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Minimizing test suite
* Coverage of criterion LINE: 46%
* Total number of goals: 1857
* Number of covered goals: 846
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 40%
* Total number of goals: 1519
* Number of covered goals: 607
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 66
* Number of covered goals: 66
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 567
* Number of covered goals: 343
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 64%
* Total number of goals: 94
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 48
* Number of covered goals: 47
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 37%
* Total number of goals: 1519
* Number of covered goals: 557
* Generated 244 tests with total length 657
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
[MASTER] 17:10:44.438 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_67_1590160244414/com/alibaba/fastjson/JSON_67_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_67_1590160244414/com/alibaba/fastjson/JSON_67_tmp__ESTest_scaffolding.java]]
[MASTER] 17:10:44.438 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:10:44.438 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:10:44.442 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.TreeMap cannot be converted to com.alibaba.fastjson.JSON: 26
[MASTER] 17:10:44.443 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_67_1590160244414/com/alibaba/fastjson/JSON_67_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 15:10:44 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.alibaba.fastjson.JSON;
11: import com.alibaba.fastjson.serializer.SimplePropertyPreFilter;
12: import com.alibaba.fastjson.util.ParameterizedTypeImpl;
13: import java.util.TreeMap;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class JSON_67_tmp__ESTest extends JSON_67_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       TreeMap<ParameterizedTypeImpl, SimplePropertyPreFilter> treeMap0 = new TreeMap<ParameterizedTypeImpl, SimplePropertyPreFilter>();
24:       TreeMap treeMap1 = (TreeMap)JSON.toJSON((Object) treeMap0);
25:       Class<String> class0 = String.class;
26:       String string0 = ((JSON) treeMap1).toJavaObject(class0);
27:       assertNotNull(string0);
28:   }
29: }
RegularFileObject[/tmp/EvoSuite_67_1590160244414/com/alibaba/fastjson/JSON_67_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 15:10:44 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSON_67_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSON"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSON_67_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
89:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
90:       "com.alibaba.fastjson.serializer.JSONSerializable",
91:       "com.alibaba.fastjson.serializer.SerializeWriter",
92:       "com.alibaba.fastjson.serializer.ReferenceCodec",
93:       "com.alibaba.fastjson.JSONException",
94:       "com.alibaba.fastjson.asm.TypeCollector$1",
95:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
96:       "com.alibaba.fastjson.serializer.ToStringSerializer",
97:       "com.alibaba.fastjson.serializer.SerialContext",
98:       "com.alibaba.fastjson.JSONPath$FilterGroup",
99:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
100:       "com.alibaba.fastjson.serializer.AfterFilter",
101:       "com.alibaba.fastjson.TypeReference",
102:       "com.alibaba.fastjson.serializer.ObjectSerializer",
103:       "com.alibaba.fastjson.JSONValidator$Type",
104:       "com.alibaba.fastjson.asm.Item",
105:       "com.alibaba.fastjson.serializer.MapSerializer",
106:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
107:       "com.alibaba.fastjson.serializer.DateCodec",
108:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
109:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
110:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
111:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
112:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
113:       "com.alibaba.fastjson.JSONPath$Filter",
114:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
115:       "com.alibaba.fastjson.util.FieldInfo",
116:       "com.alibaba.fastjson.JSONValidator$UTF16Validator",
117:       "com.alibaba.fastjson.annotation.JSONField",
118:       "com.alibaba.fastjson.serializer.PropertyFilter",
119:       "com.alibaba.fastjson.parser.SymbolTable",
120:       "com.alibaba.fastjson.serializer.NameFilter",
121:       "com.alibaba.fastjson.serializer.ListSerializer",
122:       "com.alibaba.fastjson.JSONArray",
123:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
124:       "com.alibaba.fastjson.JSONAware",
125:       "com.alibaba.fastjson.serializer.LongCodec",
126:       "com.alibaba.fastjson.serializer.EnumSerializer",
127:       "com.alibaba.fastjson.util.ASMClassLoader",
128:       "com.alibaba.fastjson.PropertyNamingStrategy",
129:       "com.alibaba.fastjson.parser.JSONToken",
130:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
131:       "com.alibaba.fastjson.serializer.AppendableSerializer",
132:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
133:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
134:       "com.alibaba.fastjson.serializer.ContextValueFilter",
135:       "com.alibaba.fastjson.util.ServiceLoader",
136:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
137:       "com.alibaba.fastjson.JSONPath$FilterSegment",
138:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
139:       "com.alibaba.fastjson.parser.DefaultJSONParser",
140:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
141:       "com.alibaba.fastjson.JSONValidator$ReaderValidator",
142:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
143:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
144:       "com.alibaba.fastjson.serializer.BeanContext",
145:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
146:       "com.alibaba.fastjson.util.IdentityHashMap",
147:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
148:       "com.alibaba.fastjson.JSON",
149:       "com.alibaba.fastjson.serializer.StringCodec",
150:       "com.alibaba.fastjson.serializer.SerializeFilterable",
151:       "com.alibaba.fastjson.JSONWriter",
152:       "com.alibaba.fastjson.asm.Opcodes",
153:       "com.alibaba.fastjson.JSONReader",
154:       "com.alibaba.fastjson.JSONStreamAware",
155:       "com.alibaba.fastjson.asm.MethodWriter",
156:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
157:       "com.alibaba.fastjson.serializer.SerializerFeature",
158:       "com.alibaba.fastjson.JSONPath$Operator",
159:       "com.alibaba.fastjson.TypeReference$1",
160:       "com.alibaba.fastjson.serializer.CalendarCodec",
161:       "com.alibaba.fastjson.util.IOUtils",
162:       "com.alibaba.fastjson.util.TypeUtils",
163:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
164:       "com.alibaba.fastjson.asm.ClassReader",
165:       "com.alibaba.fastjson.JSONPath$Segment",
166:       "com.alibaba.fastjson.spi.Module",
167:       "com.alibaba.fastjson.JSONValidator",
168:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
169:       "com.alibaba.fastjson.serializer.MiscCodec",
170:       "com.alibaba.fastjson.util.IOUtils$1",
171:       "com.alibaba.fastjson.serializer.IntegerCodec",
172:       "com.alibaba.fastjson.serializer.SerializeFilter",
173:       "com.alibaba.fastjson.JSONPObject",
174:       "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
175:       "com.alibaba.fastjson.serializer.PascalNameFilter",
176:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
177:       "com.alibaba.fastjson.serializer.BeforeFilter",
178:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
179:       "com.alibaba.fastjson.serializer.ArraySerializer",
180:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
181:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
182:       "com.alibaba.fastjson.JSONObject",
183:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
184:       "com.alibaba.fastjson.serializer.CharacterCodec",
185:       "com.alibaba.fastjson.asm.TypeCollector",
186:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
187:       "com.alibaba.fastjson.asm.ByteVector",
188:       "com.alibaba.fastjson.parser.JSONLexer",
189:       "com.alibaba.fastjson.util.ASMClassLoader$1",
190:       "com.alibaba.fastjson.asm.Label",
191:       "com.alibaba.fastjson.JSONValidator$UTF8Validator",
192:       "com.alibaba.fastjson.asm.FieldWriter",
193:       "com.alibaba.fastjson.serializer.JSONSerializer",
194:       "com.alibaba.fastjson.util.JavaBeanInfo",
195:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
196:       "com.alibaba.fastjson.serializer.SerializeConfig",
197:       "com.alibaba.fastjson.serializer.AtomicCodec",
198:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
199:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
200:       "com.alibaba.fastjson.asm.Type",
201:       "com.alibaba.fastjson.serializer.FieldSerializer",
202:       "com.alibaba.fastjson.serializer.FloatCodec",
203:       "com.alibaba.fastjson.parser.JSONReaderScanner",
204:       "com.alibaba.fastjson.serializer.ValueFilter",
205:       "com.alibaba.fastjson.JSONPathException",
206:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
207:       "com.alibaba.fastjson.serializer.Labels",
208:       "com.alibaba.fastjson.serializer.CollectionCodec",
209:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
210:       "com.alibaba.fastjson.serializer.CharArrayCodec",
211:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
212:       "com.alibaba.fastjson.asm.MethodVisitor",
213:       "com.alibaba.fastjson.annotation.JSONCreator",
214:       "com.alibaba.fastjson.asm.MethodCollector",
215:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
216:       "com.alibaba.fastjson.serializer.LabelFilter",
217:       "com.alibaba.fastjson.annotation.JSONType",
218:       "com.alibaba.fastjson.util.UTF8Decoder",
219:       "com.alibaba.fastjson.JSONValidator$UTF8InputStreamValidator",
220:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
221:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
222:       "com.alibaba.fastjson.serializer.DoubleSerializer",
223:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
224:       "com.alibaba.fastjson.serializer.BooleanCodec",
225:       "com.alibaba.fastjson.parser.Feature",
226:       "com.alibaba.fastjson.parser.ParserConfig",
227:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
228:       "com.alibaba.fastjson.parser.ParseContext"
229:     );
230:   } 
231: 
232:   private static void resetClasses() {
233:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSON_67_tmp__ESTest_scaffolding.class.getClassLoader()); 
234: 
235:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
236:       "com.alibaba.fastjson.parser.Feature",
237:       "com.alibaba.fastjson.serializer.SerializerFeature",
238:       "com.alibaba.fastjson.util.IOUtils$1",
239:       "com.alibaba.fastjson.util.IOUtils",
240:       "com.alibaba.fastjson.JSON",
241:       "com.alibaba.fastjson.util.IdentityHashMap",
242:       "com.alibaba.fastjson.util.ASMUtils",
243:       "com.alibaba.fastjson.parser.SymbolTable",
244:       "com.alibaba.fastjson.util.TypeUtils",
245:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
246:       "com.alibaba.fastjson.util.ASMClassLoader$1",
247:       "com.alibaba.fastjson.util.ASMClassLoader",
248:       "com.alibaba.fastjson.serializer.MiscCodec",
249:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
250:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
251:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
252:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
253:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
254:       "com.alibaba.fastjson.serializer.DateCodec",
255:       "com.alibaba.fastjson.serializer.CalendarCodec",
256:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
257:       "com.alibaba.fastjson.serializer.CollectionCodec",
258:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
259:       "com.alibaba.fastjson.serializer.StringCodec",
260:       "com.alibaba.fastjson.serializer.CharacterCodec",
261:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
262:       "com.alibaba.fastjson.serializer.IntegerCodec",
263:       "com.alibaba.fastjson.serializer.LongCodec",
264:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
265:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
266:       "com.alibaba.fastjson.serializer.FloatCodec",
267:       "com.alibaba.fastjson.serializer.BooleanCodec",
268:       "com.alibaba.fastjson.serializer.CharArrayCodec",
269:       "com.alibaba.fastjson.serializer.ReferenceCodec",
270:       "com.alibaba.fastjson.serializer.AtomicCodec",
271:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
272:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
273:       "com.alibaba.fastjson.parser.ParserConfig",
274:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
275:       "com.alibaba.fastjson.serializer.DoubleSerializer",
276:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
277:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
278:       "com.alibaba.fastjson.serializer.AppendableSerializer",
279:       "com.alibaba.fastjson.serializer.ToStringSerializer",
280:       "com.alibaba.fastjson.serializer.SerializeConfig",
281:       "com.alibaba.fastjson.JSONPObject",
282:       "com.alibaba.fastjson.serializer.SerializeFilterable",
283:       "com.alibaba.fastjson.serializer.JSONSerializer",
284:       "com.alibaba.fastjson.serializer.SerializeWriter",
285:       "com.alibaba.fastjson.util.ServiceLoader",
286:       "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
287:       "com.alibaba.fastjson.parser.DefaultJSONParser",
288:       "com.alibaba.fastjson.parser.JSONLexerBase",
289:       "com.alibaba.fastjson.parser.JSONScanner",
290:       "com.alibaba.fastjson.JSONObject",
291:       "com.alibaba.fastjson.JSONArray",
292:       "com.alibaba.fastjson.JSONException",
293:       "com.alibaba.fastjson.parser.JSONToken",
294:       "com.alibaba.fastjson.serializer.PascalNameFilter",
295:       "com.alibaba.fastjson.parser.ParseContext",
296:       "com.alibaba.fastjson.serializer.MapSerializer",
297:       "com.alibaba.fastjson.serializer.SerialContext",
298:       "com.alibaba.fastjson.serializer.ListSerializer",
299:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
300:       "com.alibaba.fastjson.asm.ClassWriter",
301:       "com.alibaba.fastjson.asm.ByteVector",
302:       "com.alibaba.fastjson.asm.Item",
303:       "com.alibaba.fastjson.asm.MethodWriter",
304:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
305:       "com.alibaba.fastjson.asm.Label",
306:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
307:       "com.alibaba.fastjson.util.FieldInfo",
308:       "com.alibaba.fastjson.asm.FieldWriter",
309:       "com.alibaba.fastjson.asm.Type",
310:       "com.alibaba.fastjson.serializer.FieldSerializer",
311:       "com.alibaba.fastjson.serializer.BeanContext",
312:       "com.alibaba.fastjson.TypeReference$1",
313:       "com.alibaba.fastjson.TypeReference",
314:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
315:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
316:       "com.alibaba.fastjson.util.JavaBeanInfo",
317:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
318:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
319:       "com.alibaba.fastjson.util.UTF8Decoder",
320:       "com.alibaba.fastjson.serializer.EnumSerializer",
321:       "com.alibaba.fastjson.asm.ClassReader",
322:       "com.alibaba.fastjson.asm.TypeCollector$1",
323:       "com.alibaba.fastjson.asm.TypeCollector",
324:       "com.alibaba.fastjson.asm.MethodCollector",
325:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
326:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
327:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
328:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
329:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
330:       "com.alibaba.fastjson.parser.JSONReaderScanner",
331:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
332:       "com.alibaba.fastjson.serializer.ArraySerializer",
333:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
334:       "com.alibaba.fastjson.PropertyNamingStrategy$1",
335:       "com.alibaba.fastjson.util.RyuFloat",
336:       "com.alibaba.fastjson.serializer.JSONAwareSerializer",
337:       "com.alibaba.fastjson.PropertyNamingStrategy",
338:       "com.alibaba.fastjson.JSONValidator$Type"
339:     );
340:   }
341: }

[MASTER] 17:10:44.443 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
TreeMap<ParameterizedTypeImpl, SimplePropertyPreFilter> treeMap0 = new TreeMap<ParameterizedTypeImpl, SimplePropertyPreFilter>();
TreeMap treeMap1 = (TreeMap)JSON.toJSON((Object) treeMap0);
Class<String> class0 = String.class;
String string0 = ((JSON) treeMap1).toJavaObject(class0);
assertNotNull(string0);


* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 2079
* Number of covered goals: 1144
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 1850
* Number of covered goals: 808
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 99%
* Total number of goals: 122
* Number of covered goals: 121
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 61%
* Total number of goals: 913
* Number of covered goals: 553
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 114
* Number of covered goals: 81
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 126
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 126
* Number of covered goals: 116
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 1850
* Number of covered goals: 753
* Generated 336 tests with total length 1115
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'JSON_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
[MASTER] 17:12:35.557 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 61%
* Total number of goals: 254
* Number of covered goals: 156
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 172
* Number of covered goals: 93
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 333
* Number of covered goals: 195
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 162
* Number of covered goals: 65
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 59
* Number of covered goals: 57
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 59
* Number of covered goals: 56
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 172
* Number of covered goals: 93
* Generated 166 tests with total length 1538
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Generating assertions
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'JSONScanner_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 17:12:56.039 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_330_String.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:544) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:255) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_330_String.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_330_String.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.assertion.Assertion.readObject(Assertion.java:255) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.HashSet.readObject(HashSet.java:341) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_330_String.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 93 common frames omitted
[MASTER] 17:13:09.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StringIndexOutOfBoundsException: String index out of range: 0
[MASTER] 17:13:09.391 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath.remove((Object) "/stackTrace/13", "[]");

[MASTER] 17:13:11.710 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: expect '), but 'K'
[MASTER] 17:13:11.711 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath jSONPath0 = new JSONPath("[x2V]KRu)60mU");
JSONPath.keySet((Object) jSONPath0, "[x2V]KRu)60mU");

[MASTER] 17:13:17.872 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: not support jsonpath : M^9o^rL9)1Crf8cH[
[MASTER] 17:13:17.872 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SerializeConfig serializeConfig0 = SerializeConfig.getGlobalInstance();
JSONPath.contains((Object) serializeConfig0, "M^9o^rL9)1Crf8cH[");

[MASTER] 17:13:27.203 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<95> but was:<89>
[MASTER] 17:13:27.203 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DataTruncation dataTruncation0 = new DataTruncation(717, false, false, 717, 717);
Map<String, Object> map0 = JSONPath.paths((Object) dataTruncation0);
assertEquals(95, map0.size());


[MASTER] 17:13:29.675 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.alibaba.fastjson.parser.DefaultJSONParser but in java.lang.String.charAt(String.java:658): java.lang.StringIndexOutOfBoundsException: String index out of range: 2
[MASTER] 17:13:29.675 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath jSONPath0 = JSONPath.compile("..");
JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com");
DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(jSONReaderScanner0);
jSONPath0.extract(defaultJSONParser0);

[MASTER] 17:13:30.325 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: not support jsonpath : _.H3rB(QOV%.
[MASTER] 17:13:30.325 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException("/c3use", (String) null, (-1934));
JSONPath.eval((Object) sQLRecoverableException0, "_.H3rB(QOV%.");

[MASTER] 17:13:30.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: not support jsonpath : getFieldValue error.
[MASTER] 17:13:30.669 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath.extract("com.alibaba.fast;son.JSONPath$SizeSegment", "getFieldValue error.");

[MASTER] 17:13:31.332 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: illeal jsonpath syntax. X[P+YzD^KV
[MASTER] 17:13:31.332 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ParserConfig parserConfig0 = new ParserConfig();
JSONPath jSONPath0 = JSONPath.compile("X[P+YzD^KV");
jSONPath0.size((Object) parserConfig0);

[MASTER] 17:13:32.305 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: expect '], but '/'
[MASTER] 17:13:32.306 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("jZ#8W", "S7Ea0", (Throwable) null);
JSONPath.size((Object) sQLTransactionRollbackException0, "t[%Z/L4e(&fv");

* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 17:13:48.067 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_15_1590160428036/com/alibaba/fastjson/JSONObject_15_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_15_1590160428036/com/alibaba/fastjson/JSONObject_15_tmp__ESTest_scaffolding.java]]
[MASTER] 17:13:48.068 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:13:48.068 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:13:48.071 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Double> cannot be converted to java.lang.Class<java.util.HashMap<java.util.AbstractMap.SimpleImmutableEntry,java.lang.Integer>>: 39
[MASTER] 17:13:48.072 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_15_1590160428036/com/alibaba/fastjson/JSONObject_15_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 15:13:48 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.JSON;
12: import com.alibaba.fastjson.JSONObject;
13: import com.alibaba.fastjson.parser.ParserConfig;
14: import com.alibaba.fastjson.serializer.SerializeConfig;
15: import com.alibaba.fastjson.serializer.SerializerFeature;
16: import java.io.IOException;
17: import java.io.ObjectInputStream;
18: import java.io.PipedInputStream;
19: import java.util.AbstractMap;
20: import java.util.HashMap;
21: import org.evosuite.runtime.EvoRunner;
22: import org.evosuite.runtime.EvoRunnerParameters;
23: import org.junit.runner.RunWith;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class JSONObject_15_tmp__ESTest extends JSONObject_15_tmp__ESTest_scaffolding {
27: 
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       JSONObject jSONObject0 = new JSONObject();
31:       Byte byte0 = new Byte((byte)84);
32:       SerializeConfig serializeConfig0 = new SerializeConfig(2806);
33:       SerializerFeature[] serializerFeatureArray0 = new SerializerFeature[0];
34:       JSON.toJSONString((Object) byte0, serializeConfig0, serializerFeatureArray0);
35:       jSONObject0.put((String) null, (Object) null);
36:       jSONObject0.getJSONObject("/_,");
37:       Class<Double> class0 = Double.class;
38:       ParserConfig parserConfig0 = ParserConfig.getGlobalInstance();
39:       jSONObject0.toJavaObject((Class<HashMap<AbstractMap.SimpleImmutableEntry, Integer>>) class0, parserConfig0, 2347);
40:       PipedInputStream pipedInputStream0 = new PipedInputStream(2347);
41:       ObjectInputStream objectInputStream0 = null;
42:       try {
43:         objectInputStream0 = new ObjectInputStream(pipedInputStream0);
44:         fail("Expecting exception: IOException");
45:       
46:       } catch(Throwable e) {
47:          //
48:          // Pipe not connected
49:          //
50:          verifyException("java.io.PipedInputStream", e);
51:       }
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_15_1590160428036/com/alibaba/fastjson/JSONObject_15_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 15:13:48 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONObject_15_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONObject"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
76:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONObject_15_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
89:       "com.alibaba.fastjson.serializer.JSONSerializable",
90:       "com.alibaba.fastjson.serializer.SerializeWriter",
91:       "com.alibaba.fastjson.serializer.ReferenceCodec",
92:       "com.alibaba.fastjson.JSONException",
93:       "com.alibaba.fastjson.asm.TypeCollector$1",
94:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
95:       "com.alibaba.fastjson.serializer.ToStringSerializer",
96:       "com.alibaba.fastjson.serializer.SerialContext",
97:       "com.alibaba.fastjson.serializer.AfterFilter",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.TypeReference",
100:       "com.alibaba.fastjson.serializer.ObjectSerializer",
101:       "com.alibaba.fastjson.serializer.MapSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
106:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
107:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
108:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
109:       "com.alibaba.fastjson.util.FieldInfo",
110:       "com.alibaba.fastjson.annotation.JSONField",
111:       "com.alibaba.fastjson.serializer.PropertyFilter",
112:       "com.alibaba.fastjson.parser.SymbolTable",
113:       "com.alibaba.fastjson.serializer.NameFilter",
114:       "com.alibaba.fastjson.JSONArray",
115:       "com.alibaba.fastjson.JSONAware",
116:       "com.alibaba.fastjson.serializer.LongCodec",
117:       "com.alibaba.fastjson.serializer.EnumSerializer",
118:       "com.alibaba.fastjson.util.ASMClassLoader",
119:       "com.alibaba.fastjson.PropertyNamingStrategy",
120:       "com.alibaba.fastjson.parser.JSONToken",
121:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
122:       "com.alibaba.fastjson.serializer.AppendableSerializer",
123:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
124:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
125:       "com.alibaba.fastjson.serializer.ContextValueFilter",
126:       "com.alibaba.fastjson.util.ServiceLoader",
127:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
128:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
129:       "com.alibaba.fastjson.parser.DefaultJSONParser",
130:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
131:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
132:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
133:       "com.alibaba.fastjson.serializer.BeanContext",
134:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
135:       "com.alibaba.fastjson.util.IdentityHashMap",
136:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
137:       "com.alibaba.fastjson.JSON",
138:       "com.alibaba.fastjson.serializer.StringCodec",
139:       "com.alibaba.fastjson.serializer.SerializeFilterable",
140:       "com.alibaba.fastjson.JSONWriter",
141:       "com.alibaba.fastjson.asm.Opcodes",
142:       "com.alibaba.fastjson.JSONReader",
143:       "com.alibaba.fastjson.JSONStreamAware",
144:       "com.alibaba.fastjson.asm.MethodWriter",
145:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
146:       "com.alibaba.fastjson.serializer.SerializerFeature",
147:       "com.alibaba.fastjson.serializer.CalendarCodec",
148:       "com.alibaba.fastjson.util.IOUtils",
149:       "com.alibaba.fastjson.util.TypeUtils",
150:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
151:       "com.alibaba.fastjson.asm.ClassReader",
152:       "com.alibaba.fastjson.spi.Module",
153:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
154:       "com.alibaba.fastjson.serializer.MiscCodec",
155:       "com.alibaba.fastjson.util.IOUtils$1",
156:       "com.alibaba.fastjson.serializer.IntegerCodec",
157:       "com.alibaba.fastjson.serializer.SerializeFilter",
158:       "com.alibaba.fastjson.JSONPObject",
159:       "com.alibaba.fastjson.serializer.PascalNameFilter",
160:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
161:       "com.alibaba.fastjson.serializer.BeforeFilter",
162:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
163:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
164:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
165:       "com.alibaba.fastjson.JSONObject",
166:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
167:       "com.alibaba.fastjson.serializer.CharacterCodec",
168:       "com.alibaba.fastjson.asm.TypeCollector",
169:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
170:       "com.alibaba.fastjson.asm.ByteVector",
171:       "com.alibaba.fastjson.parser.JSONLexer",
172:       "com.alibaba.fastjson.util.ASMClassLoader$1",
173:       "com.alibaba.fastjson.asm.Label",
174:       "com.alibaba.fastjson.asm.FieldWriter",
175:       "com.alibaba.fastjson.serializer.JSONSerializer",
176:       "com.alibaba.fastjson.util.JavaBeanInfo",
177:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
178:       "com.alibaba.fastjson.serializer.SerializeConfig",
179:       "com.alibaba.fastjson.serializer.AtomicCodec",
180:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
181:       "com.alibaba.fastjson.asm.Type",
182:       "com.alibaba.fastjson.serializer.FieldSerializer",
183:       "com.alibaba.fastjson.serializer.FloatCodec",
184:       "com.alibaba.fastjson.parser.JSONReaderScanner",
185:       "com.alibaba.fastjson.serializer.ValueFilter",
186:       "com.alibaba.fastjson.JSONPathException",
187:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
188:       "com.alibaba.fastjson.serializer.Labels",
189:       "com.alibaba.fastjson.serializer.CollectionCodec",
190:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
191:       "com.alibaba.fastjson.serializer.CharArrayCodec",
192:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
193:       "com.alibaba.fastjson.asm.MethodVisitor",
194:       "com.alibaba.fastjson.annotation.JSONCreator",
195:       "com.alibaba.fastjson.asm.MethodCollector",
196:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
197:       "com.alibaba.fastjson.annotation.JSONType",
198:       "com.alibaba.fastjson.serializer.LabelFilter",
199:       "com.alibaba.fastjson.util.UTF8Decoder",
200:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
201:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
202:       "com.alibaba.fastjson.serializer.DoubleSerializer",
203:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
204:       "com.alibaba.fastjson.serializer.BooleanCodec",
205:       "com.alibaba.fastjson.parser.Feature",
206:       "com.alibaba.fastjson.parser.ParserConfig",
207:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
208:       "com.alibaba.fastjson.parser.ParseContext"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONObject_15_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "com.alibaba.fastjson.parser.Feature",
217:       "com.alibaba.fastjson.serializer.SerializerFeature",
218:       "com.alibaba.fastjson.util.IOUtils$1",
219:       "com.alibaba.fastjson.util.IOUtils",
220:       "com.alibaba.fastjson.JSON",
221:       "com.alibaba.fastjson.JSONObject",
222:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
223:       "com.alibaba.fastjson.util.IdentityHashMap",
224:       "com.alibaba.fastjson.util.ASMUtils",
225:       "com.alibaba.fastjson.parser.SymbolTable",
226:       "com.alibaba.fastjson.util.TypeUtils",
227:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
228:       "com.alibaba.fastjson.util.ASMClassLoader$1",
229:       "com.alibaba.fastjson.util.ASMClassLoader",
230:       "com.alibaba.fastjson.serializer.MiscCodec",
231:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
232:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
233:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
234:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
235:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
236:       "com.alibaba.fastjson.serializer.DateCodec",
237:       "com.alibaba.fastjson.serializer.CalendarCodec",
238:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
239:       "com.alibaba.fastjson.serializer.CollectionCodec",
240:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
241:       "com.alibaba.fastjson.serializer.StringCodec",
242:       "com.alibaba.fastjson.serializer.CharacterCodec",
243:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
244:       "com.alibaba.fastjson.serializer.IntegerCodec",
245:       "com.alibaba.fastjson.serializer.LongCodec",
246:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
247:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
248:       "com.alibaba.fastjson.serializer.FloatCodec",
249:       "com.alibaba.fastjson.serializer.BooleanCodec",
250:       "com.alibaba.fastjson.serializer.CharArrayCodec",
251:       "com.alibaba.fastjson.serializer.ReferenceCodec",
252:       "com.alibaba.fastjson.serializer.AtomicCodec",
253:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
254:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
255:       "com.alibaba.fastjson.parser.ParserConfig",
256:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
257:       "com.alibaba.fastjson.serializer.DoubleSerializer",
258:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
259:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
260:       "com.alibaba.fastjson.serializer.AppendableSerializer",
261:       "com.alibaba.fastjson.serializer.ToStringSerializer",
262:       "com.alibaba.fastjson.serializer.SerializeConfig",
263:       "com.alibaba.fastjson.parser.DefaultJSONParser",
264:       "com.alibaba.fastjson.parser.JSONLexerBase",
265:       "com.alibaba.fastjson.parser.JSONScanner",
266:       "com.alibaba.fastjson.parser.ParseContext",
267:       "com.alibaba.fastjson.JSONArray",
268:       "com.alibaba.fastjson.serializer.SerializeWriter",
269:       "com.alibaba.fastjson.util.ServiceLoader",
270:       "com.alibaba.fastjson.util.JavaBeanInfo",
271:       "com.alibaba.fastjson.asm.ClassWriter",
272:       "com.alibaba.fastjson.asm.ByteVector",
273:       "com.alibaba.fastjson.asm.Item",
274:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
275:       "com.alibaba.fastjson.asm.MethodWriter",
276:       "com.alibaba.fastjson.asm.Label",
277:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
278:       "com.alibaba.fastjson.parser.JSONToken",
279:       "com.alibaba.fastjson.JSONException",
280:       "com.alibaba.fastjson.serializer.SerializeFilterable",
281:       "com.alibaba.fastjson.serializer.JSONSerializer",
282:       "com.alibaba.fastjson.serializer.MapSerializer",
283:       "com.alibaba.fastjson.serializer.SerialContext",
284:       "com.alibaba.fastjson.asm.ClassReader",
285:       "com.alibaba.fastjson.asm.TypeCollector$1",
286:       "com.alibaba.fastjson.asm.TypeCollector",
287:       "com.alibaba.fastjson.asm.Type",
288:       "com.alibaba.fastjson.asm.MethodCollector",
289:       "com.alibaba.fastjson.util.FieldInfo",
290:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
291:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
292:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
293:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
294:       "com.alibaba.fastjson.asm.FieldWriter",
295:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
296:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
297:       "com.alibaba.fastjson.serializer.FieldSerializer",
298:       "com.alibaba.fastjson.serializer.BeanContext",
299:       "com.alibaba.fastjson.util.UTF8Decoder",
300:       "com.alibaba.fastjson.parser.JSONReaderScanner",
301:       "com.alibaba.fastjson.TypeReference$1",
302:       "com.alibaba.fastjson.TypeReference",
303:       "com.alibaba.fastjson.serializer.ArraySerializer",
304:       "com.alibaba.fastjson.serializer.PascalNameFilter",
305:       "com.alibaba.fastjson.serializer.ListSerializer",
306:       "com.alibaba.fastjson.serializer.EnumSerializer",
307:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
308:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
309:       "com.alibaba.fastjson.util.RyuDouble",
310:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
311:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
312:       "com.alibaba.fastjson.PropertyNamingStrategy$1"
313:     );
314:   }
315: }

[MASTER] 17:13:48.072 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
JSONObject jSONObject0 = new JSONObject();
Byte byte0 = new Byte((byte)84);
SerializeConfig serializeConfig0 = new SerializeConfig(2806);
SerializerFeature[] serializerFeatureArray0 = new SerializerFeature[0];
JSON.toJSONString((Object) byte0, serializeConfig0, serializerFeatureArray0);
jSONObject0.put((String) null, (Object) null);
jSONObject0.getJSONObject("/_,");
Class<Double> class0 = Double.class;
ParserConfig parserConfig0 = ParserConfig.getGlobalInstance();
jSONObject0.toJavaObject((Class<HashMap<AbstractMap.SimpleImmutableEntry, Integer>>) class0, parserConfig0, 2347);
PipedInputStream pipedInputStream0 = new PipedInputStream(2347);
ObjectInputStream objectInputStream0 = new ObjectInputStream(pipedInputStream0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'JSONPath_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
[MASTER] 17:14:15.963 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_87_1590160455926/com/alibaba/fastjson/JSONObject_87_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_87_1590160455926/com/alibaba/fastjson/JSONObject_87_tmp__ESTest_scaffolding.java]]
[MASTER] 17:14:15.964 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:14:15.964 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:14:15.964 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<com.alibaba.fastjson.JSONObject> cannot be converted to java.lang.Class<java.util.HashMap<java.util.AbstractMap.SimpleImmutableEntry,java.lang.Integer>>: 34
[MASTER] 17:14:15.965 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_87_1590160455926/com/alibaba/fastjson/JSONObject_87_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 15:14:15 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.JSON;
12: import com.alibaba.fastjson.JSONObject;
13: import com.alibaba.fastjson.parser.ParserConfig;
14: import com.alibaba.fastjson.serializer.SerializeConfig;
15: import com.alibaba.fastjson.serializer.SerializeFilter;
16: import com.alibaba.fastjson.serializer.SerializerFeature;
17: import java.nio.charset.Charset;
18: import java.util.AbstractMap;
19: import java.util.HashMap;
20: import org.evosuite.runtime.EvoRunner;
21: import org.evosuite.runtime.EvoRunnerParameters;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class JSONObject_87_tmp__ESTest extends JSONObject_87_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       JSONObject jSONObject0 = new JSONObject(true);
30:       JSONObject jSONObject1 = jSONObject0.fluentClear();
31:       JSONObject jSONObject2 = jSONObject1.fluentPut("{\"x\":\"hello\",\"y\":7,\"z\":true,\"a\":[],\"b\":{\"x\":99}}", jSONObject0);
32:       ParserConfig parserConfig0 = ParserConfig.getGlobalInstance();
33:       Class<JSONObject> class0 = JSONObject.class;
34:       jSONObject0.toJavaObject((Class<HashMap<AbstractMap.SimpleImmutableEntry, Integer>>) class0, parserConfig0, (-3509));
35:       jSONObject2.fluentPutAll(jSONObject1);
36:       String string0 = " .ZN,(@oD;V]G)[IZ";
37:       SerializeConfig serializeConfig0 = new SerializeConfig(true);
38:       SerializeFilter[] serializeFilterArray0 = new SerializeFilter[0];
39:       SerializerFeature[] serializerFeatureArray0 = new SerializerFeature[1];
40:       SerializerFeature serializerFeature0 = SerializerFeature.DisableCircularReferenceDetect;
41:       serializerFeatureArray0[0] = serializerFeature0;
42:       // Undeclared exception!
43:       try { 
44:         JSON.toJSONBytes((Charset) null, (Object) null, serializeConfig0, serializeFilterArray0, "fastjson.parser.autoTypeAccept", (-3509), serializerFeatureArray0);
45:         fail("Expecting exception: NullPointerException");
46:       
47:       } catch(NullPointerException e) {
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_87_1590160455926/com/alibaba/fastjson/JSONObject_87_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 15:14:15 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONObject_87_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONObject"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
76:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONObject_87_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
89:       "com.alibaba.fastjson.serializer.JSONSerializable",
90:       "com.alibaba.fastjson.serializer.SerializeWriter",
91:       "com.alibaba.fastjson.serializer.ReferenceCodec",
92:       "com.alibaba.fastjson.JSONException",
93:       "com.alibaba.fastjson.asm.TypeCollector$1",
94:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
95:       "com.alibaba.fastjson.serializer.ToStringSerializer",
96:       "com.alibaba.fastjson.serializer.SerialContext",
97:       "com.alibaba.fastjson.serializer.AfterFilter",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.TypeReference",
100:       "com.alibaba.fastjson.serializer.ObjectSerializer",
101:       "com.alibaba.fastjson.serializer.MapSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
106:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
107:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
108:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
109:       "com.alibaba.fastjson.util.FieldInfo",
110:       "com.alibaba.fastjson.annotation.JSONField",
111:       "com.alibaba.fastjson.serializer.PropertyFilter",
112:       "com.alibaba.fastjson.parser.SymbolTable",
113:       "com.alibaba.fastjson.serializer.NameFilter",
114:       "com.alibaba.fastjson.JSONArray",
115:       "com.alibaba.fastjson.JSONAware",
116:       "com.alibaba.fastjson.serializer.LongCodec",
117:       "com.alibaba.fastjson.serializer.EnumSerializer",
118:       "com.alibaba.fastjson.util.ASMClassLoader",
119:       "com.alibaba.fastjson.PropertyNamingStrategy",
120:       "com.alibaba.fastjson.parser.JSONToken",
121:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
122:       "com.alibaba.fastjson.serializer.AppendableSerializer",
123:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
124:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
125:       "com.alibaba.fastjson.serializer.ContextValueFilter",
126:       "com.alibaba.fastjson.util.ServiceLoader",
127:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
128:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
129:       "com.alibaba.fastjson.parser.DefaultJSONParser",
130:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
131:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
132:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
133:       "com.alibaba.fastjson.serializer.BeanContext",
134:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
135:       "com.alibaba.fastjson.util.IdentityHashMap",
136:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
137:       "com.alibaba.fastjson.JSON",
138:       "com.alibaba.fastjson.serializer.StringCodec",
139:       "com.alibaba.fastjson.serializer.SerializeFilterable",
140:       "com.alibaba.fastjson.JSONWriter",
141:       "com.alibaba.fastjson.asm.Opcodes",
142:       "com.alibaba.fastjson.JSONReader",
143:       "com.alibaba.fastjson.JSONStreamAware",
144:       "com.alibaba.fastjson.asm.MethodWriter",
145:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
146:       "com.alibaba.fastjson.serializer.SerializerFeature",
147:       "com.alibaba.fastjson.serializer.CalendarCodec",
148:       "com.alibaba.fastjson.util.IOUtils",
149:       "com.alibaba.fastjson.util.TypeUtils",
150:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
151:       "com.alibaba.fastjson.asm.ClassReader",
152:       "com.alibaba.fastjson.spi.Module",
153:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
154:       "com.alibaba.fastjson.serializer.MiscCodec",
155:       "com.alibaba.fastjson.util.IOUtils$1",
156:       "com.alibaba.fastjson.serializer.IntegerCodec",
157:       "com.alibaba.fastjson.serializer.SerializeFilter",
158:       "com.alibaba.fastjson.JSONPObject",
159:       "com.alibaba.fastjson.serializer.PascalNameFilter",
160:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
161:       "com.alibaba.fastjson.serializer.BeforeFilter",
162:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
163:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
164:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
165:       "com.alibaba.fastjson.JSONObject",
166:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
167:       "com.alibaba.fastjson.serializer.CharacterCodec",
168:       "com.alibaba.fastjson.asm.TypeCollector",
169:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
170:       "com.alibaba.fastjson.asm.ByteVector",
171:       "com.alibaba.fastjson.parser.JSONLexer",
172:       "com.alibaba.fastjson.util.ASMClassLoader$1",
173:       "com.alibaba.fastjson.asm.Label",
174:       "com.alibaba.fastjson.asm.FieldWriter",
175:       "com.alibaba.fastjson.serializer.JSONSerializer",
176:       "com.alibaba.fastjson.util.JavaBeanInfo",
177:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
178:       "com.alibaba.fastjson.serializer.SerializeConfig",
179:       "com.alibaba.fastjson.serializer.AtomicCodec",
180:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
181:       "com.alibaba.fastjson.asm.Type",
182:       "com.alibaba.fastjson.serializer.FieldSerializer",
183:       "com.alibaba.fastjson.serializer.FloatCodec",
184:       "com.alibaba.fastjson.parser.JSONReaderScanner",
185:       "com.alibaba.fastjson.serializer.ValueFilter",
186:       "com.alibaba.fastjson.JSONPathException",
187:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
188:       "com.alibaba.fastjson.serializer.Labels",
189:       "com.alibaba.fastjson.serializer.CollectionCodec",
190:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
191:       "com.alibaba.fastjson.serializer.CharArrayCodec",
192:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
193:       "com.alibaba.fastjson.asm.MethodVisitor",
194:       "com.alibaba.fastjson.annotation.JSONCreator",
195:       "com.alibaba.fastjson.asm.MethodCollector",
196:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
197:       "com.alibaba.fastjson.annotation.JSONType",
198:       "com.alibaba.fastjson.serializer.LabelFilter",
199:       "com.alibaba.fastjson.util.UTF8Decoder",
200:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
201:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
202:       "com.alibaba.fastjson.serializer.DoubleSerializer",
203:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
204:       "com.alibaba.fastjson.serializer.BooleanCodec",
205:       "com.alibaba.fastjson.parser.Feature",
206:       "com.alibaba.fastjson.parser.ParserConfig",
207:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
208:       "com.alibaba.fastjson.parser.ParseContext"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONObject_87_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "com.alibaba.fastjson.parser.Feature",
217:       "com.alibaba.fastjson.serializer.SerializerFeature",
218:       "com.alibaba.fastjson.util.IOUtils$1",
219:       "com.alibaba.fastjson.util.IOUtils",
220:       "com.alibaba.fastjson.JSON",
221:       "com.alibaba.fastjson.JSONObject",
222:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
223:       "com.alibaba.fastjson.util.IdentityHashMap",
224:       "com.alibaba.fastjson.util.ASMUtils",
225:       "com.alibaba.fastjson.parser.SymbolTable",
226:       "com.alibaba.fastjson.util.TypeUtils",
227:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
228:       "com.alibaba.fastjson.util.ASMClassLoader$1",
229:       "com.alibaba.fastjson.util.ASMClassLoader",
230:       "com.alibaba.fastjson.serializer.MiscCodec",
231:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
232:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
233:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
234:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
235:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
236:       "com.alibaba.fastjson.serializer.DateCodec",
237:       "com.alibaba.fastjson.serializer.CalendarCodec",
238:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
239:       "com.alibaba.fastjson.serializer.CollectionCodec",
240:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
241:       "com.alibaba.fastjson.serializer.StringCodec",
242:       "com.alibaba.fastjson.serializer.CharacterCodec",
243:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
244:       "com.alibaba.fastjson.serializer.IntegerCodec",
245:       "com.alibaba.fastjson.serializer.LongCodec",
246:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
247:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
248:       "com.alibaba.fastjson.serializer.FloatCodec",
249:       "com.alibaba.fastjson.serializer.BooleanCodec",
250:       "com.alibaba.fastjson.serializer.CharArrayCodec",
251:       "com.alibaba.fastjson.serializer.ReferenceCodec",
252:       "com.alibaba.fastjson.serializer.AtomicCodec",
253:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
254:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
255:       "com.alibaba.fastjson.parser.ParserConfig",
256:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
257:       "com.alibaba.fastjson.serializer.DoubleSerializer",
258:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
259:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
260:       "com.alibaba.fastjson.serializer.AppendableSerializer",
261:       "com.alibaba.fastjson.serializer.ToStringSerializer",
262:       "com.alibaba.fastjson.serializer.SerializeConfig",
263:       "com.alibaba.fastjson.parser.DefaultJSONParser",
264:       "com.alibaba.fastjson.parser.JSONLexerBase",
265:       "com.alibaba.fastjson.parser.JSONScanner",
266:       "com.alibaba.fastjson.parser.ParseContext",
267:       "com.alibaba.fastjson.JSONArray",
268:       "com.alibaba.fastjson.serializer.SerializeWriter",
269:       "com.alibaba.fastjson.util.ServiceLoader",
270:       "com.alibaba.fastjson.util.JavaBeanInfo",
271:       "com.alibaba.fastjson.asm.ClassWriter",
272:       "com.alibaba.fastjson.asm.ByteVector",
273:       "com.alibaba.fastjson.asm.Item",
274:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
275:       "com.alibaba.fastjson.asm.MethodWriter",
276:       "com.alibaba.fastjson.asm.Label",
277:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
278:       "com.alibaba.fastjson.parser.JSONToken",
279:       "com.alibaba.fastjson.JSONException",
280:       "com.alibaba.fastjson.serializer.SerializeFilterable",
281:       "com.alibaba.fastjson.serializer.JSONSerializer",
282:       "com.alibaba.fastjson.serializer.MapSerializer",
283:       "com.alibaba.fastjson.serializer.SerialContext",
284:       "com.alibaba.fastjson.asm.ClassReader",
285:       "com.alibaba.fastjson.asm.TypeCollector$1",
286:       "com.alibaba.fastjson.asm.TypeCollector",
287:       "com.alibaba.fastjson.asm.Type",
288:       "com.alibaba.fastjson.asm.MethodCollector",
289:       "com.alibaba.fastjson.util.FieldInfo",
290:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
291:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
292:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
293:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
294:       "com.alibaba.fastjson.asm.FieldWriter",
295:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
296:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
297:       "com.alibaba.fastjson.serializer.FieldSerializer",
298:       "com.alibaba.fastjson.serializer.BeanContext",
299:       "com.alibaba.fastjson.util.UTF8Decoder",
300:       "com.alibaba.fastjson.parser.JSONReaderScanner",
301:       "com.alibaba.fastjson.TypeReference$1",
302:       "com.alibaba.fastjson.TypeReference",
303:       "com.alibaba.fastjson.serializer.ArraySerializer",
304:       "com.alibaba.fastjson.serializer.PascalNameFilter",
305:       "com.alibaba.fastjson.serializer.ListSerializer",
306:       "com.alibaba.fastjson.serializer.EnumSerializer",
307:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
308:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
309:       "com.alibaba.fastjson.util.RyuDouble",
310:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
311:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
312:       "com.alibaba.fastjson.PropertyNamingStrategy$1"
313:     );
314:   }
315: }

[MASTER] 17:14:15.965 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
JSONObject jSONObject0 = new JSONObject(true);
JSONObject jSONObject1 = jSONObject0.fluentClear();
JSONObject jSONObject2 = jSONObject1.fluentPut("{\"x\":\"hello\",\"y\":7,\"z\":true,\"a\":[],\"b\":{\"x\":99}}", jSONObject0);
ParserConfig parserConfig0 = ParserConfig.getGlobalInstance();
Class<JSONObject> class0 = JSONObject.class;
jSONObject0.toJavaObject((Class<HashMap<AbstractMap.SimpleImmutableEntry, Integer>>) class0, parserConfig0, (-3509));
jSONObject2.fluentPutAll(jSONObject1);
String string0 = " .ZN,(@oD;V]G)[IZ";
SerializeConfig serializeConfig0 = new SerializeConfig(true);
SerializeFilter[] serializeFilterArray0 = new SerializeFilter[0];
SerializerFeature[] serializerFeatureArray0 = new SerializerFeature[1];
SerializerFeature serializerFeature0 = SerializerFeature.DisableCircularReferenceDetect;
serializerFeatureArray0[0] = serializerFeature0;
JSON.toJSONBytes((Charset) null, (Object) null, serializeConfig0, serializeFilterArray0, "fastjson.parser.autoTypeAccept", (-3509), serializerFeatureArray0);

[MASTER] 17:14:17.275 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_129_1590160457252/com/alibaba/fastjson/JSONObject_129_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_129_1590160457252/com/alibaba/fastjson/JSONObject_129_tmp__ESTest_scaffolding.java]]
[MASTER] 17:14:17.275 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:14:17.275 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:14:17.276 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.Byte> cannot be converted to java.lang.Class<java.util.HashMap<java.util.AbstractMap.SimpleImmutableEntry,java.lang.Integer>>: 27
[MASTER] 17:14:17.276 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_129_1590160457252/com/alibaba/fastjson/JSONObject_129_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 15:14:17 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.alibaba.fastjson.JSONObject;
11: import com.alibaba.fastjson.parser.ParserConfig;
12: import java.util.AbstractMap;
13: import java.util.Collection;
14: import java.util.HashMap;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class JSONObject_129_tmp__ESTest extends JSONObject_129_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       JSONObject jSONObject0 = new JSONObject(1842);
25:       ParserConfig parserConfig0 = ParserConfig.getGlobalInstance();
26:       Class<Byte> class0 = Byte.TYPE;
27:       jSONObject0.toJavaObject((Class<HashMap<AbstractMap.SimpleImmutableEntry, Integer>>) class0, parserConfig0, 4);
28:       JSONObject jSONObject1 = new JSONObject(1842, false);
29:       Collection<Object> collection0 = jSONObject1.values();
30:       assertFalse(collection0.contains(1842));
31:   }
32: }
RegularFileObject[/tmp/EvoSuite_129_1590160457252/com/alibaba/fastjson/JSONObject_129_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 15:14:17 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONObject_129_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONObject"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
76:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONObject_129_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
89:       "com.alibaba.fastjson.serializer.JSONSerializable",
90:       "com.alibaba.fastjson.serializer.SerializeWriter",
91:       "com.alibaba.fastjson.serializer.ReferenceCodec",
92:       "com.alibaba.fastjson.JSONException",
93:       "com.alibaba.fastjson.asm.TypeCollector$1",
94:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
95:       "com.alibaba.fastjson.serializer.ToStringSerializer",
96:       "com.alibaba.fastjson.serializer.SerialContext",
97:       "com.alibaba.fastjson.serializer.AfterFilter",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.TypeReference",
100:       "com.alibaba.fastjson.serializer.ObjectSerializer",
101:       "com.alibaba.fastjson.serializer.MapSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
106:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
107:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
108:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
109:       "com.alibaba.fastjson.util.FieldInfo",
110:       "com.alibaba.fastjson.annotation.JSONField",
111:       "com.alibaba.fastjson.serializer.PropertyFilter",
112:       "com.alibaba.fastjson.parser.SymbolTable",
113:       "com.alibaba.fastjson.serializer.NameFilter",
114:       "com.alibaba.fastjson.JSONArray",
115:       "com.alibaba.fastjson.JSONAware",
116:       "com.alibaba.fastjson.serializer.LongCodec",
117:       "com.alibaba.fastjson.serializer.EnumSerializer",
118:       "com.alibaba.fastjson.util.ASMClassLoader",
119:       "com.alibaba.fastjson.PropertyNamingStrategy",
120:       "com.alibaba.fastjson.parser.JSONToken",
121:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
122:       "com.alibaba.fastjson.serializer.AppendableSerializer",
123:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
124:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
125:       "com.alibaba.fastjson.serializer.ContextValueFilter",
126:       "com.alibaba.fastjson.util.ServiceLoader",
127:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
128:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
129:       "com.alibaba.fastjson.parser.DefaultJSONParser",
130:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
131:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
132:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
133:       "com.alibaba.fastjson.serializer.BeanContext",
134:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
135:       "com.alibaba.fastjson.util.IdentityHashMap",
136:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
137:       "com.alibaba.fastjson.JSON",
138:       "com.alibaba.fastjson.serializer.StringCodec",
139:       "com.alibaba.fastjson.serializer.SerializeFilterable",
140:       "com.alibaba.fastjson.JSONWriter",
141:       "com.alibaba.fastjson.asm.Opcodes",
142:       "com.alibaba.fastjson.JSONReader",
143:       "com.alibaba.fastjson.JSONStreamAware",
144:       "com.alibaba.fastjson.asm.MethodWriter",
145:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
146:       "com.alibaba.fastjson.serializer.SerializerFeature",
147:       "com.alibaba.fastjson.serializer.CalendarCodec",
148:       "com.alibaba.fastjson.util.IOUtils",
149:       "com.alibaba.fastjson.util.TypeUtils",
150:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
151:       "com.alibaba.fastjson.asm.ClassReader",
152:       "com.alibaba.fastjson.spi.Module",
153:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
154:       "com.alibaba.fastjson.serializer.MiscCodec",
155:       "com.alibaba.fastjson.util.IOUtils$1",
156:       "com.alibaba.fastjson.serializer.IntegerCodec",
157:       "com.alibaba.fastjson.serializer.SerializeFilter",
158:       "com.alibaba.fastjson.JSONPObject",
159:       "com.alibaba.fastjson.serializer.PascalNameFilter",
160:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
161:       "com.alibaba.fastjson.serializer.BeforeFilter",
162:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
163:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
164:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
165:       "com.alibaba.fastjson.JSONObject",
166:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
167:       "com.alibaba.fastjson.serializer.CharacterCodec",
168:       "com.alibaba.fastjson.asm.TypeCollector",
169:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
170:       "com.alibaba.fastjson.asm.ByteVector",
171:       "com.alibaba.fastjson.parser.JSONLexer",
172:       "com.alibaba.fastjson.util.ASMClassLoader$1",
173:       "com.alibaba.fastjson.asm.Label",
174:       "com.alibaba.fastjson.asm.FieldWriter",
175:       "com.alibaba.fastjson.serializer.JSONSerializer",
176:       "com.alibaba.fastjson.util.JavaBeanInfo",
177:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
178:       "com.alibaba.fastjson.serializer.SerializeConfig",
179:       "com.alibaba.fastjson.serializer.AtomicCodec",
180:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
181:       "com.alibaba.fastjson.asm.Type",
182:       "com.alibaba.fastjson.serializer.FieldSerializer",
183:       "com.alibaba.fastjson.serializer.FloatCodec",
184:       "com.alibaba.fastjson.parser.JSONReaderScanner",
185:       "com.alibaba.fastjson.serializer.ValueFilter",
186:       "com.alibaba.fastjson.JSONPathException",
187:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
188:       "com.alibaba.fastjson.serializer.Labels",
189:       "com.alibaba.fastjson.serializer.CollectionCodec",
190:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
191:       "com.alibaba.fastjson.serializer.CharArrayCodec",
192:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
193:       "com.alibaba.fastjson.asm.MethodVisitor",
194:       "com.alibaba.fastjson.annotation.JSONCreator",
195:       "com.alibaba.fastjson.asm.MethodCollector",
196:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
197:       "com.alibaba.fastjson.annotation.JSONType",
198:       "com.alibaba.fastjson.serializer.LabelFilter",
199:       "com.alibaba.fastjson.util.UTF8Decoder",
200:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
201:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
202:       "com.alibaba.fastjson.serializer.DoubleSerializer",
203:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
204:       "com.alibaba.fastjson.serializer.BooleanCodec",
205:       "com.alibaba.fastjson.parser.Feature",
206:       "com.alibaba.fastjson.parser.ParserConfig",
207:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
208:       "com.alibaba.fastjson.parser.ParseContext"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONObject_129_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "com.alibaba.fastjson.parser.Feature",
217:       "com.alibaba.fastjson.serializer.SerializerFeature",
218:       "com.alibaba.fastjson.util.IOUtils$1",
219:       "com.alibaba.fastjson.util.IOUtils",
220:       "com.alibaba.fastjson.JSON",
221:       "com.alibaba.fastjson.JSONObject",
222:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
223:       "com.alibaba.fastjson.util.IdentityHashMap",
224:       "com.alibaba.fastjson.util.ASMUtils",
225:       "com.alibaba.fastjson.parser.SymbolTable",
226:       "com.alibaba.fastjson.util.TypeUtils",
227:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
228:       "com.alibaba.fastjson.util.ASMClassLoader$1",
229:       "com.alibaba.fastjson.util.ASMClassLoader",
230:       "com.alibaba.fastjson.serializer.MiscCodec",
231:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
232:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
233:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
234:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
235:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
236:       "com.alibaba.fastjson.serializer.DateCodec",
237:       "com.alibaba.fastjson.serializer.CalendarCodec",
238:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
239:       "com.alibaba.fastjson.serializer.CollectionCodec",
240:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
241:       "com.alibaba.fastjson.serializer.StringCodec",
242:       "com.alibaba.fastjson.serializer.CharacterCodec",
243:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
244:       "com.alibaba.fastjson.serializer.IntegerCodec",
245:       "com.alibaba.fastjson.serializer.LongCodec",
246:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
247:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
248:       "com.alibaba.fastjson.serializer.FloatCodec",
249:       "com.alibaba.fastjson.serializer.BooleanCodec",
250:       "com.alibaba.fastjson.serializer.CharArrayCodec",
251:       "com.alibaba.fastjson.serializer.ReferenceCodec",
252:       "com.alibaba.fastjson.serializer.AtomicCodec",
253:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
254:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
255:       "com.alibaba.fastjson.parser.ParserConfig",
256:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
257:       "com.alibaba.fastjson.serializer.DoubleSerializer",
258:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
259:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
260:       "com.alibaba.fastjson.serializer.AppendableSerializer",
261:       "com.alibaba.fastjson.serializer.ToStringSerializer",
262:       "com.alibaba.fastjson.serializer.SerializeConfig",
263:       "com.alibaba.fastjson.parser.DefaultJSONParser",
264:       "com.alibaba.fastjson.parser.JSONLexerBase",
265:       "com.alibaba.fastjson.parser.JSONScanner",
266:       "com.alibaba.fastjson.parser.ParseContext",
267:       "com.alibaba.fastjson.JSONArray",
268:       "com.alibaba.fastjson.serializer.SerializeWriter",
269:       "com.alibaba.fastjson.util.ServiceLoader",
270:       "com.alibaba.fastjson.util.JavaBeanInfo",
271:       "com.alibaba.fastjson.asm.ClassWriter",
272:       "com.alibaba.fastjson.asm.ByteVector",
273:       "com.alibaba.fastjson.asm.Item",
274:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
275:       "com.alibaba.fastjson.asm.MethodWriter",
276:       "com.alibaba.fastjson.asm.Label",
277:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
278:       "com.alibaba.fastjson.parser.JSONToken",
279:       "com.alibaba.fastjson.JSONException",
280:       "com.alibaba.fastjson.serializer.SerializeFilterable",
281:       "com.alibaba.fastjson.serializer.JSONSerializer",
282:       "com.alibaba.fastjson.serializer.MapSerializer",
283:       "com.alibaba.fastjson.serializer.SerialContext",
284:       "com.alibaba.fastjson.asm.ClassReader",
285:       "com.alibaba.fastjson.asm.TypeCollector$1",
286:       "com.alibaba.fastjson.asm.TypeCollector",
287:       "com.alibaba.fastjson.asm.Type",
288:       "com.alibaba.fastjson.asm.MethodCollector",
289:       "com.alibaba.fastjson.util.FieldInfo",
290:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
291:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
292:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
293:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
294:       "com.alibaba.fastjson.asm.FieldWriter",
295:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
296:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
297:       "com.alibaba.fastjson.serializer.FieldSerializer",
298:       "com.alibaba.fastjson.serializer.BeanContext",
299:       "com.alibaba.fastjson.util.UTF8Decoder",
300:       "com.alibaba.fastjson.parser.JSONReaderScanner",
301:       "com.alibaba.fastjson.TypeReference$1",
302:       "com.alibaba.fastjson.TypeReference",
303:       "com.alibaba.fastjson.serializer.ArraySerializer",
304:       "com.alibaba.fastjson.serializer.PascalNameFilter",
305:       "com.alibaba.fastjson.serializer.ListSerializer",
306:       "com.alibaba.fastjson.serializer.EnumSerializer",
307:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
308:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
309:       "com.alibaba.fastjson.util.RyuDouble",
310:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
311:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
312:       "com.alibaba.fastjson.PropertyNamingStrategy$1"
313:     );
314:   }
315: }

[MASTER] 17:14:17.276 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
JSONObject jSONObject0 = new JSONObject(1842);
ParserConfig parserConfig0 = ParserConfig.getGlobalInstance();
Class<Byte> class0 = Byte.TYPE;
jSONObject0.toJavaObject((Class<HashMap<AbstractMap.SimpleImmutableEntry, Integer>>) class0, parserConfig0, 4);
JSONObject jSONObject1 = new JSONObject(1842, false);
Collection<Object> collection0 = jSONObject1.values();
assertFalse(collection0.contains(1842));


[MASTER] 17:14:48.359 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
[MASTER] 17:14:48.361 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'JSONObject_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.parser.DefaultJSONParser
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONWriter
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 12809
* Connecting to master process on port 12810
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONWriter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 429
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 130 / 429
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:15:43.196 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:15:43.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.DefaultJSONParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 3512
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 650 / 3512
[MASTER] 17:15:44.266 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:15:44.267 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:15:44.276 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 17:15:44.276 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 17:15:44.277 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumMap<K, V> : Type points to itself
[MASTER] 17:15:44.277 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumSet<E> : Type points to itself
[MASTER] 17:15:44.278 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashSet<E> : Type points to itself
[MASTER] 17:15:44.278 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Hashtable<K, V> : Type points to itself
[MASTER] 17:15:44.278 [logback-2] ERROR TestCluster - Failed to check cache for java.util.IdentityHashMap<K, V> : Type points to itself
[MASTER] 17:15:44.278 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashMap<K, V> : Type points to itself
[MASTER] 17:15:44.278 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 17:15:44.279 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Stack<E> : Type points to itself
[MASTER] 17:15:44.280 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeMap<K, V> : Type points to itself
[MASTER] 17:15:44.280 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 17:15:44.281 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 17:16:19.403 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.ParameterizedTypeImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.BeanContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 17:16:19.666 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: No generators of type java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>
[MASTER] 17:16:23.490 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.BeanContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 17:16:29.228 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 17:16:30.623 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for java.lang.reflect.Constructor<java.text.NumberFormat> canUseFunctionalMocks=false, canBeMocked: false
[MASTER] 17:16:33.249 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.BeanContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: No generators of type java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>
[MASTER] 17:16:40.776 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.GenericArrayTypeImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.JavaBeanSerializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.SerializeBeanInfo due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: No generators of type java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>
[MASTER] 17:16:56.666 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
[MASTER] 17:17:16.887 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 17:17:56.612 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Search finished after 182s and 2262 generations, 784851 statements, best individual has fitness: 32.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 97
* Number of covered goals: 97
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 76
* Number of covered goals: 71
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 148
* Number of covered goals: 146
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 76
* Number of covered goals: 70
* Generated 32 tests with total length 110
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 17:18:49.284 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Search finished after 186s and 176 generations, 91064 statements, best individual has fitness: 1183.0
[MASTER] 17:18:50.934 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.executedAndThenSendIndividualToMaster(StatisticsSender.java:98) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTests(TestSuiteGenerator.java:687) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:245) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_BitSet.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Minimizing test suite
* Writing tests to file
* Writing JUnit test case 'JSONWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
[MASTER] 17:18:56.769 [main] ERROR RuntimeVariable - Obtained invalid goal count: covered 437 out of 429
[MASTER] 17:18:56.769 [main] ERROR SearchStatistics - Not going to write down statistics data, as some data is invalid
[MASTER] 17:18:56.870 [main] ERROR TestGeneration - failed to write statistics data
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 65%
* Total number of goals: 973
* Number of covered goals: 636
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 707
* Number of covered goals: 446
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 64
* Number of covered goals: 64
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 79%
* Total number of goals: 897
* Number of covered goals: 706
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 102
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 63
* Number of covered goals: 63
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 63
* Number of covered goals: 59
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 58%
* Total number of goals: 707
* Number of covered goals: 411
* Generated 206 tests with total length 819
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'DefaultJSONParser_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s7/fastjson/evosuite-tests
* Done!

* Computation finished
