* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.internal.bind.JsonTreeReader
* Starting Client-0
* Connecting to master process on port 12811
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.bind.JsonTreeReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 830
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 253 / 830
[MASTER] 15:30:37.253 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 15:30:37.254 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 62s and 653 generations, 143913 statements, best individual has fitness: 136.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 162
* Number of covered goals: 152
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 103
* Number of covered goals: 94
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 397
* Number of covered goals: 331
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 103
* Number of covered goals: 94
* Generated 78 tests with total length 293
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonTreeReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.JsonElement
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.JsonPrimitive
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.Gson
* Starting Client-0
* Connecting to master process on port 12807
* Starting Client-0
* Connecting to master process on port 12809
* Starting Client-0
* Connecting to master process on port 12812
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonPrimitive
* Test criteria:
  - Line Coverage
  - Branch Coverage
* Finished analyzing classpath
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Generating tests for class com.google.gson.JsonElement
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 433
* Using seed 7
* Starting evolution
* Total number of test goals for DYNAMOSA: 265
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 183 / 265
* Initial Number of Goals in DynaMOSA = 165 / 433
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.Gson
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 991
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 599 / 991
[MASTER] 15:33:20.580 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 15:33:20.582 [logback-2] ERROR TestCluster - Failed to check cache for com.google.gson.Gson.FutureTypeAdapter<T> : Type points to itself
* Search finished after 61s and 325 generations, 35320 statements, best individual has fitness: 114.0
* Search finished after 62s and 164 generations, 54614 statements, best individual has fitness: 61.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 62
* Number of covered goals: 60
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 77
* Number of covered goals: 70
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 91
* Number of covered goals: 79
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 77%
* Total number of goals: 82
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 77
* Number of covered goals: 70
* Generated 72 tests with total length 210
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Minimizing test suite
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
* Search finished after 64s and 38 generations, 13669 statements, best individual has fitness: 297.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 36
* Number of covered goals: 34
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 97%
* Total number of goals: 39
* Number of covered goals: 38
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 124
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 22
* Number of covered goals: 19
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Generated 71 tests with total length 173
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 333
* Number of covered goals: 271
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 74%
* Total number of goals: 113
* Number of covered goals: 84
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 64%
* Total number of goals: 292
* Number of covered goals: 186
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 70
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 35
* Number of covered goals: 34
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 35
* Number of covered goals: 30
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 113
* Number of covered goals: 81
* Generated 74 tests with total length 258
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Writing tests to file
* Writing JUnit test case 'JsonPrimitive_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Resulting test suite's mutation score: 44%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 15
* Writing tests to file
* Writing JUnit test case 'Gson_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
* Writing tests to file
* Writing JUnit test case 'JsonElement_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.stream.JsonReader
* Starting Client-0
* Connecting to master process on port 12808
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.stream.JsonReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2813
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 438 / 2813
* Search finished after 63s and 213 generations, 63352 statements, best individual has fitness: 959.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 671
* Number of covered goals: 474
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 677
* Number of covered goals: 458
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 78
* Number of covered goals: 78
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 709
* Number of covered goals: 426
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 35
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 22
* Number of covered goals: 19
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 677
* Number of covered goals: 453
* Generated 153 tests with total length 582
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.JsonObject
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.internal.LinkedHashTreeMap
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.JsonArray
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.internal.bind.JsonTreeWriter
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 12807
* Starting Client-0
* Connecting to master process on port 12808
* Connecting to master process on port 12809
* Starting Client-0
* Connecting to master process on port 12812
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonObject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 221
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 142 / 221
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonArray
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 427
* Using seed 7
* Starting evolution
[MASTER] 15:40:02.252 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 15:40:02.252 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Initial Number of Goals in DynaMOSA = 249 / 427
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.bind.JsonTreeWriter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 443
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 202 / 443
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.LinkedHashTreeMap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1627
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 578 / 1627
[MASTER] 15:40:03.141 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 15:40:03.143 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 15:40:13.253 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 61s and 407 generations, 66149 statements, best individual has fitness: 48.0
* Search finished after 61s and 852 generations, 157387 statements, best individual has fitness: 54.0
* Minimizing test suite
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 83
* Number of covered goals: 79
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 74
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 87
* Number of covered goals: 78
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 93
* Number of covered goals: 80
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 74
* Number of covered goals: 67
* Generated 56 tests with total length 197
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 63s and 13 generations, 9693 statements, best individual has fitness: 650.0
* Minimizing test suite
* Search finished after 64s and 345 generations, 57350 statements, best individual has fitness: 84.0
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 82
* Number of covered goals: 42
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Generated 37 tests with total length 104
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 43
* Number of covered goals: 43
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 70
* Number of covered goals: 68
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 64%
* Total number of goals: 109
* Number of covered goals: 70
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 30
* Number of covered goals: 29
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 94 tests with total length 307
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 82%
* Compiling and checking tests
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 387
* Number of covered goals: 260
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 262
* Number of covered goals: 144
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 66%
* Total number of goals: 588
* Number of covered goals: 391
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 34
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 47
* Number of covered goals: 44
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 47
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 262
* Number of covered goals: 142
* Generated 54 tests with total length 223
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Writing tests to file
* Writing JUnit test case 'JsonTreeWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
* Writing tests to file
* Writing JUnit test case 'JsonObject_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
[MASTER] 15:41:21.388 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 15:41:21.389 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsonArray jsonArray0 = new JsonArray(2147483645);

* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonArray_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
[MASTER] 15:41:27.353 [main] ERROR RuntimeVariable - Obtained invalid goal count: covered 428 out of 427
[MASTER] 15:41:27.354 [main] ERROR SearchStatistics - Not going to write down statistics data, as some data is invalid
[MASTER] 15:41:27.454 [main] ERROR TestGeneration - failed to write statistics data
* Writing tests to file
* Writing JUnit test case 'LinkedHashTreeMap_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.stream.JsonWriter
* Starting Client-0
* Connecting to master process on port 12807
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.stream.JsonWriter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1024
* Using seed 7
* Starting evolution
* Initial Number of Goals in DynaMOSA = 410 / 1024
* Search finished after 61s and 501 generations, 168836 statements, best individual has fitness: 139.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 179
* Number of covered goals: 171
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 117
* Number of covered goals: 104
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 468
* Number of covered goals: 403
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 97
* Number of covered goals: 83
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 117
* Number of covered goals: 96
* Generated 76 tests with total length 323
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s7/gson/evosuite-tests
* Done!

* Computation finished
