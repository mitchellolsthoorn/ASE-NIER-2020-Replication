* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONValidator
* Starting Client-0
* Connecting to master process on port 9922
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONValidator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1127
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 268 / 1127
* Search finished after 182s and 64 generations, 21944 statements, best individual has fitness: 163.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 266
* Number of covered goals: 223
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 212
* Number of covered goals: 176
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 375
* Number of covered goals: 355
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 14
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 88%
* Total number of goals: 24
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 212
* Number of covered goals: 176
* Generated 71 tests with total length 192
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JSONValidator_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.parser.JSONReaderScanner
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONReader
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONObject
* Starting Client-0
* Connecting to master process on port 9922
* Starting Client-0
* Connecting to master process on port 9925
* Starting Client-0
* Connecting to master process on port 9928
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.JSONReaderScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 14:33:46.280 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 14:33:46.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Total number of test goals for DYNAMOSA: 1110
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 338 / 1110
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 740
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 232 / 740
[MASTER] 14:33:47.569 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 14:33:47.572 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
[MASTER] 14:33:48.350 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONObject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1211
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 496 / 1211
[MASTER] 14:33:49.606 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 14:33:49.606 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:33:49.606 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 14:33:49.614 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 14:34:04.050 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 14:34:09.045 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 14:34:09.046 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
[MASTER] 14:35:16.408 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 182s and 61 generations, 30941 statements, best individual has fitness: 208.0
* Search finished after 182s and 37 generations, 11030 statements, best individual has fitness: 547.0
* Minimizing test suite
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 157
* Number of covered goals: 50
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 115
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 20%
* Total number of goals: 266
* Number of covered goals: 54
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 37
* Number of covered goals: 15
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 72%
* Total number of goals: 25
* Number of covered goals: 18
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 115
* Number of covered goals: 26
* Generated 50 tests with total length 174
* Resulting test suite's coverage: 46% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 156
* Number of covered goals: 126
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 72%
* Total number of goals: 104
* Number of covered goals: 75
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 662
* Number of covered goals: 592
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 60%
* Total number of goals: 40
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 22
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 104
* Number of covered goals: 75
* Generated 75 tests with total length 213
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 185s and 93 generations, 34719 statements, best individual has fitness: 500.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 254
* Number of covered goals: 159
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 172
* Number of covered goals: 96
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 96%
* Total number of goals: 25
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 333
* Number of covered goals: 195
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 162
* Number of covered goals: 70
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 59
* Number of covered goals: 56
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 59
* Number of covered goals: 54
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 56%
* Total number of goals: 172
* Number of covered goals: 96
* Generated 94 tests with total length 264
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:37:05.019 [logback-2] ERROR ClassStateSupport - Could not initialize null: null
[MASTER] 14:37:05.030 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/parser/deserializer/AbstractDateDeserializer.deserialze(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/Object; @341: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[3]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @341
    flags: { }
    locals: { 'com/alibaba/fastjson/parser/deserializer/AbstractDateDeserializer', 'com/alibaba/fastjson/parser/DefaultJSONParser', 'java/lang/reflect/Type', 'java/lang/Object', 'java/lang/String', integer, 'com/alibaba/fastjson/parser/JSONLexer', top, top, top, 'java/lang/String', null, 'java/util/Locale', 'java/lang/String' }
    stack: { uninitialized 333, uninitialized 333, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 10b8 0022 2bb4 0036 3a06 b800 10b8
    0x0000010: 0022 1906 b900 3c01 0005 b800 4212 43b6
    0x0000020: 0047 b800 10a0 006b b800 10b8 0022 1906
    0x0000030: b900 4b01 0037 07b8 0010 b800 2219 0610
    0x0000040: 10b9 004e 0200 b800 10b8 0022 1250 1904
    0x0000050: b600 56b8 0042 1243 b600 47b8 0010 9900
    0x0000060: 11b8 0010 b800 2216 0714 0057 6937 07b8
    0x0000070: 0010 b800 2216 07b8 005e 3a09 b800 10b8
    0x0000080: 0022 b800 4212 5fb6 0047 b800 10a7 07b3
    0x0000090: 1906 b900 3c01 0007 b800 4212 60b6 0047
    0x00000a0: b800 10a0 04a6 b800 10b8 0022 1906 b900
    0x00000b0: 6401 003a 0ab8 0010 b800 2219 04b8 0042
    0x00000c0: 1265 b600 47b8 0010 c603 d2b8 0010 b800
    0x00000d0: 2212 6719 04b6 0056 b800 4212 68b6 0047
    0x00000e0: b800 1099 0041 2cc1 006a b800 4212 6bb6
    0x00000f0: 0047 b800 1099 002f 2cc0 006a b800 10b8
    0x0000100: 0022 b600 6e12 70b6 0056 b800 4212 71b6
    0x0000110: 0047 b800 1099 000f b800 10b8 0022 190a
    0x0000120: b800 77b0 b800 10b8 0022 013a 0bb8 0010
    0x0000130: b800 22bb 0079 5919 042b b400 36b9 007d
    0x0000140: 0100 b800 8399 0016 3a0c 3a0d 58bb 0085
    0x0000150: 5919 0d19 0db7 0088 a700 06b7 0089 3a0b
    0x0000160: b800 10b8 0022 b800 4212 8ab6 0047 b800
    0x0000170: 10a7 0097 b800 10b8 0022 3a0e b800 10b8
    0x0000180: 0022 1904 128c b600 90b8 0042 1291 b600
    0x0000190: 47b8 0010 9900 74b8 0010 b800 2219 0412
    0x00001a0: 8c12 93b6 0097 3a0f b800 10b8 0022 bb00
    0x00001b0: 7959 190f 2bb4 0036 b900 7d01 00b8 0083
    0x00001c0: 9900 163a 103a 1158 bb00 8559 1911 1911
    0x00001d0: b700 88a7 0006 b700 893a 0bb8 0010 b800
    0x00001e0: 22b8 0042 1298 b600 47b8 0010 a700 1cb8
    0x00001f0: 0010 b800 223a 12b8 0010 b800 2219 0e59
    0x0000200: 1299 129a b800 9ebf b800 10b8 0022 b200
    0x0000210: a4b8 0042 12a5 b600 47b8 0010 c600 17b8
    0x0000220: 0010 b800 2219 0b2b b400 36b9 00a9 0100
    0x0000230: b600 adb8 0010 b800 2219 0b19 0ab6 00b1
    0x0000240: 3a09 b800 10b8 0022 b800 4212 b2b6 0047
    0x0000250: b800 10a7 0014 b800 10b8 0022 3a0e b800
    0x0000260: 10b8 0022 013a 09b8 0010 b800 2219 09b8
    0x0000270: 0042 12b3 b600 47b8 0010 c701 34b2 00b7
    0x0000280: b200 bcb8 0042 12bd b600 47b8 0010 a601
    0x0000290: 20b8 0010 b800 22bb 0079 5919 04b2 00c0
    0x00002a0: b800 8399 0016 3a13 3a14 58bb 0085 5919
    0x00002b0: 1419 14b7 0088 a700 06b7 0089 3a0b b800
    0x00002c0: 10b8 0022 b800 4212 c1b6 0047 b800 10a7
    0x00002d0: 0097 b800 10b8 0022 3a0e b800 10b8 0022
    0x00002e0: 1904 128c b600 90b8 0042 12c2 b600 47b8
    0x00002f0: 0010 9900 74b8 0010 b800 2219 0412 8c12
    0x0000300: 93b6 0097 3a0f b800 10b8 0022 bb00 7959
    0x0000310: 190f 2bb4 0036 b900 7d01 00b8 0083 9900
    0x0000320: 163a 153a 1658 bb00 8559 1916 1916 b700
    0x0000330: 88a7 0006 b700 893a 0bb8 0010 b800 22b8
    0x0000340: 0042 12c3 b600 47b8 0010 a700 1cb8 0010
    0x0000350: b800 223a 12b8 0010 b800 2219 0e59 1299
    0x0000360: 129a b800 9ebf b800 10b8 0022 190b 2bb4
    0x0000370: 0036 b900 a901 00b6 00ad b800 10b8 0022
    0x0000380: 190b 190a b600 b13a 09b8 0010 b800 22b8
    0x0000390: 0042 12c4 b600 47b8 0010 a700 14b8 0010
    0x00003a0: b800 223a 0eb8 0010 b800 2201 3a09 b800
    0x00003b0: 10b8 0022 1909 b800 4212 c5b6 0047 b800
    0x00003c0: 10c7 00c5 b800 10b8 0022 1904 12c7 b600
    0x00003d0: 56b8 0042 12c8 b600 47b8 0010 9900 a119
    0x00003e0: 0ab8 0010 b800 22b6 00cb 1013 b800 4212
    0x00003f0: ccb6 0047 b800 10a0 0086 b800 10b8 0022
    0x0000400: bb00 7959 12ce b200 b7b8 0083 9900 163a
    0x0000410: 173a 1858 bb00 8559 1918 1918 b700 88a7
    0x0000420: 0006 b700 893a 0eb8 0010 b800 2219 0eb2
    0x0000430: 00a4 b600 adb8 0010 b800 2219 0e19 0ab6
    0x0000440: 00b1 3a09 b800 10b8 0022 b800 4212 cfb6
    0x0000450: 0047 b800 10a7 0031 b800 10b8 0022 3a0e
    0x0000460: b800 10b8 0022 013a 09b8 0010 b800 22b8
    0x0000470: 0042 12d0 b600 47b8 0010 a700 0cb8 0010
    0x0000480: b800 2201 3a09 b800 10b8 0022 b800 4212
    0x0000490: d1b6 0047 b800 10a7 000c b800 10b8 0022
    0x00004a0: 013a 09b8 0010 b800 2219 09b8 0042 12d2
    0x00004b0: b600 47b8 0010 c700 7fb8 0010 b800 2219
    0x00004c0: 0a3a 09b8 0010 b800 2219 0610 10b9 004e
    0x00004d0: 0200 b800 10b8 0022 1906 b200 d8b9 00db
    0x00004e0: 0200 b800 4212 dcb6 0047 b800 1099 0048
    0x00004f0: b800 10b8 0022 bb00 de59 190a b700 e13a
    0x0000500: 0bb8 0010 b800 2219 0bb6 00e4 b800 4212
    0x0000510: e5b6 0047 b800 1099 0013 b800 10b8 0022
    0x0000520: 190b b600 e9b6 00ef 3a09 b800 10b8 0022
    0x0000530: 190b b600 f2b8 0010 b800 22b8 0042 12f3
    0x0000540: b600 47b8 0010 a702 fa19 06b9 003c 0100
    0x0000550: 1008 b800 4212 f4b6 0047 b800 10a0 0027
    0x0000560: b800 10b8 0022 1906 b900 f601 00b8 0010
    0x0000570: b800 2201 3a09 b800 4212 f7b6 0047 b800
    0x0000580: 10a7 02bf b800 10b8 0022 1906 b900 3c01
    0x0000590: 0010 0cb8 0042 12f8 b600 47b8 0010 a001
    0x00005a0: abb8 0010 b800 2219 06b9 00f6 0100 b800
    0x00005b0: 10b8 0022 1906 b900 3c01 0007 b800 4212
    0x00005c0: f9b6 0047 b800 10a0 00c3 b800 10b8 0022
    0x00005d0: 1906 b900 6401 003a 0ab8 0010 b800 22b2
    0x00005e0: 00fd 190a b600 56b8 0042 12fe b600 47b8
    0x00005f0: 0010 9900 7bb8 0010 b800 2219 06b9 00f6
    0x0000600: 0100 b800 10b8 0022 2b10 11b6 0101 b800
    0x0000610: 10b8 0022 1906 b900 6401 003a 0bb8 0010
    0x0000620: b800 222b b601 0519 0b01 1906 b901 0801
    0x0000630: 00b6 010e 3a0e b800 10b8 0022 190e b800
    0x0000640: 4213 010f b600 47b8 0010 c600 0cb8 0010
    0x0000650: b800 2219 0e4d b800 10b8 0022 2b07 b601
    0x0000660: 01b8 0010 b800 222b 1010 b601 01b8 0010
    0x0000670: b800 2219 0605 b901 1202 00b8 0042 1301
    0x0000680: 13b6 0047 b800 10a7 001c b800 10b8 0022
    0x0000690: bb01 1559 1301 17b7 0118 5912 9912 9ab8
    0x00006a0: 009e bfb8 0010 b800 2219 06b9 003c 0100
    0x00006b0: 05b8 0042 1301 19b6 0047 b800 10a0 002e
    0x00006c0: b800 10b8 0022 1906 b900 4b01 0037 19b8
    0x00006d0: 0010 b800 2219 06b9 00f6 0100 b800 4213
    0x00006e0: 011a b600 47b8 0010 a700 33b8 0010 b800
    0x00006f0: 22bb 0115 59bb 011c 59b7 011d 1301 1fb6
    0x0000700: 0123 1906 b901 2601 00b6 0123 b601 29b7
    0x0000710: 0118 5912 9912 9ab8 009e bfb8 0010 b800
    0x0000720: 2216 19b8 005e 3a09 b800 10b8 0022 2b10
    0x0000730: 0db6 0101 b800 10b8 0022 b800 4213 012a
    0x0000740: b600 47b8 0010 a700 fa2b b601 2d05 b800
    0x0000750: 4213 012e b600 47b8 0010 a000 dab8 0010
    0x0000760: b800 222b 03b6 0131 b800 10b8 0022 2b10
    0x0000770: 10b6 0101 b800 10b8 0022 1906 b900 3c01
    0x0000780: 0007 b800 4213 0132 b600 47b8 0010 a000
    0x0000790: 5ab8 0010 b800 2213 0134 1906 b900 6401
    0x00007a0: 00b6 0056 b800 4213 0135 b600 47b8 0010
    0x00007b0: 9a00 1cb8 0010 b800 22bb 0115 5913 0117
    0x00007c0: b701 1859 1299 129a b800 9ebf b800 10b8
    0x00007d0: 0022 1906 b900 f601 00b8 0042 1301 36b6
    0x00007e0: 0047 b800 10a7 001c b800 10b8 0022 bb01
    0x00007f0: 1559 1301 17b7 0118 5912 9912 9ab8 009e
    0x0000800: bfb8 0010 b800 222b 1011 b601 01b8 0010
    0x0000810: b800 222b b601 393a 09b8 0010 b800 222b
    0x0000820: 100d b601 01b8 0042 1301 3ab6 0047 b800
    0x0000830: 10a7 000f b800 10b8 0022 2bb6 0139 3a09
    0x0000840: b800 10b8 0022 2a2b 2c2d 1909 b601 3eb0
    0x0000850:                                        
  Exception Handler Table:
    bci [301, 352] => handler: 372
    bci [424, 475] => handler: 495
    bci [563, 578] => handler: 598
    bci [657, 702] => handler: 722
    bci [774, 825] => handler: 845
    bci [890, 905] => handler: 925
    bci [1018, 1092] => handler: 1112
  Stackmap Table:
    append_frame(@111,Object[#56],Long)
    chop_frame(@144,1)
    full_frame(@292,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@347,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Null},{Uninitialized[#307],Uninitialized[#307],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@350,Object[#121])
    full_frame(@372,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121]},{Object[#46]})
    full_frame(@470,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121],Top,Top,Object[#46],Object[#82]},{Uninitialized[#430],Uninitialized[#430],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@473,Object[#121])
    same_locals_1_stack_item_frame(@495,Object[#46])
    full_frame(@520,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121]},{})
    same_frame(@563)
    same_locals_1_stack_item_frame(@598,Object[#48])
    full_frame(@615,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{})
    full_frame(@697,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{Uninitialized[#663],Uninitialized[#663],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@700,Object[#121])
    same_locals_1_stack_item_frame(@722,Object[#46])
    full_frame(@820,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121],Top,Top,Object[#46],Object[#82]},{Uninitialized[#780],Uninitialized[#780],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@823,Object[#121])
    same_locals_1_stack_item_frame(@845,Object[#46])
    full_frame(@870,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{})
    same_locals_1_stack_item_frame(@925,Object[#48])
    same_frame(@942)
    full_frame(@1058,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{Uninitialized[#1024],Uninitialized[#1024],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@1061,Object[#121])
    same_locals_1_stack_item_frame(@1112,Object[#48])
    same_frame(@1149)
    same_frame(@1158)
    full_frame(@1178,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@1187,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82]},{})
    full_frame(@1322,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#345],Object[#82],Object[#222]},{})
    chop_frame(@1333,1)
    full_frame(@1353,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    same_frame(@1412)
    full_frame(@1622,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#82],Top,Top,Object[#106]},{})
    full_frame(@1645,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@1674,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    full_frame(@1699,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    same_frame_extended(@1771)
    full_frame(@1819,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Long},{})
    full_frame(@1865,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    same_frame_extended(@1996)
    same_frame(@2024)
    same_frame(@2049)
    same_frame(@2100)
    append_frame(@2112,Top,Top,Object[#345])

[MASTER] 14:37:05.166 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.serializer.DateCodec: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/parser/deserializer/AbstractDateDeserializer.deserialze(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/Object; @341: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[3]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @341
    flags: { }
    locals: { 'com/alibaba/fastjson/parser/deserializer/AbstractDateDeserializer', 'com/alibaba/fastjson/parser/DefaultJSONParser', 'java/lang/reflect/Type', 'java/lang/Object', 'java/lang/String', integer, 'com/alibaba/fastjson/parser/JSONLexer', top, top, top, 'java/lang/String', null, 'java/util/Locale', 'java/lang/String' }
    stack: { uninitialized 333, uninitialized 333, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 10b8 0022 2bb4 0036 3a06 b800 10b8
    0x0000010: 0022 1906 b900 3c01 0005 b800 4212 43b6
    0x0000020: 0047 b800 10a0 006b b800 10b8 0022 1906
    0x0000030: b900 4b01 0037 07b8 0010 b800 2219 0610
    0x0000040: 10b9 004e 0200 b800 10b8 0022 1250 1904
    0x0000050: b600 56b8 0042 1243 b600 47b8 0010 9900
    0x0000060: 11b8 0010 b800 2216 0714 0057 6937 07b8
    0x0000070: 0010 b800 2216 07b8 005e 3a09 b800 10b8
    0x0000080: 0022 b800 4212 5fb6 0047 b800 10a7 07b3
    0x0000090: 1906 b900 3c01 0007 b800 4212 60b6 0047
    0x00000a0: b800 10a0 04a6 b800 10b8 0022 1906 b900
    0x00000b0: 6401 003a 0ab8 0010 b800 2219 04b8 0042
    0x00000c0: 1265 b600 47b8 0010 c603 d2b8 0010 b800
    0x00000d0: 2212 6719 04b6 0056 b800 4212 68b6 0047
    0x00000e0: b800 1099 0041 2cc1 006a b800 4212 6bb6
    0x00000f0: 0047 b800 1099 002f 2cc0 006a b800 10b8
    0x0000100: 0022 b600 6e12 70b6 0056 b800 4212 71b6
    0x0000110: 0047 b800 1099 000f b800 10b8 0022 190a
    0x0000120: b800 77b0 b800 10b8 0022 013a 0bb8 0010
    0x0000130: b800 22bb 0079 5919 042b b400 36b9 007d
    0x0000140: 0100 b800 8399 0016 3a0c 3a0d 58bb 0085
    0x0000150: 5919 0d19 0db7 0088 a700 06b7 0089 3a0b
    0x0000160: b800 10b8 0022 b800 4212 8ab6 0047 b800
    0x0000170: 10a7 0097 b800 10b8 0022 3a0e b800 10b8
    0x0000180: 0022 1904 128c b600 90b8 0042 1291 b600
    0x0000190: 47b8 0010 9900 74b8 0010 b800 2219 0412
    0x00001a0: 8c12 93b6 0097 3a0f b800 10b8 0022 bb00
    0x00001b0: 7959 190f 2bb4 0036 b900 7d01 00b8 0083
    0x00001c0: 9900 163a 103a 1158 bb00 8559 1911 1911
    0x00001d0: b700 88a7 0006 b700 893a 0bb8 0010 b800
    0x00001e0: 22b8 0042 1298 b600 47b8 0010 a700 1cb8
    0x00001f0: 0010 b800 223a 12b8 0010 b800 2219 0e59
    0x0000200: 1299 129a b800 9ebf b800 10b8 0022 b200
    0x0000210: a4b8 0042 12a5 b600 47b8 0010 c600 17b8
    0x0000220: 0010 b800 2219 0b2b b400 36b9 00a9 0100
    0x0000230: b600 adb8 0010 b800 2219 0b19 0ab6 00b1
    0x0000240: 3a09 b800 10b8 0022 b800 4212 b2b6 0047
    0x0000250: b800 10a7 0014 b800 10b8 0022 3a0e b800
    0x0000260: 10b8 0022 013a 09b8 0010 b800 2219 09b8
    0x0000270: 0042 12b3 b600 47b8 0010 c701 34b2 00b7
    0x0000280: b200 bcb8 0042 12bd b600 47b8 0010 a601
    0x0000290: 20b8 0010 b800 22bb 0079 5919 04b2 00c0
    0x00002a0: b800 8399 0016 3a13 3a14 58bb 0085 5919
    0x00002b0: 1419 14b7 0088 a700 06b7 0089 3a0b b800
    0x00002c0: 10b8 0022 b800 4212 c1b6 0047 b800 10a7
    0x00002d0: 0097 b800 10b8 0022 3a0e b800 10b8 0022
    0x00002e0: 1904 128c b600 90b8 0042 12c2 b600 47b8
    0x00002f0: 0010 9900 74b8 0010 b800 2219 0412 8c12
    0x0000300: 93b6 0097 3a0f b800 10b8 0022 bb00 7959
    0x0000310: 190f 2bb4 0036 b900 7d01 00b8 0083 9900
    0x0000320: 163a 153a 1658 bb00 8559 1916 1916 b700
    0x0000330: 88a7 0006 b700 893a 0bb8 0010 b800 22b8
    0x0000340: 0042 12c3 b600 47b8 0010 a700 1cb8 0010
    0x0000350: b800 223a 12b8 0010 b800 2219 0e59 1299
    0x0000360: 129a b800 9ebf b800 10b8 0022 190b 2bb4
    0x0000370: 0036 b900 a901 00b6 00ad b800 10b8 0022
    0x0000380: 190b 190a b600 b13a 09b8 0010 b800 22b8
    0x0000390: 0042 12c4 b600 47b8 0010 a700 14b8 0010
    0x00003a0: b800 223a 0eb8 0010 b800 2201 3a09 b800
    0x00003b0: 10b8 0022 1909 b800 4212 c5b6 0047 b800
    0x00003c0: 10c7 00c5 b800 10b8 0022 1904 12c7 b600
    0x00003d0: 56b8 0042 12c8 b600 47b8 0010 9900 a119
    0x00003e0: 0ab8 0010 b800 22b6 00cb 1013 b800 4212
    0x00003f0: ccb6 0047 b800 10a0 0086 b800 10b8 0022
    0x0000400: bb00 7959 12ce b200 b7b8 0083 9900 163a
    0x0000410: 173a 1858 bb00 8559 1918 1918 b700 88a7
    0x0000420: 0006 b700 893a 0eb8 0010 b800 2219 0eb2
    0x0000430: 00a4 b600 adb8 0010 b800 2219 0e19 0ab6
    0x0000440: 00b1 3a09 b800 10b8 0022 b800 4212 cfb6
    0x0000450: 0047 b800 10a7 0031 b800 10b8 0022 3a0e
    0x0000460: b800 10b8 0022 013a 09b8 0010 b800 22b8
    0x0000470: 0042 12d0 b600 47b8 0010 a700 0cb8 0010
    0x0000480: b800 2201 3a09 b800 10b8 0022 b800 4212
    0x0000490: d1b6 0047 b800 10a7 000c b800 10b8 0022
    0x00004a0: 013a 09b8 0010 b800 2219 09b8 0042 12d2
    0x00004b0: b600 47b8 0010 c700 7fb8 0010 b800 2219
    0x00004c0: 0a3a 09b8 0010 b800 2219 0610 10b9 004e
    0x00004d0: 0200 b800 10b8 0022 1906 b200 d8b9 00db
    0x00004e0: 0200 b800 4212 dcb6 0047 b800 1099 0048
    0x00004f0: b800 10b8 0022 bb00 de59 190a b700 e13a
    0x0000500: 0bb8 0010 b800 2219 0bb6 00e4 b800 4212
    0x0000510: e5b6 0047 b800 1099 0013 b800 10b8 0022
    0x0000520: 190b b600 e9b6 00ef 3a09 b800 10b8 0022
    0x0000530: 190b b600 f2b8 0010 b800 22b8 0042 12f3
    0x0000540: b600 47b8 0010 a702 fa19 06b9 003c 0100
    0x0000550: 1008 b800 4212 f4b6 0047 b800 10a0 0027
    0x0000560: b800 10b8 0022 1906 b900 f601 00b8 0010
    0x0000570: b800 2201 3a09 b800 4212 f7b6 0047 b800
    0x0000580: 10a7 02bf b800 10b8 0022 1906 b900 3c01
    0x0000590: 0010 0cb8 0042 12f8 b600 47b8 0010 a001
    0x00005a0: abb8 0010 b800 2219 06b9 00f6 0100 b800
    0x00005b0: 10b8 0022 1906 b900 3c01 0007 b800 4212
    0x00005c0: f9b6 0047 b800 10a0 00c3 b800 10b8 0022
    0x00005d0: 1906 b900 6401 003a 0ab8 0010 b800 22b2
    0x00005e0: 00fd 190a b600 56b8 0042 12fe b600 47b8
    0x00005f0: 0010 9900 7bb8 0010 b800 2219 06b9 00f6
    0x0000600: 0100 b800 10b8 0022 2b10 11b6 0101 b800
    0x0000610: 10b8 0022 1906 b900 6401 003a 0bb8 0010
    0x0000620: b800 222b b601 0519 0b01 1906 b901 0801
    0x0000630: 00b6 010e 3a0e b800 10b8 0022 190e b800
    0x0000640: 4213 010f b600 47b8 0010 c600 0cb8 0010
    0x0000650: b800 2219 0e4d b800 10b8 0022 2b07 b601
    0x0000660: 01b8 0010 b800 222b 1010 b601 01b8 0010
    0x0000670: b800 2219 0605 b901 1202 00b8 0042 1301
    0x0000680: 13b6 0047 b800 10a7 001c b800 10b8 0022
    0x0000690: bb01 1559 1301 17b7 0118 5912 9912 9ab8
    0x00006a0: 009e bfb8 0010 b800 2219 06b9 003c 0100
    0x00006b0: 05b8 0042 1301 19b6 0047 b800 10a0 002e
    0x00006c0: b800 10b8 0022 1906 b900 4b01 0037 19b8
    0x00006d0: 0010 b800 2219 06b9 00f6 0100 b800 4213
    0x00006e0: 011a b600 47b8 0010 a700 33b8 0010 b800
    0x00006f0: 22bb 0115 59bb 011c 59b7 011d 1301 1fb6
    0x0000700: 0123 1906 b901 2601 00b6 0123 b601 29b7
    0x0000710: 0118 5912 9912 9ab8 009e bfb8 0010 b800
    0x0000720: 2216 19b8 005e 3a09 b800 10b8 0022 2b10
    0x0000730: 0db6 0101 b800 10b8 0022 b800 4213 012a
    0x0000740: b600 47b8 0010 a700 fa2b b601 2d05 b800
    0x0000750: 4213 012e b600 47b8 0010 a000 dab8 0010
    0x0000760: b800 222b 03b6 0131 b800 10b8 0022 2b10
    0x0000770: 10b6 0101 b800 10b8 0022 1906 b900 3c01
    0x0000780: 0007 b800 4213 0132 b600 47b8 0010 a000
    0x0000790: 5ab8 0010 b800 2213 0134 1906 b900 6401
    0x00007a0: 00b6 0056 b800 4213 0135 b600 47b8 0010
    0x00007b0: 9a00 1cb8 0010 b800 22bb 0115 5913 0117
    0x00007c0: b701 1859 1299 129a b800 9ebf b800 10b8
    0x00007d0: 0022 1906 b900 f601 00b8 0042 1301 36b6
    0x00007e0: 0047 b800 10a7 001c b800 10b8 0022 bb01
    0x00007f0: 1559 1301 17b7 0118 5912 9912 9ab8 009e
    0x0000800: bfb8 0010 b800 222b 1011 b601 01b8 0010
    0x0000810: b800 222b b601 393a 09b8 0010 b800 222b
    0x0000820: 100d b601 01b8 0042 1301 3ab6 0047 b800
    0x0000830: 10a7 000f b800 10b8 0022 2bb6 0139 3a09
    0x0000840: b800 10b8 0022 2a2b 2c2d 1909 b601 3eb0
    0x0000850:                                        
  Exception Handler Table:
    bci [301, 352] => handler: 372
    bci [424, 475] => handler: 495
    bci [563, 578] => handler: 598
    bci [657, 702] => handler: 722
    bci [774, 825] => handler: 845
    bci [890, 905] => handler: 925
    bci [1018, 1092] => handler: 1112
  Stackmap Table:
    append_frame(@111,Object[#56],Long)
    chop_frame(@144,1)
    full_frame(@292,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@347,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Null},{Uninitialized[#307],Uninitialized[#307],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@350,Object[#121])
    full_frame(@372,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121]},{Object[#46]})
    full_frame(@470,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121],Top,Top,Object[#46],Object[#82]},{Uninitialized[#430],Uninitialized[#430],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@473,Object[#121])
    same_locals_1_stack_item_frame(@495,Object[#46])
    full_frame(@520,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121]},{})
    same_frame(@563)
    same_locals_1_stack_item_frame(@598,Object[#48])
    full_frame(@615,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{})
    full_frame(@697,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{Uninitialized[#663],Uninitialized[#663],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@700,Object[#121])
    same_locals_1_stack_item_frame(@722,Object[#46])
    full_frame(@820,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121],Top,Top,Object[#46],Object[#82]},{Uninitialized[#780],Uninitialized[#780],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@823,Object[#121])
    same_locals_1_stack_item_frame(@845,Object[#46])
    full_frame(@870,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{})
    same_locals_1_stack_item_frame(@925,Object[#48])
    same_frame(@942)
    full_frame(@1058,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{Uninitialized[#1024],Uninitialized[#1024],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@1061,Object[#121])
    same_locals_1_stack_item_frame(@1112,Object[#48])
    same_frame(@1149)
    same_frame(@1158)
    full_frame(@1178,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@1187,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82]},{})
    full_frame(@1322,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#345],Object[#82],Object[#222]},{})
    chop_frame(@1333,1)
    full_frame(@1353,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    same_frame(@1412)
    full_frame(@1622,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#82],Top,Top,Object[#106]},{})
    full_frame(@1645,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@1674,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    full_frame(@1699,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    same_frame_extended(@1771)
    full_frame(@1819,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Long},{})
    full_frame(@1865,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    same_frame_extended(@1996)
    same_frame(@2024)
    same_frame(@2049)
    same_frame(@2100)
    append_frame(@2112,Top,Top,Object[#345])

[MASTER] 14:37:05.354 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.parser.DefaultJSONParser: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/parser/DefaultJSONParser.getDateFormat()Ljava/text/DateFormat; @63: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[4]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @63
    flags: { }
    locals: { 'com/alibaba/fastjson/parser/DefaultJSONParser', 'java/util/Locale', 'java/lang/String' }
    stack: { 'com/alibaba/fastjson/parser/DefaultJSONParser', uninitialized 57, uninitialized 57, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 3fb8 0044 2ab4 004c b800 5212 53b6
    0x0000010: 0057 b800 3fc7 004c b800 3fb8 0044 2abb
    0x0000020: 0059 592a b400 462a b400 5bb9 0061 0100
    0x0000030: b800 6799 0012 4c4d 58bb 0069 592c 2cb7
    0x0000040: 006d a700 06b7 006e b500 4cb8 003f b800
    0x0000050: 442a b400 4c2a b400 5bb9 0072 0100 b600
    0x0000060: 78b8 003f b800 442a b400 4cb0          
  Stackmap Table:
    full_frame(@69,{Object[#2]},{Object[#2],Uninitialized[#31],Uninitialized[#31],Object[#122],Object[#124]})
    full_frame(@72,{Object[#2]},{Object[#2],Object[#89]})
    same_frame(@97)

[MASTER] 14:37:05.369 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.serializer.CalendarCodec: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/serializer/CalendarCodec.write(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Lcom/alibaba/fastjson/serializer/BeanContext;)V @197: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[3]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @197
    flags: { }
    locals: { 'com/alibaba/fastjson/serializer/CalendarCodec', 'com/alibaba/fastjson/serializer/JSONSerializer', 'java/lang/Object', 'com/alibaba/fastjson/serializer/BeanContext', 'com/alibaba/fastjson/serializer/SerializeWriter', 'java/lang/String', 'java/util/Calendar', top, top, top, 'java/text/SimpleDateFormat', 'java/util/Locale', 'java/lang/String' }
    stack: { uninitialized 189, uninitialized 189, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 18b8 002a 2bb4 0030 3a04 b800 18b8
    0x0000010: 002a 2db6 0036 3a05 b800 18b8 002a 2cc0
    0x0000020: 0038 3a06 b800 18b8 002a 1905 123a b600
    0x0000030: 40b8 0046 1247 b600 4bb8 0018 9900 29b8
    0x0000040: 0018 b800 2a19 06b6 004f 1400 506d 3707
    0x0000050: b800 18b8 002a 1904 1607 88b6 0056 b800
    0x0000060: 18b8 002a b1b8 0018 b800 2abb 0058 5919
    0x0000070: 05b8 005e 9900 123a 0958 bb00 6059 1909
    0x0000080: b700 63a7 0006 b700 643a 0ab8 0018 b800
    0x0000090: 2a19 0ab8 0046 1247 b600 4bb8 0018 c700
    0x00000a0: 32b8 0018 b800 2abb 0058 59b2 006a 2bb4
    0x00000b0: 006e b800 5e99 0016 3a0b 3a0c 58bb 0060
    0x00000c0: 5919 0c19 0cb7 0071 a700 06b7 0072 3a0a
    0x00000d0: b800 18b8 002a 190a 2bb4 0076 b600 7cb8
    0x00000e0: 0018 b800 2a19 0a19 06b6 0080 b600 843a
    0x00000f0: 0db8 0018 b800 2a19 0419 0db6 0087 b800
    0x0000100: 18b8 002a b1                           
  Stackmap Table:
    append_frame(@101,Object[#83],Object[#60],Object[#56])
    full_frame(@134,{Object[#2],Object[#44],Object[#150],Object[#50],Object[#83],Object[#60],Object[#56]},{Uninitialized[#107],Uninitialized[#107],Object[#60]})
    same_locals_1_stack_item_frame(@137,Object[#88])
    full_frame(@203,{Object[#2],Object[#44],Object[#150],Object[#50],Object[#83],Object[#60],Object[#56],Top,Top,Top,Object[#88]},{Uninitialized[#167],Uninitialized[#167],Object[#60],Object[#152]})
    same_locals_1_stack_item_frame(@206,Object[#88])
    same_frame(@208)

[MASTER] 14:37:05.377 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.util.TypeUtils: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/util/TypeUtils.castToDate(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date; @1094: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[3]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @1094
    flags: { }
    locals: { 'java/lang/Object', 'java/lang/String', long, long_2nd, top, top, top, top, 'java/lang/String', 'com/alibaba/fastjson/parser/JSONScanner', top, top, top, 'java/util/Locale', 'java/lang/String' }
    stack: { uninitialized 1086, uninitialized 1086, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 49b8 005c 2ab8 0064 1301 c1b6 0069
    0x0000010: b800 49c7 000b b800 49b8 005c 01b0 b800
    0x0000020: 49b8 005c 2ac1 01c3 b800 6413 01c4 b600
    0x0000030: 69b8 0049 9900 0eb8 0049 b800 5c2a c001
    0x0000040: c3b0 b800 49b8 005c 2ac1 01c6 b800 6413
    0x0000050: 01c7 b600 69b8 0049 9900 11b8 0049 b800
    0x0000060: 5c2a c001 c6b6 01cb b0b8 0049 b800 5c14
    0x0000070: 01cc 41b8 0049 b800 5c2a c100 dab8 0064
    0x0000080: 1301 ceb6 0069 b800 4999 0035 b800 49b8
    0x0000090: 005c 2ac0 00da b801 d141 b800 49b8 005c
    0x00000a0: bb01 c359 20b8 00cd 9900 1237 0458 bb01
    0x00000b0: d359 1604 b701 d6a7 0006 b701 d7b0 b800
    0x00000c0: 49b8 005c 2ac1 00e7 b800 6413 01d8 b600
    0x00000d0: 69b8 0049 9900 5db8 0049 b800 5c2a c000
    0x00000e0: e7b6 0167 41b8 0049 b800 5c13 01da 2bb6
    0x00000f0: 00f7 b800 6413 01db b600 69b8 0049 9900
    0x0000100: 0fb8 0049 b800 5c20 1401 dc69 41b8 0049
    0x0000110: b800 5cbb 01c3 5920 b800 cd99 0012 3706
    0x0000120: 58bb 01d3 5916 06b7 01d6 a700 06b7 01d7
    0x0000130: b0b8 0049 b800 5c2a c100 d5b8 0064 1301
    0x0000140: deb6 0069 b800 4999 0389 b800 49b8 005c
    0x0000150: 2ac0 00d5 3a08 b800 49b8 005c bb01 e059
    0x0000160: 1908 b701 e13a 09b8 0049 b800 5c19 0903
    0x0000170: b601 e5b8 0064 1301 e6b6 0069 b800 4999
    0x0000180: 0031 b800 49b8 005c 1909 b601 ea3a 0ab8
    0x0000190: 0049 b800 5c19 0ab6 01cb 3a0b b800 49b8
    0x00001a0: 005c 1909 b601 edb8 0049 b800 5c19 0bb0
    0x00001b0: b800 49b8 005c 1909 b601 edb8 0049 b800
    0x00001c0: 5cb8 0064 1301 eeb6 0069 b800 49a7 0023
    0x00001d0: b800 49b8 005c 3a0c 1909 b601 edb8 0049
    0x00001e0: b800 5c19 0c59 1301 1213 01ef b801 17bf
    0x00001f0: b800 49b8 005c 1908 1301 f1b6 01f5 b800
    0x0000200: 6413 01f6 b600 69b8 0049 9900 3019 0813
    0x0000210: 01f8 b601 fbb8 0064 1301 fcb6 0069 b800
    0x0000220: 4999 0019 b800 49b8 005c 1908 1006 1908
    0x0000230: b600 f005 64b6 0200 3a08 b800 49b8 005c
    0x0000240: 1908 102d b601 8eb8 0064 1302 01b6 0069
    0x0000250: b800 499d 0019 1908 102b b601 8eb8 0064
    0x0000260: 1302 02b6 0069 b800 499e 0239 b800 49b8
    0x0000270: 005c 2bb8 0064 1302 03b6 0069 b800 49c7
    0x0000280: 01a6 b800 49b8 005c 1908 b600 f0b2 0208
    0x0000290: b600 f0b8 0064 1302 09b6 0069 b800 499f
    0x00002a0: 0037 1908 b800 49b8 005c b600 f010 16b8
    0x00002b0: 0064 1302 0ab6 0069 b800 49a0 0034 b202
    0x00002c0: 0813 020c b600 f7b8 0064 1302 0db6 0069
    0x00002d0: b800 4999 001c b800 49b8 005c b202 084c
    0x00002e0: b800 6413 020e b600 69b8 0049 a701 39b8
    0x00002f0: 0049 b800 5c19 08b6 00f0 100a b800 6413
    0x0000300: 020f b600 69b8 0049 a000 1cb8 0049 b800
    0x0000310: 5c13 0211 4cb8 0064 1302 12b6 0069 b800
    0x0000320: 49a7 0104 b800 49b8 005c 1908 b600 f013
    0x0000330: 0214 b600 f0b8 0064 1302 15b6 0069 b800
    0x0000340: 49a0 001c b800 49b8 005c 1302 144c b800
    0x0000350: 6413 0216 b600 69b8 0049 a700 cbb8 0049
    0x0000360: b800 5c19 08b6 00f0 101d b800 6413 0217
    0x0000370: b600 69b8 0049 a000 5819 0810 1ab8 0049
    0x0000380: b800 5cb6 0129 103a b800 6413 0218 b600
    0x0000390: 69b8 0049 a000 3a19 0810 1cb8 0049 b800
    0x00003a0: 5cb6 0129 1030 b800 6413 0219 b600 69b8
    0x00003b0: 0049 a000 1cb8 0049 b800 5c13 021b 4cb8
    0x00003c0: 0064 1302 1cb6 0069 b800 49a7 005a b800
    0x00003d0: 49b8 005c 1908 b600 f010 17b8 0064 1302
    0x00003e0: 1db6 0069 b800 49a0 0034 1908 1013 b601
    0x00003f0: 2910 2cb8 0064 1302 1eb6 0069 b800 49a0
    0x0000400: 001c b800 49b8 005c 1302 204c b800 6413
    0x0000410: 0221 b600 69b8 0049 a700 0db8 0049 b800
    0x0000420: 5c13 0223 4cb8 0049 b800 5cbb 0225 592b
    0x0000430: b202 29b8 00cd 9900 163a 0d3a 0e58 bb02
    0x0000440: 2b59 190e 190e b702 2ea7 0006 b702 2f3a
    0x0000450: 0ab8 0049 b800 5c19 0ab2 0233 b602 37b8
    0x0000460: 0049 b800 5c19 0a19 08b6 023b b0b8 0049
    0x0000470: b800 5c3a 0bb8 0049 b800 5cbb 0101 59bb
    0x0000480: 0103 59b7 0104 1302 3db6 010a 1908 b601
    0x0000490: 0ab6 010e b701 1159 1301 1213 01ef b801
    0x00004a0: 17bf b800 49b8 005c 1908 b600 f0b8 0064
    0x00004b0: 1302 3eb6 0069 b800 499a 000b b800 49b8
    0x00004c0: 005c 01b0 b800 49b8 005c 1908 b802 4441
    0x00004d0: b800 49b8 005c 2014 01cc 94b8 0064 1302
    0x00004e0: 45b6 0069 b800 499a 0275 b800 49b8 005c
    0x00004f0: 2ab6 0249 3a08 b800 49b8 005c 1302 4b19
    0x0000500: 08b6 024e b600 f7b8 0064 1302 4fb6 0069
    0x0000510: b800 4999 0100 b800 49b8 005c b202 51b8
    0x0000520: 0064 1302 52b6 0069 b800 49c7 008f b202
    0x0000530: 54b8 0064 1302 55b6 0069 b800 499a 007d
    0x0000540: b800 49b8 005c 1908 1302 5703 bd00 70b6
    0x0000550: 0085 b302 51b8 0049 b800 5c04 b302 54b8
    0x0000560: 0049 b800 5cb8 0064 1302 58b6 0069 b800
    0x0000570: 49a7 0049 b800 49b8 005c 3a09 b800 49b8
    0x0000580: 005c 04b3 0254 b800 49b8 005c b800 6413
    0x0000590: 0259 b600 69b8 0049 a700 22b8 0049 b800
    0x00005a0: 5c3a 0f04 b302 54b8 0049 b800 5c19 0f59
    0x00005b0: 1301 1213 01ef b801 17bf b800 49b8 005c
    0x00005c0: b202 512a 03bd 0004 b600 8e3a 09b8 0049
    0x00005d0: b800 5cb8 0064 1302 5ab6 0069 b800 49a7
    0x00005e0: 0028 b800 49b8 005c 3a0a b800 49b8 005c
    0x00005f0: bb01 0159 1302 5c19 0ab7 025f 5913 0112
    0x0000600: 1301 efb8 0117 bfb8 0049 b800 5c19 09c0
    0x0000610: 01c3 b0b8 0049 b800 5c13 0261 1908 b602
    0x0000620: 4eb6 00f7 b800 6413 0262 b600 69b8 0049
    0x0000630: 9901 00b8 0049 b800 5cb2 0264 b800 6413
    0x0000640: 0265 b600 69b8 0049 c700 8fb2 0267 b800
    0x0000650: 6413 0268 b600 69b8 0049 9a00 7db8 0049
    0x0000660: b800 5c19 0813 0257 03bd 0070 b600 85b3
    0x0000670: 0264 b800 49b8 005c 04b3 0267 b800 49b8
    0x0000680: 005c b800 6413 0269 b600 69b8 0049 a700
    0x0000690: 49b8 0049 b800 5c3a 09b8 0049 b800 5c04
    0x00006a0: b302 67b8 0049 b800 5cb8 0064 1302 6ab6
    0x00006b0: 0069 b800 49a7 0022 b800 49b8 005c 3a10
    0x00006c0: 04b3 0267 b800 49b8 005c 1910 5913 0112
    0x00006d0: 1301 efb8 0117 bfb8 0049 b800 5cb2 0264
    0x00006e0: 2a03 bd00 04b6 008e 3a09 b800 49b8 005c
    0x00006f0: b800 6413 026b b600 69b8 0049 a700 28b8
    0x0000700: 0049 b800 5c3a 0ab8 0049 b800 5cbb 0101
    0x0000710: 5913 026d 190a b702 5f59 1301 1213 01ef
    0x0000720: b801 17bf b800 49b8 005c 1909 c001 c3b0
    0x0000730: b800 49b8 005c bb01 0159 bb01 0359 b701
    0x0000740: 0413 023d b601 0a2a b601 0db6 010e b701
    0x0000750: 1159 1301 1213 01ef b801 17bf b800 49b8
    0x0000760: 005c bb01 c359 20b8 00cd 9900 1237 1158
    0x0000770: bb01 d359 1611 b701 d6a7 0006 b701 d7b0
    0x0000780:                                        
  Exception Handler Table:
    bci [359, 412] => handler: 464
    bci [464, 472] => handler: 464
    bci [1119, 1132] => handler: 1133
    bci [1344, 1365] => handler: 1396
    bci [1344, 1365] => handler: 1435
    bci [1396, 1404] => handler: 1435
    bci [1435, 1443] => handler: 1435
    bci [1466, 1485] => handler: 1506
    bci [1629, 1650] => handler: 1681
    bci [1629, 1650] => handler: 1720
    bci [1681, 1689] => handler: 1720
    bci [1720, 1728] => handler: 1720
    bci [1751, 1770] => handler: 1791
  Stackmap Table:
    same_frame(@30)
    same_frame(@66)
    same_frame(@105)
    full_frame(@186,{Object[#4],Object[#213],Long},{Uninitialized[#160],Uninitialized[#160],Long})
    same_locals_1_stack_item_frame(@189,Object[#451])
    same_frame(@190)
    same_frame_extended(@269)
    full_frame(@301,{Object[#4],Object[#213],Long},{Uninitialized[#275],Uninitialized[#275],Long})
    same_locals_1_stack_item_frame(@304,Object[#451])
    same_frame(@305)
    full_frame(@432,{Object[#4],Object[#213],Long,Top,Top,Top,Top,Object[#213],Object[#480]},{})
    same_locals_1_stack_item_frame(@464,Object[#87])
    same_frame(@496)
    same_frame_extended(@570)
    same_frame(@620)
    same_frame_extended(@726)
    same_frame(@751)
    same_frame(@804)
    same_frame(@861)
    same_frame_extended(@974)
    same_frame_extended(@1051)
    same_frame(@1061)
    full_frame(@1100,{Object[#4],Object[#213],Long,Top,Top,Top,Top,Object[#213],Object[#480]},{Uninitialized[#1067],Uninitialized[#1067],Object[#213],Object[#635]})
    same_locals_1_stack_item_frame(@1103,Object[#549])
    full_frame(@1133,{Object[#4],Object[#213],Long,Top,Top,Top,Top,Object[#213],Object[#480],Object[#549]},{Object[#444]})
    chop_frame(@1186,1)
    same_frame(@1220)
    full_frame(@1232,{Object[#4],Object[#213],Long},{})
    full_frame(@1396,{Object[#4],Object[#213],Long,Top,Top,Top,Top,Object[#112]},{Object[#446]})
    same_locals_1_stack_item_frame(@1435,Object[#87])
    same_frame(@1466)
    same_locals_1_stack_item_frame(@1506,Object[#448])
    append_frame(@1543,Object[#4])
    chop_frame(@1555,1)
    same_locals_1_stack_item_extended(@1681,Object[#446])
    same_locals_1_stack_item_frame(@1720,Object[#87])
    same_frame(@1751)
    same_locals_1_stack_item_frame(@1791,Object[#448])
    append_frame(@1828,Object[#4])
    chop_frame(@1840,1)
    full_frame(@1884,{Object[#4],Object[#213],Long},{})
    full_frame(@1916,{Object[#4],Object[#213],Long},{Uninitialized[#1890],Uninitialized[#1890],Long})
    same_locals_1_stack_item_frame(@1919,Object[#451])

[MASTER] 14:37:05.400 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.serializer.MiscCodec: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/serializer/MiscCodec.deserialze(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object; @489: invokespecial
  Reason:
    Type 'java/net/InetAddress' (current frame, stack[3]) is not assignable to integer
  Current Frame:
    bci: @489
    flags: { }
    locals: { 'com/alibaba/fastjson/serializer/MiscCodec', 'com/alibaba/fastjson/parser/DefaultJSONParser', 'java/lang/reflect/Type', 'java/lang/Object', 'com/alibaba/fastjson/parser/JSONLexer', 'java/net/InetAddress', integer, 'java/lang/String', integer, 'java/net/InetAddress' }
    stack: { uninitialized 481, uninitialized 481, 'java/net/InetAddress', 'java/net/InetAddress' }
  Bytecode:
    0x0000000: b800 1eb8 0030 2bb4 0176 3a04 b800 1eb8
    0x0000010: 0030 2c12 7ab8 003c 1301 77b6 0041 b800
    0x0000020: 1ea6 01d2 b800 1eb8 0030 1904 b901 7c01
    0x0000030: 0010 08b8 003c 1301 7db6 0041 b800 1ea0
    0x0000040: 0018 b800 1eb8 0030 1904 b901 8001 00b8
    0x0000050: 001e b800 3001 b0b8 001e b800 302b 100c
    0x0000060: b601 83b8 001e b800 3001 3a05 b800 1eb8
    0x0000070: 0030 0336 06b8 001e b800 3019 04b9 0186
    0x0000080: 0100 3a07 b800 1eb8 0030 1904 1011 b901
    0x0000090: 8802 00b8 001e b800 3019 0712 82b6 00df
    0x00000a0: b800 3c13 0189 b600 41b8 001e 9900 2fb8
    0x00000b0: 001e b800 302b 1011 b601 83b8 001e b800
    0x00000c0: 302b 1296 b601 8dc0 0096 3a05 b800 3c13
    0x00000d0: 018e b600 41b8 001e a700 a4b8 001e b800
    0x00000e0: 3019 0712 86b6 00df b800 3c13 018f b600
    0x00000f0: 41b8 001e 9900 71b8 001e b800 302b 1011
    0x0000100: b601 83b8 001e b800 3019 04b9 017c 0100
    0x0000110: 05b8 003c 1301 90b6 0041 b800 1e9f 001d
    0x0000120: b800 1eb8 0030 bb00 ea59 1301 92b7 00fa
    0x0000130: 5912 fb13 0193 b801 00bf b800 1eb8 0030
    0x0000140: 1904 b901 9601 0036 06b8 001e b800 3019
    0x0000150: 04b9 0180 0100 b800 3c13 0197 b600 41b8
    0x0000160: 001e a700 1ab8 001e b800 302b 1011 b601
    0x0000170: 83b8 001e b800 302b b601 9a57 b800 1eb8
    0x0000180: 0030 1904 b901 7c01 0010 10b8 003c 1301
    0x0000190: 9bb6 0041 b800 1ea0 0025 b800 1eb8 0030
    0x00001a0: 1904 b901 8001 00b8 001e b800 30b8 003c
    0x00001b0: 1301 9cb6 0041 b800 1ea7 febc b800 1eb8
    0x00001c0: 0030 2b10 0db6 0183 b800 1eb8 0030 bb00
    0x00001d0: 7a59 1905 1506 b800 9c99 0016 3608 3a09
    0x00001e0: 58bb 019e 5919 0919 09b7 01a1 a700 06b7
    0x00001f0: 01a2 b0b8 001e b800 302b b401 a505 b800
    0x0000200: 3c13 01a6 b600 41b8 001e a000 dbb8 001e
    0x0000210: b800 302b 03b5 01a5 b800 1eb8 0030 2b10
    0x0000220: 10b6 0183 b800 1eb8 0030 1904 b901 7c01
    0x0000230: 0007 b800 3c13 01a7 b600 41b8 001e a000
    0x0000240: 5ab8 001e b800 3012 7119 04b9 0186 0100
    0x0000250: b600 dfb8 003c 1301 a8b6 0041 b800 1e9a
    0x0000260: 001d b800 1eb8 0030 bb00 ea59 1301 aab7
    0x0000270: 00fa 5912 fb13 0193 b801 00bf b800 1eb8
    0x0000280: 0030 1904 b901 8001 00b8 003c 1301 abb6
    0x0000290: 0041 b800 1ea7 001d b800 1eb8 0030 bb00
    0x00002a0: ea59 1301 aab7 00fa 5912 fb13 0193 b801
    0x00002b0: 00bf b800 1eb8 0030 2b10 11b6 0183 b800
    0x00002c0: 1eb8 0030 2bb6 019a 3a05 b800 1eb8 0030
    0x00002d0: 2b10 0db6 0183 b800 3c13 01ac b600 41b8
    0x00002e0: 001e a700 0fb8 001e b800 302b b601 9a3a
    0x00002f0: 05b8 001e b800 3019 05b8 003c 1301 adb6
    0x0000300: 0041 b800 1ec7 001b b800 1eb8 0030 013a
    0x0000310: 06b8 003c 1301 aeb6 0041 b800 1ea7 0133
    0x0000320: b800 1eb8 0030 1905 c100 d2b8 003c 1301
    0x0000330: afb6 0041 b800 1e99 001f b800 1eb8 0030
    0x0000340: 1905 c000 d23a 06b8 003c 1301 b0b6 0041
    0x0000350: b800 1ea7 00fd b800 1eb8 0030 1905 c101
    0x0000360: b2b8 003c 1301 b3b6 0041 b800 1e99 00c9
    0x0000370: b800 1eb8 0030 1905 c001 b23a 07b8 001e
    0x0000380: b800 302c 12ae b800 3c13 01b4 b600 41b8
    0x0000390: 001e a600 69b8 001e b800 3019 0713 01b5
    0x00003a0: b601 b93a 0ab8 001e b800 3019 0ab8 003c
    0x00003b0: 1301 bab6 0041 b800 1ec6 000f b800 1eb8
    0x00003c0: 0030 190a b801 bdb0 b800 1eb8 0030 1907
    0x00003d0: 1301 bfb6 01b9 3a0b b800 1eb8 0030 190b
    0x00003e0: b800 3c13 01c0 b600 41b8 001e c600 0fb8
    0x00003f0: 001e b800 3019 0bb8 01bd b0b8 001e b800
    0x0000400: 302c 120d b800 3c13 01c1 b600 41b8 001e
    0x0000410: a600 19b8 001e b800 3019 07b6 01c5 b901
    0x0000420: c801 00b9 0160 0100 b0b8 001e b800 3019
    0x0000430: 072c b601 ccb0 b800 1eb8 0030 bb00 ea59
    0x0000440: 1301 ceb7 00fa 5912 fb13 0193 b801 00bf
    0x0000450: b800 1eb8 0030 1906 b800 3c13 01cf b600
    0x0000460: 41b8 001e c600 1719 06b6 01d2 b800 3c13
    0x0000470: 01d3 b600 41b8 001e 9a00 0bb8 001e b800
    0x0000480: 3001 b0b8 001e b800 302c 1301 d5b8 003c
    0x0000490: 1301 d6b6 0041 b800 1ea6 001b b800 1eb8
    0x00004a0: 0030 1906 b800 9c99 0009 b801 dca7 0006
    0x00004b0: b801 ddb0 b800 1eb8 0030 2c13 01df b800
    0x00004c0: 3c13 01e0 b600 41b8 001e a600 1bb8 001e
    0x00004d0: b800 3019 06b8 009c 9900 09b8 01e6 a700
    0x00004e0: 06b8 01e7 b0b8 001e b800 302c 1301 e9b8
    0x00004f0: 003c 1301 eab6 0041 b800 1ea6 0049 b800
    0x0000500: 1eb8 0030 bb01 e959 1906 b800 9c99 000f
    0x0000510: 3a0c 5757 190c b801 f0a7 0006 b701 f1b0
    0x0000520: b800 1eb8 0030 3a07 b800 1eb8 0030 bb00
    0x0000530: ea59 1301 f319 07b7 014b 5912 fb13 0193
    0x0000540: b801 00bf b800 1eb8 0030 2c13 01f5 b800
    0x0000550: 3c13 01f6 b600 41b8 001e a600 0fb8 001e
    0x0000560: b800 3019 06b8 01fa b0b8 001e b800 302c
    0x0000570: 1301 fcb8 003c 1301 fdb6 0041 b800 1ea6
    0x0000580: 000f b800 1eb8 0030 1906 b802 03b0 b800
    0x0000590: 1eb8 0030 2c12 4cb8 003c 1302 04b6 0041
    0x00005a0: b800 1ea6 004f b800 1eb8 0030 bb00 4c59
    0x00005b0: 1906 1904 b902 0801 00b8 009c 9900 163a
    0x00005c0: 0d3a 0e58 bb02 0a59 190e 190e b702 0da7
    0x00005d0: 0006 b702 0e3a 07b8 001e b800 3019 0719
    0x00005e0: 04b9 0212 0100 b602 16b8 001e b800 3019
    0x00005f0: 07b0 b800 1eb8 0030 2c12 96b8 003c 1302
    0x0000600: 17b6 0041 b800 1ea5 0029 2c13 0219 b800
    0x0000610: 3c13 021a b600 41b8 001e a500 162c 1302
    0x0000620: 1cb8 003c 1302 1db6 0041 b800 1ea6 003f
    0x0000630: b800 1eb8 0030 1906 b800 9c99 0009 b802
    0x0000640: 21a7 0006 b802 22b0 b800 1eb8 0030 3a07
    0x0000650: b800 1eb8 0030 bb00 ea59 1302 2419 07b7
    0x0000660: 014b 5912 fb13 0193 b801 00bf b800 1eb8
    0x0000670: 0030 2c12 8fb8 003c 1302 25b6 0041 b800
    0x0000680: 1ea6 0071 b800 1eb8 0030 1906 1302 27b6
    0x0000690: 022b b800 3c13 022c b600 41b8 001e 9b00
    0x00006a0: 2fb2 022e b800 3c13 022f b600 41b8 001e
    0x00006b0: 9a00 1db8 001e b800 30bb 00ea 5913 0231
    0x00006c0: b700 fa59 12fb 1301 93b8 0100 bfb8 001e
    0x00006d0: b800 30bb 008f 5919 06b8 009c 9900 123a
    0x00006e0: 0f58 bb02 3359 190f b702 34a7 0006 b702
    0x00006f0: 35b0 b800 1eb8 0030 2c12 a7b8 003c 1302
    0x0000700: 36b6 0041 b800 1ea6 000f b800 1eb8 0030
    0x0000710: 1906 b802 39b0 b800 1eb8 0030 2cc1 023b
    0x0000720: b800 3c13 023c b600 41b8 001e 9900 1db8
    0x0000730: 001e b800 302c c002 3b3a 07b8 001e b800
    0x0000740: 3019 07b9 0240 0100 4db8 001e b800 302c
    0x0000750: 126a b800 3c13 0241 b600 41b8 001e a600
    0x0000760: 17b8 001e b800 3019 062b b602 45b6 024b
    0x0000770: 03b8 024f b0b8 001e b800 302c 1302 51b8
    0x0000780: 003c 1302 52b6 0041 b800 1ea6 000f b800
    0x0000790: 1eb8 0030 1906 b802 56b0 b800 1eb8 0030
    0x00007a0: 2c12 aeb8 003c 1302 57b6 0041 b800 1ea6
    0x00007b0: 000f b800 1eb8 0030 1906 b801 bdb0 b800
    0x00007c0: 1eb8 0030 2c13 0259 b800 3c13 025a b600
    0x00007d0: 41b8 001e a600 13b8 001e b800 30bb 0259
    0x00007e0: 5919 06b7 025b b0b8 001e b800 302c c100
    0x00007f0: 6ab8 003c 1302 5cb6 0041 b800 1e99 0172
    0x0000800: b800 1eb8 0030 2cc0 006a b600 6d3a 07b8
    0x0000810: 001e b800 3019 0713 025e b600 dfb8 003c
    0x0000820: 1302 5fb6 0041 b800 1e99 011a b800 1eb8
    0x0000830: 0030 b202 61b8 003c 1302 62b6 0041 b800
    0x0000840: 1ec7 0043 b202 64b8 003c 1302 65b6 0041
    0x0000850: b800 1e9a 0031 b800 1eb8 0030 1302 67b8
    0x0000860: 026a 3a0a b800 1eb8 0030 190a 1302 6c05
    0x0000870: bd00 6a59 0312 d253 5904 1302 6e53 b602
    0x0000880: 72b3 0261 b800 1eb8 0030 b202 61b8 003c
    0x0000890: 1302 73b6 0041 b800 1ec6 0021 b800 1eb8
    0x00008a0: 0030 b202 6101 05bd 0004 5903 1906 5359
    0x00008b0: 0403 bd00 d253 b602 79b0 b800 1eb8 0030
    0x00008c0: bb00 ea59 1302 7bb7 00fa 5912 fb13 0193
    0x00008d0: b801 00bf b800 1eb8 0030 3a0a b800 1eb8
    0x00008e0: 0030 04b3 0264 b800 1eb8 0030 b800 3c13
    0x00008f0: 027c b600 41b8 001e a700 4bb8 001e b800
    0x0000900: 303a 0ab8 001e b800 30bb 00ea 5913 027b
    0x0000910: 190a b701 4b59 12fb 1301 93b8 0100 bfb8
    0x0000920: 001e b800 303a 0ab8 001e b800 30bb 00ea
    0x0000930: 5913 027b 190a b701 4b59 12fb 1301 93b8
    0x0000940: 0100 bfb8 001e b800 30bb 00ea 59bb 00ec
    0x0000950: 59b7 00ed 1302 7eb6 00f3 1907 b600 f3b6
    0x0000960: 00f8 b700 fa59 12fb 1301 93b8 0100 bfb8
    0x0000970: 001e b800 30bb 00ea 59bb 00ec 59b7 00ed
    0x0000980: 1302 7eb6 00f3 2cb8 009c 9900 09b8 0281
    0x0000990: a700 06b6 0282 b600 f3b6 00f8 b700 fa59
    0x00009a0: 12fb 1301 93b8 0100 bf                 
  Exception Handler Table:
    bci [1278, 1311] => handler: 1312
    bci [1584, 1607] => handler: 1608
    bci [2092, 2233] => handler: 2260
    bci [2234, 2260] => handler: 2260
    bci [2092, 2233] => handler: 2299
    bci [2234, 2260] => handler: 2299
    bci [2092, 2233] => handler: 2335
    bci [2234, 2260] => handler: 2335
  Stackmap Table:
    append_frame(@87,Object[#377])
    append_frame(@117,Object[#150],Integer)
    append_frame(@219,Object[#210])
    same_frame_extended(@314)
    same_frame(@357)
    same_frame(@380)
    same_frame(@444)
    full_frame(@495,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#150],Integer,Object[#210]},{Uninitialized[#462],Uninitialized[#462],Object[#150],Integer})
    same_locals_1_stack_item_frame(@498,Object[#122])
    chop_frame(@499,3)
    same_frame_extended(@636)
    same_frame(@664)
    same_frame(@690)
    same_frame(@741)
    append_frame(@753,Object[#4])
    same_frame(@800)
    same_frame(@854)
    full_frame(@968,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Top,Object[#434],Top,Top,Object[#210]},{})
    chop_frame(@1019,3)
    same_frame(@1065)
    chop_frame(@1078,2)
    append_frame(@1104,Object[#210])
    same_frame(@1147)
    same_frame(@1155)
    same_locals_1_stack_item_frame(@1200,Object[#210])
    same_locals_1_stack_item_frame(@1203,Object[#469])
    same_frame(@1204)
    same_locals_1_stack_item_frame(@1249,Object[#210])
    same_locals_1_stack_item_frame(@1252,Object[#479])
    same_frame(@1253)
    full_frame(@1308,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#1284],Uninitialized[#1284],Object[#210]})
    same_locals_1_stack_item_frame(@1311,Object[#489])
    same_locals_1_stack_item_frame(@1312,Object[#360])
    same_frame(@1348)
    same_frame(@1385)
    same_frame(@1422)
    full_frame(@1490,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#1452],Uninitialized[#1452],Object[#210],Object[#508]})
    same_locals_1_stack_item_frame(@1493,Object[#76])
    same_frame(@1522)
    same_frame(@1584)
    same_locals_1_stack_item_frame(@1604,Object[#210])
    same_locals_1_stack_item_frame(@1607,Object[#150])
    same_locals_1_stack_item_frame(@1608,Object[#362])
    same_frame(@1644)
    same_frame_extended(@1741)
    full_frame(@1774,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#1747],Uninitialized[#1747],Object[#210]})
    same_locals_1_stack_item_frame(@1777,Object[#143])
    same_frame(@1778)
    same_frame(@1814)
    same_frame(@1865)
    same_frame(@1909)
    same_frame(@1946)
    same_frame(@1982)
    same_frame(@2023)
    append_frame(@2180,Object[#210])
    same_frame(@2234)
    same_locals_1_stack_item_frame(@2260,Object[#364])
    same_locals_1_stack_item_frame(@2299,Object[#366])
    same_locals_1_stack_item_frame(@2335,Object[#368])
    same_frame(@2371)
    chop_frame(@2415,1)
    full_frame(@2451,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#2421],Uninitialized[#2421],Object[#236],Object[#294]})
    full_frame(@2454,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#2421],Uninitialized[#2421],Object[#236],Object[#210]})

[MASTER] 14:37:05.407 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/parser/deserializer/AbstractDateDeserializer.deserialze(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/Object; @341: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[3]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @341
    flags: { }
    locals: { 'com/alibaba/fastjson/parser/deserializer/AbstractDateDeserializer', 'com/alibaba/fastjson/parser/DefaultJSONParser', 'java/lang/reflect/Type', 'java/lang/Object', 'java/lang/String', integer, 'com/alibaba/fastjson/parser/JSONLexer', top, top, top, 'java/lang/String', null, 'java/util/Locale', 'java/lang/String' }
    stack: { uninitialized 333, uninitialized 333, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 10b8 0022 2bb4 0036 3a06 b800 10b8
    0x0000010: 0022 1906 b900 3c01 0005 b800 4212 43b6
    0x0000020: 0047 b800 10a0 006b b800 10b8 0022 1906
    0x0000030: b900 4b01 0037 07b8 0010 b800 2219 0610
    0x0000040: 10b9 004e 0200 b800 10b8 0022 1250 1904
    0x0000050: b600 56b8 0042 1243 b600 47b8 0010 9900
    0x0000060: 11b8 0010 b800 2216 0714 0057 6937 07b8
    0x0000070: 0010 b800 2216 07b8 005e 3a09 b800 10b8
    0x0000080: 0022 b800 4212 5fb6 0047 b800 10a7 07b3
    0x0000090: 1906 b900 3c01 0007 b800 4212 60b6 0047
    0x00000a0: b800 10a0 04a6 b800 10b8 0022 1906 b900
    0x00000b0: 6401 003a 0ab8 0010 b800 2219 04b8 0042
    0x00000c0: 1265 b600 47b8 0010 c603 d2b8 0010 b800
    0x00000d0: 2212 6719 04b6 0056 b800 4212 68b6 0047
    0x00000e0: b800 1099 0041 2cc1 006a b800 4212 6bb6
    0x00000f0: 0047 b800 1099 002f 2cc0 006a b800 10b8
    0x0000100: 0022 b600 6e12 70b6 0056 b800 4212 71b6
    0x0000110: 0047 b800 1099 000f b800 10b8 0022 190a
    0x0000120: b800 77b0 b800 10b8 0022 013a 0bb8 0010
    0x0000130: b800 22bb 0079 5919 042b b400 36b9 007d
    0x0000140: 0100 b800 8399 0016 3a0c 3a0d 58bb 0085
    0x0000150: 5919 0d19 0db7 0088 a700 06b7 0089 3a0b
    0x0000160: b800 10b8 0022 b800 4212 8ab6 0047 b800
    0x0000170: 10a7 0097 b800 10b8 0022 3a0e b800 10b8
    0x0000180: 0022 1904 128c b600 90b8 0042 1291 b600
    0x0000190: 47b8 0010 9900 74b8 0010 b800 2219 0412
    0x00001a0: 8c12 93b6 0097 3a0f b800 10b8 0022 bb00
    0x00001b0: 7959 190f 2bb4 0036 b900 7d01 00b8 0083
    0x00001c0: 9900 163a 103a 1158 bb00 8559 1911 1911
    0x00001d0: b700 88a7 0006 b700 893a 0bb8 0010 b800
    0x00001e0: 22b8 0042 1298 b600 47b8 0010 a700 1cb8
    0x00001f0: 0010 b800 223a 12b8 0010 b800 2219 0e59
    0x0000200: 1299 129a b800 9ebf b800 10b8 0022 b200
    0x0000210: a4b8 0042 12a5 b600 47b8 0010 c600 17b8
    0x0000220: 0010 b800 2219 0b2b b400 36b9 00a9 0100
    0x0000230: b600 adb8 0010 b800 2219 0b19 0ab6 00b1
    0x0000240: 3a09 b800 10b8 0022 b800 4212 b2b6 0047
    0x0000250: b800 10a7 0014 b800 10b8 0022 3a0e b800
    0x0000260: 10b8 0022 013a 09b8 0010 b800 2219 09b8
    0x0000270: 0042 12b3 b600 47b8 0010 c701 34b2 00b7
    0x0000280: b200 bcb8 0042 12bd b600 47b8 0010 a601
    0x0000290: 20b8 0010 b800 22bb 0079 5919 04b2 00c0
    0x00002a0: b800 8399 0016 3a13 3a14 58bb 0085 5919
    0x00002b0: 1419 14b7 0088 a700 06b7 0089 3a0b b800
    0x00002c0: 10b8 0022 b800 4212 c1b6 0047 b800 10a7
    0x00002d0: 0097 b800 10b8 0022 3a0e b800 10b8 0022
    0x00002e0: 1904 128c b600 90b8 0042 12c2 b600 47b8
    0x00002f0: 0010 9900 74b8 0010 b800 2219 0412 8c12
    0x0000300: 93b6 0097 3a0f b800 10b8 0022 bb00 7959
    0x0000310: 190f 2bb4 0036 b900 7d01 00b8 0083 9900
    0x0000320: 163a 153a 1658 bb00 8559 1916 1916 b700
    0x0000330: 88a7 0006 b700 893a 0bb8 0010 b800 22b8
    0x0000340: 0042 12c3 b600 47b8 0010 a700 1cb8 0010
    0x0000350: b800 223a 12b8 0010 b800 2219 0e59 1299
    0x0000360: 129a b800 9ebf b800 10b8 0022 190b 2bb4
    0x0000370: 0036 b900 a901 00b6 00ad b800 10b8 0022
    0x0000380: 190b 190a b600 b13a 09b8 0010 b800 22b8
    0x0000390: 0042 12c4 b600 47b8 0010 a700 14b8 0010
    0x00003a0: b800 223a 0eb8 0010 b800 2201 3a09 b800
    0x00003b0: 10b8 0022 1909 b800 4212 c5b6 0047 b800
    0x00003c0: 10c7 00c5 b800 10b8 0022 1904 12c7 b600
    0x00003d0: 56b8 0042 12c8 b600 47b8 0010 9900 a119
    0x00003e0: 0ab8 0010 b800 22b6 00cb 1013 b800 4212
    0x00003f0: ccb6 0047 b800 10a0 0086 b800 10b8 0022
    0x0000400: bb00 7959 12ce b200 b7b8 0083 9900 163a
    0x0000410: 173a 1858 bb00 8559 1918 1918 b700 88a7
    0x0000420: 0006 b700 893a 0eb8 0010 b800 2219 0eb2
    0x0000430: 00a4 b600 adb8 0010 b800 2219 0e19 0ab6
    0x0000440: 00b1 3a09 b800 10b8 0022 b800 4212 cfb6
    0x0000450: 0047 b800 10a7 0031 b800 10b8 0022 3a0e
    0x0000460: b800 10b8 0022 013a 09b8 0010 b800 22b8
    0x0000470: 0042 12d0 b600 47b8 0010 a700 0cb8 0010
    0x0000480: b800 2201 3a09 b800 10b8 0022 b800 4212
    0x0000490: d1b6 0047 b800 10a7 000c b800 10b8 0022
    0x00004a0: 013a 09b8 0010 b800 2219 09b8 0042 12d2
    0x00004b0: b600 47b8 0010 c700 7fb8 0010 b800 2219
    0x00004c0: 0a3a 09b8 0010 b800 2219 0610 10b9 004e
    0x00004d0: 0200 b800 10b8 0022 1906 b200 d8b9 00db
    0x00004e0: 0200 b800 4212 dcb6 0047 b800 1099 0048
    0x00004f0: b800 10b8 0022 bb00 de59 190a b700 e13a
    0x0000500: 0bb8 0010 b800 2219 0bb6 00e4 b800 4212
    0x0000510: e5b6 0047 b800 1099 0013 b800 10b8 0022
    0x0000520: 190b b600 e9b6 00ef 3a09 b800 10b8 0022
    0x0000530: 190b b600 f2b8 0010 b800 22b8 0042 12f3
    0x0000540: b600 47b8 0010 a702 fa19 06b9 003c 0100
    0x0000550: 1008 b800 4212 f4b6 0047 b800 10a0 0027
    0x0000560: b800 10b8 0022 1906 b900 f601 00b8 0010
    0x0000570: b800 2201 3a09 b800 4212 f7b6 0047 b800
    0x0000580: 10a7 02bf b800 10b8 0022 1906 b900 3c01
    0x0000590: 0010 0cb8 0042 12f8 b600 47b8 0010 a001
    0x00005a0: abb8 0010 b800 2219 06b9 00f6 0100 b800
    0x00005b0: 10b8 0022 1906 b900 3c01 0007 b800 4212
    0x00005c0: f9b6 0047 b800 10a0 00c3 b800 10b8 0022
    0x00005d0: 1906 b900 6401 003a 0ab8 0010 b800 22b2
    0x00005e0: 00fd 190a b600 56b8 0042 12fe b600 47b8
    0x00005f0: 0010 9900 7bb8 0010 b800 2219 06b9 00f6
    0x0000600: 0100 b800 10b8 0022 2b10 11b6 0101 b800
    0x0000610: 10b8 0022 1906 b900 6401 003a 0bb8 0010
    0x0000620: b800 222b b601 0519 0b01 1906 b901 0801
    0x0000630: 00b6 010e 3a0e b800 10b8 0022 190e b800
    0x0000640: 4213 010f b600 47b8 0010 c600 0cb8 0010
    0x0000650: b800 2219 0e4d b800 10b8 0022 2b07 b601
    0x0000660: 01b8 0010 b800 222b 1010 b601 01b8 0010
    0x0000670: b800 2219 0605 b901 1202 00b8 0042 1301
    0x0000680: 13b6 0047 b800 10a7 001c b800 10b8 0022
    0x0000690: bb01 1559 1301 17b7 0118 5912 9912 9ab8
    0x00006a0: 009e bfb8 0010 b800 2219 06b9 003c 0100
    0x00006b0: 05b8 0042 1301 19b6 0047 b800 10a0 002e
    0x00006c0: b800 10b8 0022 1906 b900 4b01 0037 19b8
    0x00006d0: 0010 b800 2219 06b9 00f6 0100 b800 4213
    0x00006e0: 011a b600 47b8 0010 a700 33b8 0010 b800
    0x00006f0: 22bb 0115 59bb 011c 59b7 011d 1301 1fb6
    0x0000700: 0123 1906 b901 2601 00b6 0123 b601 29b7
    0x0000710: 0118 5912 9912 9ab8 009e bfb8 0010 b800
    0x0000720: 2216 19b8 005e 3a09 b800 10b8 0022 2b10
    0x0000730: 0db6 0101 b800 10b8 0022 b800 4213 012a
    0x0000740: b600 47b8 0010 a700 fa2b b601 2d05 b800
    0x0000750: 4213 012e b600 47b8 0010 a000 dab8 0010
    0x0000760: b800 222b 03b6 0131 b800 10b8 0022 2b10
    0x0000770: 10b6 0101 b800 10b8 0022 1906 b900 3c01
    0x0000780: 0007 b800 4213 0132 b600 47b8 0010 a000
    0x0000790: 5ab8 0010 b800 2213 0134 1906 b900 6401
    0x00007a0: 00b6 0056 b800 4213 0135 b600 47b8 0010
    0x00007b0: 9a00 1cb8 0010 b800 22bb 0115 5913 0117
    0x00007c0: b701 1859 1299 129a b800 9ebf b800 10b8
    0x00007d0: 0022 1906 b900 f601 00b8 0042 1301 36b6
    0x00007e0: 0047 b800 10a7 001c b800 10b8 0022 bb01
    0x00007f0: 1559 1301 17b7 0118 5912 9912 9ab8 009e
    0x0000800: bfb8 0010 b800 222b 1011 b601 01b8 0010
    0x0000810: b800 222b b601 393a 09b8 0010 b800 222b
    0x0000820: 100d b601 01b8 0042 1301 3ab6 0047 b800
    0x0000830: 10a7 000f b800 10b8 0022 2bb6 0139 3a09
    0x0000840: b800 10b8 0022 2a2b 2c2d 1909 b601 3eb0
    0x0000850:                                        
  Exception Handler Table:
    bci [301, 352] => handler: 372
    bci [424, 475] => handler: 495
    bci [563, 578] => handler: 598
    bci [657, 702] => handler: 722
    bci [774, 825] => handler: 845
    bci [890, 905] => handler: 925
    bci [1018, 1092] => handler: 1112
  Stackmap Table:
    append_frame(@111,Object[#56],Long)
    chop_frame(@144,1)
    full_frame(@292,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@347,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Null},{Uninitialized[#307],Uninitialized[#307],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@350,Object[#121])
    full_frame(@372,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121]},{Object[#46]})
    full_frame(@470,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121],Top,Top,Object[#46],Object[#82]},{Uninitialized[#430],Uninitialized[#430],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@473,Object[#121])
    same_locals_1_stack_item_frame(@495,Object[#46])
    full_frame(@520,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#121]},{})
    same_frame(@563)
    same_locals_1_stack_item_frame(@598,Object[#48])
    full_frame(@615,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{})
    full_frame(@697,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{Uninitialized[#663],Uninitialized[#663],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@700,Object[#121])
    same_locals_1_stack_item_frame(@722,Object[#46])
    full_frame(@820,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121],Top,Top,Object[#46],Object[#82]},{Uninitialized[#780],Uninitialized[#780],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@823,Object[#121])
    same_locals_1_stack_item_frame(@845,Object[#46])
    full_frame(@870,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{})
    same_locals_1_stack_item_frame(@925,Object[#48])
    same_frame(@942)
    full_frame(@1058,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82],Object[#121]},{Uninitialized[#1024],Uninitialized[#1024],Object[#82],Object[#185]})
    same_locals_1_stack_item_frame(@1061,Object[#121])
    same_locals_1_stack_item_frame(@1112,Object[#48])
    same_frame(@1149)
    same_frame(@1158)
    full_frame(@1178,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@1187,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#347],Object[#82]},{})
    full_frame(@1322,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Object[#345],Object[#82],Object[#222]},{})
    chop_frame(@1333,1)
    full_frame(@1353,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    same_frame(@1412)
    full_frame(@1622,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Object[#82],Top,Top,Object[#106]},{})
    full_frame(@1645,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    full_frame(@1674,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    full_frame(@1699,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82]},{})
    same_frame_extended(@1771)
    full_frame(@1819,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56],Top,Top,Top,Object[#82],Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Top,Long},{})
    full_frame(@1865,{Object[#2],Object[#50],Object[#343],Object[#345],Object[#82],Integer,Object[#56]},{})
    same_frame_extended(@1996)
    same_frame(@2024)
    same_frame(@2049)
    same_frame(@2100)
    append_frame(@2112,Top,Top,Object[#345])

[MASTER] 14:37:05.415 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.serializer.JSONSerializer: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/serializer/JSONSerializer.writeWithFormat(Ljava/lang/Object;Ljava/lang/String;)V @217: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[3]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @217
    flags: { }
    locals: { 'com/alibaba/fastjson/serializer/JSONSerializer', 'java/lang/Object', 'java/lang/String', top, top, 'java/text/DateFormat', 'java/util/Locale', 'java/lang/String' }
    stack: { uninitialized 209, uninitialized 209, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 22b8 0034 2bc1 01a7 b800 6313 01a8
    0x0000010: b600 68b8 0022 9901 61b8 0022 b800 3413
    0x0000020: 01aa 2cb6 01ad b800 6313 01ae b600 68b8
    0x0000030: 0022 9900 2bb8 0022 b800 342b c001 a7b6
    0x0000040: 01b2 1401 b36d 42b8 0022 b800 342a b400
    0x0000050: 5521 88b6 01b7 b800 22b8 0034 b1b8 0022
    0x0000060: b800 3413 01b9 2cb6 01ad b800 6313 01ba
    0x0000070: b600 68b8 0022 9900 1eb8 0022 b800 342a
    0x0000080: b400 552b c001 a7b6 01b2 b601 beb8 0022
    0x0000090: b800 34b1 b800 22b8 0034 2ab6 01c0 3a05
    0x00000a0: b800 22b8 0034 1905 b800 6313 01c1 b600
    0x00000b0: 68b8 0022 c700 9cb8 0022 b800 34bb 005d
    0x00000c0: 592c 2ab4 0053 b800 7799 0016 3a06 3a07
    0x00000d0: 58bb 0079 5919 0719 07b7 007c a700 06b7
    0x00000e0: 007d 3a05 b800 22b8 0034 b800 6313 01c2
    0x00000f0: b600 68b8 0022 a700 4bb8 0022 b800 343a
    0x0000100: 08b8 0022 b800 342c 1301 c413 01c6 b601
    0x0000110: ca3a 09b8 0022 b800 34bb 005d 5919 092a
    0x0000120: b400 53b8 0077 9900 163a 0a3a 0b58 bb00
    0x0000130: 7959 190b 190b b700 7ca7 0006 b700 7d3a
    0x0000140: 05b8 0022 b800 3419 052a b400 4eb6 0083
    0x0000150: b800 22b8 0034 1905 2bc0 01a7 b601 ce3a
    0x0000160: 08b8 0022 b800 342a b400 5519 08b6 01d1
    0x0000170: b800 22b8 0034 b1b8 0022 b800 342b c101
    0x0000180: d3b8 0063 1301 d4b6 0068 b800 2299 0199
    0x0000190: b800 22b8 0034 2bc0 01d3 c001 d33a 05b8
    0x00001a0: 0022 b800 3413 01d6 2cb6 01ad b800 6313
    0x00001b0: 01d7 b600 68b8 0022 9a00 1913 01d9 2cb6
    0x00001c0: 01ad b800 6313 01da b600 68b8 0022 9901
    0x00001d0: 0eb8 0022 b800 3401 3a08 b800 22b8 0034
    0x00001e0: bb01 dc59 b701 dd3a 09b8 0022 b800 3419
    0x00001f0: 05be 1102 00b8 0063 1301 deb6 0068 b800
    0x0000200: 22a2 0026 b800 22b8 0034 bb01 e059 1909
    0x0000210: 1905 beb7 01e3 3a08 b800 6313 01e4 b600
    0x0000220: 68b8 0022 a700 14b8 0022 b800 34bb 01e0
    0x0000230: 5919 09b7 01e7 3a08 b800 22b8 0034 1908
    0x0000240: 1905 b601 eab8 0022 b800 3419 08b6 01ed
    0x0000250: b800 22b8 0034 2ab4 0055 1909 b601 f1b6
    0x0000260: 01f4 b800 22b8 0034 1908 b801 f9b8 0022
    0x0000270: b800 34b8 0063 1301 fab6 0068 b800 22a7
    0x0000280: 0048 b800 22b8 0034 3a09 b800 22b8 0034
    0x0000290: bb01 5f59 1301 fc19 09b7 0165 5913 0166
    0x00002a0: 1301 fdb8 016b bfb8 0022 b800 343a 0c19
    0x00002b0: 08b8 01f9 b800 22b8 0034 190c 5913 0166
    0x00002c0: 1301 fdb8 016b bfb8 0022 b800 34b8 0063
    0x00002d0: 1301 feb6 0068 b800 22a7 0046 1302 002c
    0x00002e0: b601 adb8 0063 1302 01b6 0068 b800 2299
    0x00002f0: 0021 b800 22b8 0034 2ab4 0055 1905 b602
    0x0000300: 04b8 0063 1302 05b6 0068 b800 22a7 0012
    0x0000310: b800 22b8 0034 2ab4 0055 1905 b601 f4b8
    0x0000320: 0022 b800 34b1 b800 22b8 0034 2bc1 0207
    0x0000330: b800 6313 0208 b600 68b8 0022 9900 beb8
    0x0000340: 0022 b800 342b c002 073a 05b8 0022 b800
    0x0000350: 3419 05b9 020c 0100 3a08 b800 22b8 0034
    0x0000360: 2ab4 0055 105b b601 3fb8 0022 b800 3403
    0x0000370: 3609 1509 1905 b902 0d01 00b8 0063 1302
    0x0000380: 0eb6 0068 b800 22a2 005d b800 22b8 0034
    0x0000390: 1908 b902 1401 003a 0cb8 0022 b800 3415
    0x00003a0: 09b8 0063 1302 15b6 0068 b800 2299 0012
    0x00003b0: b800 22b8 0034 2ab4 0055 102c b601 3fb8
    0x00003c0: 0022 b800 342a 190c 2cb6 0217 b800 22b8
    0x00003d0: 0034 8409 01b8 0063 1302 18b6 0068 b800
    0x00003e0: 22a7 ff91 b800 22b8 0034 2ab4 0055 105d
    0x00003f0: b601 3fb8 0022 b800 34b1 b800 22b8 0034
    0x0000400: 2a2b b601 55b8 0022 b800 34b1          
  Exception Handler Table:
    bci [183, 228] => handler: 249
    bci [474, 610] => handler: 642
    bci [474, 610] => handler: 679
    bci [642, 687] => handler: 679
  Stackmap Table:
    same_frame_extended(@93)
    same_frame(@148)
    full_frame(@223,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#127]},{Uninitialized[#189],Uninitialized[#189],Object[#133],Object[#135]})
    same_locals_1_stack_item_frame(@226,Object[#93])
    same_locals_1_stack_item_frame(@249,Object[#421])
    full_frame(@316,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#127],Top,Top,Object[#421],Object[#133]},{Uninitialized[#281],Uninitialized[#281],Object[#133],Object[#135]})
    same_locals_1_stack_item_frame(@319,Object[#93])
    full_frame(@321,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#93]},{})
    full_frame(@336,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#127]},{})
    chop_frame(@375,3)
    append_frame(@465,Top,Top,Object[#467])
    full_frame(@551,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#467],Top,Top,Null,Object[#476]},{})
    full_frame(@568,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#467],Top,Top,Object[#480],Object[#476]},{})
    full_frame(@642,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#467],Top,Top,Object[#480]},{Object[#337]})
    same_locals_1_stack_item_frame(@679,Object[#372])
    append_frame(@711,Object[#476])
    full_frame(@732,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#467]},{})
    same_frame(@784)
    same_frame(@799)
    chop_frame(@806,3)
    full_frame(@882,{Object[#2],Object[#230],Object[#133],Top,Top,Object[#519],Top,Top,Object[#528],Integer},{})
    append_frame(@959,Top,Top,Object[#230])
    chop_frame(@996,3)
    full_frame(@1018,{Object[#2],Object[#230],Object[#133]},{})

[MASTER] 14:37:05.445 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.serializer.SerializeConfig: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/serializer/MiscCodec.deserialze(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object; @489: invokespecial
  Reason:
    Type 'java/net/InetAddress' (current frame, stack[3]) is not assignable to integer
  Current Frame:
    bci: @489
    flags: { }
    locals: { 'com/alibaba/fastjson/serializer/MiscCodec', 'com/alibaba/fastjson/parser/DefaultJSONParser', 'java/lang/reflect/Type', 'java/lang/Object', 'com/alibaba/fastjson/parser/JSONLexer', 'java/net/InetAddress', integer, 'java/lang/String', integer, 'java/net/InetAddress' }
    stack: { uninitialized 481, uninitialized 481, 'java/net/InetAddress', 'java/net/InetAddress' }
  Bytecode:
    0x0000000: b800 1eb8 0030 2bb4 0176 3a04 b800 1eb8
    0x0000010: 0030 2c12 7ab8 003c 1301 77b6 0041 b800
    0x0000020: 1ea6 01d2 b800 1eb8 0030 1904 b901 7c01
    0x0000030: 0010 08b8 003c 1301 7db6 0041 b800 1ea0
    0x0000040: 0018 b800 1eb8 0030 1904 b901 8001 00b8
    0x0000050: 001e b800 3001 b0b8 001e b800 302b 100c
    0x0000060: b601 83b8 001e b800 3001 3a05 b800 1eb8
    0x0000070: 0030 0336 06b8 001e b800 3019 04b9 0186
    0x0000080: 0100 3a07 b800 1eb8 0030 1904 1011 b901
    0x0000090: 8802 00b8 001e b800 3019 0712 82b6 00df
    0x00000a0: b800 3c13 0189 b600 41b8 001e 9900 2fb8
    0x00000b0: 001e b800 302b 1011 b601 83b8 001e b800
    0x00000c0: 302b 1296 b601 8dc0 0096 3a05 b800 3c13
    0x00000d0: 018e b600 41b8 001e a700 a4b8 001e b800
    0x00000e0: 3019 0712 86b6 00df b800 3c13 018f b600
    0x00000f0: 41b8 001e 9900 71b8 001e b800 302b 1011
    0x0000100: b601 83b8 001e b800 3019 04b9 017c 0100
    0x0000110: 05b8 003c 1301 90b6 0041 b800 1e9f 001d
    0x0000120: b800 1eb8 0030 bb00 ea59 1301 92b7 00fa
    0x0000130: 5912 fb13 0193 b801 00bf b800 1eb8 0030
    0x0000140: 1904 b901 9601 0036 06b8 001e b800 3019
    0x0000150: 04b9 0180 0100 b800 3c13 0197 b600 41b8
    0x0000160: 001e a700 1ab8 001e b800 302b 1011 b601
    0x0000170: 83b8 001e b800 302b b601 9a57 b800 1eb8
    0x0000180: 0030 1904 b901 7c01 0010 10b8 003c 1301
    0x0000190: 9bb6 0041 b800 1ea0 0025 b800 1eb8 0030
    0x00001a0: 1904 b901 8001 00b8 001e b800 30b8 003c
    0x00001b0: 1301 9cb6 0041 b800 1ea7 febc b800 1eb8
    0x00001c0: 0030 2b10 0db6 0183 b800 1eb8 0030 bb00
    0x00001d0: 7a59 1905 1506 b800 9c99 0016 3608 3a09
    0x00001e0: 58bb 019e 5919 0919 09b7 01a1 a700 06b7
    0x00001f0: 01a2 b0b8 001e b800 302b b401 a505 b800
    0x0000200: 3c13 01a6 b600 41b8 001e a000 dbb8 001e
    0x0000210: b800 302b 03b5 01a5 b800 1eb8 0030 2b10
    0x0000220: 10b6 0183 b800 1eb8 0030 1904 b901 7c01
    0x0000230: 0007 b800 3c13 01a7 b600 41b8 001e a000
    0x0000240: 5ab8 001e b800 3012 7119 04b9 0186 0100
    0x0000250: b600 dfb8 003c 1301 a8b6 0041 b800 1e9a
    0x0000260: 001d b800 1eb8 0030 bb00 ea59 1301 aab7
    0x0000270: 00fa 5912 fb13 0193 b801 00bf b800 1eb8
    0x0000280: 0030 1904 b901 8001 00b8 003c 1301 abb6
    0x0000290: 0041 b800 1ea7 001d b800 1eb8 0030 bb00
    0x00002a0: ea59 1301 aab7 00fa 5912 fb13 0193 b801
    0x00002b0: 00bf b800 1eb8 0030 2b10 11b6 0183 b800
    0x00002c0: 1eb8 0030 2bb6 019a 3a05 b800 1eb8 0030
    0x00002d0: 2b10 0db6 0183 b800 3c13 01ac b600 41b8
    0x00002e0: 001e a700 0fb8 001e b800 302b b601 9a3a
    0x00002f0: 05b8 001e b800 3019 05b8 003c 1301 adb6
    0x0000300: 0041 b800 1ec7 001b b800 1eb8 0030 013a
    0x0000310: 06b8 003c 1301 aeb6 0041 b800 1ea7 0133
    0x0000320: b800 1eb8 0030 1905 c100 d2b8 003c 1301
    0x0000330: afb6 0041 b800 1e99 001f b800 1eb8 0030
    0x0000340: 1905 c000 d23a 06b8 003c 1301 b0b6 0041
    0x0000350: b800 1ea7 00fd b800 1eb8 0030 1905 c101
    0x0000360: b2b8 003c 1301 b3b6 0041 b800 1e99 00c9
    0x0000370: b800 1eb8 0030 1905 c001 b23a 07b8 001e
    0x0000380: b800 302c 12ae b800 3c13 01b4 b600 41b8
    0x0000390: 001e a600 69b8 001e b800 3019 0713 01b5
    0x00003a0: b601 b93a 0ab8 001e b800 3019 0ab8 003c
    0x00003b0: 1301 bab6 0041 b800 1ec6 000f b800 1eb8
    0x00003c0: 0030 190a b801 bdb0 b800 1eb8 0030 1907
    0x00003d0: 1301 bfb6 01b9 3a0b b800 1eb8 0030 190b
    0x00003e0: b800 3c13 01c0 b600 41b8 001e c600 0fb8
    0x00003f0: 001e b800 3019 0bb8 01bd b0b8 001e b800
    0x0000400: 302c 120d b800 3c13 01c1 b600 41b8 001e
    0x0000410: a600 19b8 001e b800 3019 07b6 01c5 b901
    0x0000420: c801 00b9 0160 0100 b0b8 001e b800 3019
    0x0000430: 072c b601 ccb0 b800 1eb8 0030 bb00 ea59
    0x0000440: 1301 ceb7 00fa 5912 fb13 0193 b801 00bf
    0x0000450: b800 1eb8 0030 1906 b800 3c13 01cf b600
    0x0000460: 41b8 001e c600 1719 06b6 01d2 b800 3c13
    0x0000470: 01d3 b600 41b8 001e 9a00 0bb8 001e b800
    0x0000480: 3001 b0b8 001e b800 302c 1301 d5b8 003c
    0x0000490: 1301 d6b6 0041 b800 1ea6 001b b800 1eb8
    0x00004a0: 0030 1906 b800 9c99 0009 b801 dca7 0006
    0x00004b0: b801 ddb0 b800 1eb8 0030 2c13 01df b800
    0x00004c0: 3c13 01e0 b600 41b8 001e a600 1bb8 001e
    0x00004d0: b800 3019 06b8 009c 9900 09b8 01e6 a700
    0x00004e0: 06b8 01e7 b0b8 001e b800 302c 1301 e9b8
    0x00004f0: 003c 1301 eab6 0041 b800 1ea6 0049 b800
    0x0000500: 1eb8 0030 bb01 e959 1906 b800 9c99 000f
    0x0000510: 3a0c 5757 190c b801 f0a7 0006 b701 f1b0
    0x0000520: b800 1eb8 0030 3a07 b800 1eb8 0030 bb00
    0x0000530: ea59 1301 f319 07b7 014b 5912 fb13 0193
    0x0000540: b801 00bf b800 1eb8 0030 2c13 01f5 b800
    0x0000550: 3c13 01f6 b600 41b8 001e a600 0fb8 001e
    0x0000560: b800 3019 06b8 01fa b0b8 001e b800 302c
    0x0000570: 1301 fcb8 003c 1301 fdb6 0041 b800 1ea6
    0x0000580: 000f b800 1eb8 0030 1906 b802 03b0 b800
    0x0000590: 1eb8 0030 2c12 4cb8 003c 1302 04b6 0041
    0x00005a0: b800 1ea6 004f b800 1eb8 0030 bb00 4c59
    0x00005b0: 1906 1904 b902 0801 00b8 009c 9900 163a
    0x00005c0: 0d3a 0e58 bb02 0a59 190e 190e b702 0da7
    0x00005d0: 0006 b702 0e3a 07b8 001e b800 3019 0719
    0x00005e0: 04b9 0212 0100 b602 16b8 001e b800 3019
    0x00005f0: 07b0 b800 1eb8 0030 2c12 96b8 003c 1302
    0x0000600: 17b6 0041 b800 1ea5 0029 2c13 0219 b800
    0x0000610: 3c13 021a b600 41b8 001e a500 162c 1302
    0x0000620: 1cb8 003c 1302 1db6 0041 b800 1ea6 003f
    0x0000630: b800 1eb8 0030 1906 b800 9c99 0009 b802
    0x0000640: 21a7 0006 b802 22b0 b800 1eb8 0030 3a07
    0x0000650: b800 1eb8 0030 bb00 ea59 1302 2419 07b7
    0x0000660: 014b 5912 fb13 0193 b801 00bf b800 1eb8
    0x0000670: 0030 2c12 8fb8 003c 1302 25b6 0041 b800
    0x0000680: 1ea6 0071 b800 1eb8 0030 1906 1302 27b6
    0x0000690: 022b b800 3c13 022c b600 41b8 001e 9b00
    0x00006a0: 2fb2 022e b800 3c13 022f b600 41b8 001e
    0x00006b0: 9a00 1db8 001e b800 30bb 00ea 5913 0231
    0x00006c0: b700 fa59 12fb 1301 93b8 0100 bfb8 001e
    0x00006d0: b800 30bb 008f 5919 06b8 009c 9900 123a
    0x00006e0: 0f58 bb02 3359 190f b702 34a7 0006 b702
    0x00006f0: 35b0 b800 1eb8 0030 2c12 a7b8 003c 1302
    0x0000700: 36b6 0041 b800 1ea6 000f b800 1eb8 0030
    0x0000710: 1906 b802 39b0 b800 1eb8 0030 2cc1 023b
    0x0000720: b800 3c13 023c b600 41b8 001e 9900 1db8
    0x0000730: 001e b800 302c c002 3b3a 07b8 001e b800
    0x0000740: 3019 07b9 0240 0100 4db8 001e b800 302c
    0x0000750: 126a b800 3c13 0241 b600 41b8 001e a600
    0x0000760: 17b8 001e b800 3019 062b b602 45b6 024b
    0x0000770: 03b8 024f b0b8 001e b800 302c 1302 51b8
    0x0000780: 003c 1302 52b6 0041 b800 1ea6 000f b800
    0x0000790: 1eb8 0030 1906 b802 56b0 b800 1eb8 0030
    0x00007a0: 2c12 aeb8 003c 1302 57b6 0041 b800 1ea6
    0x00007b0: 000f b800 1eb8 0030 1906 b801 bdb0 b800
    0x00007c0: 1eb8 0030 2c13 0259 b800 3c13 025a b600
    0x00007d0: 41b8 001e a600 13b8 001e b800 30bb 0259
    0x00007e0: 5919 06b7 025b b0b8 001e b800 302c c100
    0x00007f0: 6ab8 003c 1302 5cb6 0041 b800 1e99 0172
    0x0000800: b800 1eb8 0030 2cc0 006a b600 6d3a 07b8
    0x0000810: 001e b800 3019 0713 025e b600 dfb8 003c
    0x0000820: 1302 5fb6 0041 b800 1e99 011a b800 1eb8
    0x0000830: 0030 b202 61b8 003c 1302 62b6 0041 b800
    0x0000840: 1ec7 0043 b202 64b8 003c 1302 65b6 0041
    0x0000850: b800 1e9a 0031 b800 1eb8 0030 1302 67b8
    0x0000860: 026a 3a0a b800 1eb8 0030 190a 1302 6c05
    0x0000870: bd00 6a59 0312 d253 5904 1302 6e53 b602
    0x0000880: 72b3 0261 b800 1eb8 0030 b202 61b8 003c
    0x0000890: 1302 73b6 0041 b800 1ec6 0021 b800 1eb8
    0x00008a0: 0030 b202 6101 05bd 0004 5903 1906 5359
    0x00008b0: 0403 bd00 d253 b602 79b0 b800 1eb8 0030
    0x00008c0: bb00 ea59 1302 7bb7 00fa 5912 fb13 0193
    0x00008d0: b801 00bf b800 1eb8 0030 3a0a b800 1eb8
    0x00008e0: 0030 04b3 0264 b800 1eb8 0030 b800 3c13
    0x00008f0: 027c b600 41b8 001e a700 4bb8 001e b800
    0x0000900: 303a 0ab8 001e b800 30bb 00ea 5913 027b
    0x0000910: 190a b701 4b59 12fb 1301 93b8 0100 bfb8
    0x0000920: 001e b800 303a 0ab8 001e b800 30bb 00ea
    0x0000930: 5913 027b 190a b701 4b59 12fb 1301 93b8
    0x0000940: 0100 bfb8 001e b800 30bb 00ea 59bb 00ec
    0x0000950: 59b7 00ed 1302 7eb6 00f3 1907 b600 f3b6
    0x0000960: 00f8 b700 fa59 12fb 1301 93b8 0100 bfb8
    0x0000970: 001e b800 30bb 00ea 59bb 00ec 59b7 00ed
    0x0000980: 1302 7eb6 00f3 2cb8 009c 9900 09b8 0281
    0x0000990: a700 06b6 0282 b600 f3b6 00f8 b700 fa59
    0x00009a0: 12fb 1301 93b8 0100 bf                 
  Exception Handler Table:
    bci [1278, 1311] => handler: 1312
    bci [1584, 1607] => handler: 1608
    bci [2092, 2233] => handler: 2260
    bci [2234, 2260] => handler: 2260
    bci [2092, 2233] => handler: 2299
    bci [2234, 2260] => handler: 2299
    bci [2092, 2233] => handler: 2335
    bci [2234, 2260] => handler: 2335
  Stackmap Table:
    append_frame(@87,Object[#377])
    append_frame(@117,Object[#150],Integer)
    append_frame(@219,Object[#210])
    same_frame_extended(@314)
    same_frame(@357)
    same_frame(@380)
    same_frame(@444)
    full_frame(@495,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#150],Integer,Object[#210]},{Uninitialized[#462],Uninitialized[#462],Object[#150],Integer})
    same_locals_1_stack_item_frame(@498,Object[#122])
    chop_frame(@499,3)
    same_frame_extended(@636)
    same_frame(@664)
    same_frame(@690)
    same_frame(@741)
    append_frame(@753,Object[#4])
    same_frame(@800)
    same_frame(@854)
    full_frame(@968,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Top,Object[#434],Top,Top,Object[#210]},{})
    chop_frame(@1019,3)
    same_frame(@1065)
    chop_frame(@1078,2)
    append_frame(@1104,Object[#210])
    same_frame(@1147)
    same_frame(@1155)
    same_locals_1_stack_item_frame(@1200,Object[#210])
    same_locals_1_stack_item_frame(@1203,Object[#469])
    same_frame(@1204)
    same_locals_1_stack_item_frame(@1249,Object[#210])
    same_locals_1_stack_item_frame(@1252,Object[#479])
    same_frame(@1253)
    full_frame(@1308,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#1284],Uninitialized[#1284],Object[#210]})
    same_locals_1_stack_item_frame(@1311,Object[#489])
    same_locals_1_stack_item_frame(@1312,Object[#360])
    same_frame(@1348)
    same_frame(@1385)
    same_frame(@1422)
    full_frame(@1490,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#1452],Uninitialized[#1452],Object[#210],Object[#508]})
    same_locals_1_stack_item_frame(@1493,Object[#76])
    same_frame(@1522)
    same_frame(@1584)
    same_locals_1_stack_item_frame(@1604,Object[#210])
    same_locals_1_stack_item_frame(@1607,Object[#150])
    same_locals_1_stack_item_frame(@1608,Object[#362])
    same_frame(@1644)
    same_frame_extended(@1741)
    full_frame(@1774,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#1747],Uninitialized[#1747],Object[#210]})
    same_locals_1_stack_item_frame(@1777,Object[#143])
    same_frame(@1778)
    same_frame(@1814)
    same_frame(@1865)
    same_frame(@1909)
    same_frame(@1946)
    same_frame(@1982)
    same_frame(@2023)
    append_frame(@2180,Object[#210])
    same_frame(@2234)
    same_locals_1_stack_item_frame(@2260,Object[#364])
    same_locals_1_stack_item_frame(@2299,Object[#366])
    same_locals_1_stack_item_frame(@2335,Object[#368])
    same_frame(@2371)
    chop_frame(@2415,1)
    full_frame(@2451,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#2421],Uninitialized[#2421],Object[#236],Object[#294]})
    full_frame(@2454,{Object[#2],Object[#370],Object[#294],Object[#4],Object[#377],Object[#4],Object[#210]},{Uninitialized[#2421],Uninitialized[#2421],Object[#236],Object[#210]})

[MASTER] 14:37:05.454 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.serializer.FieldSerializer: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/serializer/FieldSerializer.getPropertyValue(Ljava/lang/Object;)Ljava/lang/Object; @147: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[3]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @147
    flags: { }
    locals: { 'com/alibaba/fastjson/serializer/FieldSerializer', 'java/lang/Object', 'java/lang/Object', 'java/util/Locale', 'java/lang/String' }
    stack: { uninitialized 139, uninitialized 139, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 2bb8 0032 2ab4 003e 2bb6 0120 4db8
    0x0000010: 002b b800 322a b400 afb8 004a 1301 2bb6
    0x0000020: 004f b800 2bc6 0094 2cb8 004a 1301 2cb6
    0x0000030: 004f b800 2bc6 0084 b800 2bb8 0032 2ab4
    0x0000040: 003e b401 2f13 0131 b800 4a13 0132 b600
    0x0000050: 4fb8 002b a500 1c2a b400 3eb4 012f 1301
    0x0000060: 34b8 004a 1301 35b6 004f b800 2ba6 004c
    0x0000070: b800 2bb8 0032 bb01 3759 2ab4 00af b201
    0x0000080: 3db8 0142 9900 154e 3a04 58bb 0144 5919
    0x0000090: 0419 04b7 0147 a700 06b7 0148 3a05 b800
    0x00000a0: 2bb8 0032 1905 b201 4cb6 0150 b800 2bb8
    0x00000b0: 0032 1905 2cb6 0153 b0b8 002b b800 322c
    0x00000c0: b0                                     
  Stackmap Table:
    append_frame(@112,Object[#5])
    full_frame(@153,{Object[#2],Object[#5],Object[#5]},{Uninitialized[#118],Uninitialized[#118],Object[#177],Object[#344]})
    same_locals_1_stack_item_frame(@156,Object[#311])
    same_frame(@185)

[MASTER] 14:37:05.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.VerifyError: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/parser/DefaultJSONParser.getDateFormat()Ljava/text/DateFormat; @63: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[4]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @63
    flags: { }
    locals: { 'com/alibaba/fastjson/parser/DefaultJSONParser', 'java/util/Locale', 'java/lang/String' }
    stack: { 'com/alibaba/fastjson/parser/DefaultJSONParser', uninitialized 57, uninitialized 57, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 3fb8 0044 2ab4 004c b800 5212 53b6
    0x0000010: 0057 b800 3fc7 004c b800 3fb8 0044 2abb
    0x0000020: 0059 592a b400 462a b400 5bb9 0061 0100
    0x0000030: b800 6799 0012 4c4d 58bb 0069 592c 2cb7
    0x0000040: 006d a700 06b7 006e b500 4cb8 003f b800
    0x0000050: 442a b400 4c2a b400 5bb9 0072 0100 b600
    0x0000060: 78b8 003f b800 442a b400 4cb0          
  Stackmap Table:
    full_frame(@69,{Object[#2]},{Object[#2],Uninitialized[#31],Uninitialized[#31],Object[#122],Object[#124]})
    full_frame(@72,{Object[#2]},{Object[#2],Object[#89]})
    same_frame(@97)

[MASTER] 14:37:05.491 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("");
JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
HashMap<Integer, Method> hashMap1 = new HashMap<Integer, Method>();
jSONReader1.readObject((Map) hashMap1);

[MASTER] 14:37:05.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 14:37:05.472 [logback-2] ERROR ClassStateSupport - Could not initialize com.alibaba.fastjson.parser.ParserConfig: Bad type on operand stack
Exception Details:
  Location:
    com/alibaba/fastjson/util/TypeUtils.castToDate(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date; @1094: invokespecial
  Reason:
    Type 'java/lang/String' (current frame, stack[3]) is not assignable to 'java/util/Locale'
  Current Frame:
    bci: @1094
    flags: { }
    locals: { 'java/lang/Object', 'java/lang/String', long, long_2nd, top, top, top, top, 'java/lang/String', 'com/alibaba/fastjson/parser/JSONScanner', top, top, top, 'java/util/Locale', 'java/lang/String' }
    stack: { uninitialized 1086, uninitialized 1086, 'java/lang/String', 'java/lang/String' }
  Bytecode:
    0x0000000: b800 49b8 005c 2ab8 0064 1301 c1b6 0069
    0x0000010: b800 49c7 000b b800 49b8 005c 01b0 b800
    0x0000020: 49b8 005c 2ac1 01c3 b800 6413 01c4 b600
    0x0000030: 69b8 0049 9900 0eb8 0049 b800 5c2a c001
    0x0000040: c3b0 b800 49b8 005c 2ac1 01c6 b800 6413
    0x0000050: 01c7 b600 69b8 0049 9900 11b8 0049 b800
    0x0000060: 5c2a c001 c6b6 01cb b0b8 0049 b800 5c14
    0x0000070: 01cc 41b8 0049 b800 5c2a c100 dab8 0064
    0x0000080: 1301 ceb6 0069 b800 4999 0035 b800 49b8
    0x0000090: 005c 2ac0 00da b801 d141 b800 49b8 005c
    0x00000a0: bb01 c359 20b8 00cd 9900 1237 0458 bb01
    0x00000b0: d359 1604 b701 d6a7 0006 b701 d7b0 b800
    0x00000c0: 49b8 005c 2ac1 00e7 b800 6413 01d8 b600
    0x00000d0: 69b8 0049 9900 5db8 0049 b800 5c2a c000
    0x00000e0: e7b6 0167 41b8 0049 b800 5c13 01da 2bb6
    0x00000f0: 00f7 b800 6413 01db b600 69b8 0049 9900
    0x0000100: 0fb8 0049 b800 5c20 1401 dc69 41b8 0049
    0x0000110: b800 5cbb 01c3 5920 b800 cd99 0012 3706
    0x0000120: 58bb 01d3 5916 06b7 01d6 a700 06b7 01d7
    0x0000130: b0b8 0049 b800 5c2a c100 d5b8 0064 1301
    0x0000140: deb6 0069 b800 4999 0389 b800 49b8 005c
    0x0000150: 2ac0 00d5 3a08 b800 49b8 005c bb01 e059
    0x0000160: 1908 b701 e13a 09b8 0049 b800 5c19 0903
    0x0000170: b601 e5b8 0064 1301 e6b6 0069 b800 4999
    0x0000180: 0031 b800 49b8 005c 1909 b601 ea3a 0ab8
    0x0000190: 0049 b800 5c19 0ab6 01cb 3a0b b800 49b8
    0x00001a0: 005c 1909 b601 edb8 0049 b800 5c19 0bb0
    0x00001b0: b800 49b8 005c 1909 b601 edb8 0049 b800
    0x00001c0: 5cb8 0064 1301 eeb6 0069 b800 49a7 0023
    0x00001d0: b800 49b8 005c 3a0c 1909 b601 edb8 0049
    0x00001e0: b800 5c19 0c59 1301 1213 01ef b801 17bf
    0x00001f0: b800 49b8 005c 1908 1301 f1b6 01f5 b800
    0x0000200: 6413 01f6 b600 69b8 0049 9900 3019 0813
    0x0000210: 01f8 b601 fbb8 0064 1301 fcb6 0069 b800
    0x0000220: 4999 0019 b800 49b8 005c 1908 1006 1908
    0x0000230: b600 f005 64b6 0200 3a08 b800 49b8 005c
    0x0000240: 1908 102d b601 8eb8 0064 1302 01b6 0069
    0x0000250: b800 499d 0019 1908 102b b601 8eb8 0064
    0x0000260: 1302 02b6 0069 b800 499e 0239 b800 49b8
    0x0000270: 005c 2bb8 0064 1302 03b6 0069 b800 49c7
    0x0000280: 01a6 b800 49b8 005c 1908 b600 f0b2 0208
    0x0000290: b600 f0b8 0064 1302 09b6 0069 b800 499f
    0x00002a0: 0037 1908 b800 49b8 005c b600 f010 16b8
    0x00002b0: 0064 1302 0ab6 0069 b800 49a0 0034 b202
    0x00002c0: 0813 020c b600 f7b8 0064 1302 0db6 0069
    0x00002d0: b800 4999 001c b800 49b8 005c b202 084c
    0x00002e0: b800 6413 020e b600 69b8 0049 a701 39b8
    0x00002f0: 0049 b800 5c19 08b6 00f0 100a b800 6413
    0x0000300: 020f b600 69b8 0049 a000 1cb8 0049 b800
    0x0000310: 5c13 0211 4cb8 0064 1302 12b6 0069 b800
    0x0000320: 49a7 0104 b800 49b8 005c 1908 b600 f013
    0x0000330: 0214 b600 f0b8 0064 1302 15b6 0069 b800
    0x0000340: 49a0 001c b800 49b8 005c 1302 144c b800
    0x0000350: 6413 0216 b600 69b8 0049 a700 cbb8 0049
    0x0000360: b800 5c19 08b6 00f0 101d b800 6413 0217
    0x0000370: b600 69b8 0049 a000 5819 0810 1ab8 0049
    0x0000380: b800 5cb6 0129 103a b800 6413 0218 b600
    0x0000390: 69b8 0049 a000 3a19 0810 1cb8 0049 b800
    0x00003a0: 5cb6 0129 1030 b800 6413 0219 b600 69b8
    0x00003b0: 0049 a000 1cb8 0049 b800 5c13 021b 4cb8
    0x00003c0: 0064 1302 1cb6 0069 b800 49a7 005a b800
    0x00003d0: 49b8 005c 1908 b600 f010 17b8 0064 1302
    0x00003e0: 1db6 0069 b800 49a0 0034 1908 1013 b601
    0x00003f0: 2910 2cb8 0064 1302 1eb6 0069 b800 49a0
    0x0000400: 001c b800 49b8 005c 1302 204c b800 6413
    0x0000410: 0221 b600 69b8 0049 a700 0db8 0049 b800
    0x0000420: 5c13 0223 4cb8 0049 b800 5cbb 0225 592b
    0x0000430: b202 29b8 00cd 9900 163a 0d3a 0e58 bb02
    0x0000440: 2b59 190e 190e b702 2ea7 0006 b702 2f3a
    0x0000450: 0ab8 0049 b800 5c19 0ab2 0233 b602 37b8
    0x0000460: 0049 b800 5c19 0a19 08b6 023b b0b8 0049
    0x0000470: b800 5c3a 0bb8 0049 b800 5cbb 0101 59bb
    0x0000480: 0103 59b7 0104 1302 3db6 010a 1908 b601
    0x0000490: 0ab6 010e b701 1159 1301 1213 01ef b801
    0x00004a0: 17bf b800 49b8 005c 1908 b600 f0b8 0064
    0x00004b0: 1302 3eb6 0069 b800 499a 000b b800 49b8
    0x00004c0: 005c 01b0 b800 49b8 005c 1908 b802 4441
    0x00004d0: b800 49b8 005c 2014 01cc 94b8 0064 1302
    0x00004e0: 45b6 0069 b800 499a 0275 b800 49b8 005c
    0x00004f0: 2ab6 0249 3a08 b800 49b8 005c 1302 4b19
    0x0000500: 08b6 024e b600 f7b8 0064 1302 4fb6 0069
    0x0000510: b800 4999 0100 b800 49b8 005c b202 51b8
    0x0000520: 0064 1302 52b6 0069 b800 49c7 008f b202
    0x0000530: 54b8 0064 1302 55b6 0069 b800 499a 007d
    0x0000540: b800 49b8 005c 1908 1302 5703 bd00 70b6
    0x0000550: 0085 b302 51b8 0049 b800 5c04 b302 54b8
    0x0000560: 0049 b800 5cb8 0064 1302 58b6 0069 b800
    0x0000570: 49a7 0049 b800 49b8 005c 3a09 b800 49b8
    0x0000580: 005c 04b3 0254 b800 49b8 005c b800 6413
    0x0000590: 0259 b600 69b8 0049 a700 22b8 0049 b800
    0x00005a0: 5c3a 0f04 b302 54b8 0049 b800 5c19 0f59
    0x00005b0: 1301 1213 01ef b801 17bf b800 49b8 005c
    0x00005c0: b202 512a 03bd 0004 b600 8e3a 09b8 0049
    0x00005d0: b800 5cb8 0064 1302 5ab6 0069 b800 49a7
    0x00005e0: 0028 b800 49b8 005c 3a0a b800 49b8 005c
    0x00005f0: bb01 0159 1302 5c19 0ab7 025f 5913 0112
    0x0000600: 1301 efb8 0117 bfb8 0049 b800 5c19 09c0
    0x0000610: 01c3 b0b8 0049 b800 5c13 0261 1908 b602
    0x0000620: 4eb6 00f7 b800 6413 0262 b600 69b8 0049
    0x0000630: 9901 00b8 0049 b800 5cb2 0264 b800 6413
    0x0000640: 0265 b600 69b8 0049 c700 8fb2 0267 b800
    0x0000650: 6413 0268 b600 69b8 0049 9a00 7db8 0049
    0x0000660: b800 5c19 0813 0257 03bd 0070 b600 85b3
    0x0000670: 0264 b800 49b8 005c 04b3 0267 b800 49b8
    0x0000680: 005c b800 6413 0269 b600 69b8 0049 a700
    0x0000690: 49b8 0049 b800 5c3a 09b8 0049 b800 5c04
    0x00006a0: b302 67b8 0049 b800 5cb8 0064 1302 6ab6
    0x00006b0: 0069 b800 49a7 0022 b800 49b8 005c 3a10
    0x00006c0: 04b3 0267 b800 49b8 005c 1910 5913 0112
    0x00006d0: 1301 efb8 0117 bfb8 0049 b800 5cb2 0264
    0x00006e0: 2a03 bd00 04b6 008e 3a09 b800 49b8 005c
    0x00006f0: b800 6413 026b b600 69b8 0049 a700 28b8
    0x0000700: 0049 b800 5c3a 0ab8 0049 b800 5cbb 0101
    0x0000710: 5913 026d 190a b702 5f59 1301 1213 01ef
    0x0000720: b801 17bf b800 49b8 005c 1909 c001 c3b0
    0x0000730: b800 49b8 005c bb01 0159 bb01 0359 b701
    0x0000740: 0413 023d b601 0a2a b601 0db6 010e b701
    0x0000750: 1159 1301 1213 01ef b801 17bf b800 49b8
    0x0000760: 005c bb01 c359 20b8 00cd 9900 1237 1158
    0x0000770: bb01 d359 1611 b701 d6a7 0006 b701 d7b0
    0x0000780:                                        
  Exception Handler Table:
    bci [359, 412] => handler: 464
    bci [464, 472] => handler: 464
    bci [1119, 1132] => handler: 1133
    bci [1344, 1365] => handler: 1396
    bci [1344, 1365] => handler: 1435
    bci [1396, 1404] => handler: 1435
    bci [1435, 1443] => handler: 1435
    bci [1466, 1485] => handler: 1506
    bci [1629, 1650] => handler: 1681
    bci [1629, 1650] => handler: 1720
    bci [1681, 1689] => handler: 1720
    bci [1720, 1728] => handler: 1720
    bci [1751, 1770] => handler: 1791
  Stackmap Table:
    same_frame(@30)
    same_frame(@66)
    same_frame(@105)
    full_frame(@186,{Object[#4],Object[#213],Long},{Uninitialized[#160],Uninitialized[#160],Long})
    same_locals_1_stack_item_frame(@189,Object[#451])
    same_frame(@190)
    same_frame_extended(@269)
    full_frame(@301,{Object[#4],Object[#213],Long},{Uninitialized[#275],Uninitialized[#275],Long})
    same_locals_1_stack_item_frame(@304,Object[#451])
    same_frame(@305)
    full_frame(@432,{Object[#4],Object[#213],Long,Top,Top,Top,Top,Object[#213],Object[#480]},{})
    same_locals_1_stack_item_frame(@464,Object[#87])
    same_frame(@496)
    same_frame_extended(@570)
    same_frame(@620)
    same_frame_extended(@726)
    same_frame(@751)
    same_frame(@804)
    same_frame(@861)
    same_frame_extended(@974)
    same_frame_extended(@1051)
    same_frame(@1061)
    full_frame(@1100,{Object[#4],Object[#213],Long,Top,Top,Top,Top,Object[#213],Object[#480]},{Uninitialized[#1067],Uninitialized[#1067],Object[#213],Object[#635]})
    same_locals_1_stack_item_frame(@1103,Object[#549])
    full_frame(@1133,{Object[#4],Object[#213],Long,Top,Top,Top,Top,Object[#213],Object[#480],Object[#549]},{Object[#444]})
    chop_frame(@1186,1)
    same_frame(@1220)
    full_frame(@1232,{Object[#4],Object[#213],Long},{})
    full_frame(@1396,{Object[#4],Object[#213],Long,Top,Top,Top,Top,Object[#112]},{Object[#446]})
    same_locals_1_stack_item_frame(@1435,Object[#87])
    same_frame(@1466)
    same_locals_1_stack_item_frame(@1506,Object[#448])
    append_frame(@1543,Object[#4])
    chop_frame(@1555,1)
    same_locals_1_stack_item_extended(@1681,Object[#446])
    same_locals_1_stack_item_frame(@1720,Object[#87])
    same_frame(@1751)
    same_locals_1_stack_item_frame(@1791,Object[#448])
    append_frame(@1828,Object[#4])
    chop_frame(@1840,1)
    full_frame(@1884,{Object[#4],Object[#213],Long},{})
    full_frame(@1916,{Object[#4],Object[#213],Long},{Uninitialized[#1890],Uninitialized[#1890],Long})
    same_locals_1_stack_item_frame(@1919,Object[#451])

[MASTER] 14:37:05.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.604 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.693 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.735 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.768 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.867 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:05.946 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.042 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.086 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.143 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.176 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.242 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.277 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.350 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.385 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.428 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.457 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_91_1590151026429/com/alibaba/fastjson/JSONReader_91_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_91_1590151026429/com/alibaba/fastjson/JSONReader_91_tmp__ESTest_scaffolding.java]]
[MASTER] 14:37:06.457 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:37:06.457 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:37:06.462 [logback-2] ERROR JUnitAnalyzer - Diagnostic:  cannot find symbol
   symbol:   variable parserConfig1
   location:  class com.alibaba.fastjson.JSONReader_91_tmp__ESTest: 23
[MASTER] 14:37:06.463 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:37:06.463 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_91_1590151026429/com/alibaba/fastjson/JSONReader_91_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 12:37:06 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.alibaba.fastjson.JSONReader;
11: import com.alibaba.fastjson.parser.DefaultJSONParser;
12: import com.alibaba.fastjson.parser.ParserConfig;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class JSONReader_91_tmp__ESTest extends JSONReader_91_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       ParserConfig.getGlobalInstance();
23:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("-99", parserConfig1);
24:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
25:       Long long1 = jSONReader1.readLong();
26:       assertEquals((-99L), (long)long1);
27:   }
28: }
RegularFileObject[/tmp/EvoSuite_91_1590151026429/com/alibaba/fastjson/JSONReader_91_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 12:37:06 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONReader_91_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONReader"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONReader_91_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
89:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
90:       "com.alibaba.fastjson.serializer.JSONSerializable",
91:       "com.alibaba.fastjson.serializer.SerializeWriter",
92:       "com.alibaba.fastjson.serializer.ReferenceCodec",
93:       "com.alibaba.fastjson.JSONException",
94:       "com.alibaba.fastjson.asm.TypeCollector$1",
95:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
96:       "com.alibaba.fastjson.serializer.ToStringSerializer",
97:       "com.alibaba.fastjson.serializer.SerialContext",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.serializer.AfterFilter",
100:       "com.alibaba.fastjson.TypeReference",
101:       "com.alibaba.fastjson.serializer.ObjectSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.serializer.MapSerializer",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
106:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
107:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
108:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
109:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
110:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
111:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
112:       "com.alibaba.fastjson.util.FieldInfo",
113:       "com.alibaba.fastjson.serializer.PropertyFilter",
114:       "com.alibaba.fastjson.annotation.JSONField",
115:       "com.alibaba.fastjson.parser.SymbolTable",
116:       "com.alibaba.fastjson.serializer.NameFilter",
117:       "com.alibaba.fastjson.serializer.ListSerializer",
118:       "com.alibaba.fastjson.JSONArray",
119:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
120:       "com.alibaba.fastjson.JSONAware",
121:       "com.alibaba.fastjson.serializer.LongCodec",
122:       "com.alibaba.fastjson.util.ASMClassLoader",
123:       "com.alibaba.fastjson.PropertyNamingStrategy",
124:       "com.alibaba.fastjson.parser.JSONToken",
125:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
126:       "com.alibaba.fastjson.serializer.AppendableSerializer",
127:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
128:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
129:       "com.alibaba.fastjson.serializer.ContextValueFilter",
130:       "com.alibaba.fastjson.util.ServiceLoader",
131:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
132:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
133:       "com.alibaba.fastjson.parser.DefaultJSONParser",
134:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
135:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
136:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
137:       "com.alibaba.fastjson.serializer.BeanContext",
138:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
139:       "com.alibaba.fastjson.util.IdentityHashMap",
140:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
141:       "com.alibaba.fastjson.JSON",
142:       "com.alibaba.fastjson.serializer.StringCodec",
143:       "com.alibaba.fastjson.serializer.SerializeFilterable",
144:       "com.alibaba.fastjson.JSONWriter",
145:       "com.alibaba.fastjson.asm.Opcodes",
146:       "com.alibaba.fastjson.JSONStreamContext",
147:       "com.alibaba.fastjson.JSONReader",
148:       "com.alibaba.fastjson.JSONStreamAware",
149:       "com.alibaba.fastjson.asm.MethodWriter",
150:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
151:       "com.alibaba.fastjson.serializer.SerializerFeature",
152:       "com.alibaba.fastjson.TypeReference$1",
153:       "com.alibaba.fastjson.serializer.CalendarCodec",
154:       "com.alibaba.fastjson.util.IOUtils",
155:       "com.alibaba.fastjson.util.TypeUtils",
156:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
157:       "com.alibaba.fastjson.asm.ClassReader",
158:       "com.alibaba.fastjson.spi.Module",
159:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
160:       "com.alibaba.fastjson.serializer.MiscCodec",
161:       "com.alibaba.fastjson.util.IOUtils$1",
162:       "com.alibaba.fastjson.serializer.IntegerCodec",
163:       "com.alibaba.fastjson.serializer.SerializeFilter",
164:       "com.alibaba.fastjson.JSONPObject",
165:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
166:       "com.alibaba.fastjson.serializer.BeforeFilter",
167:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
168:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
169:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
170:       "com.alibaba.fastjson.JSONObject",
171:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
172:       "com.alibaba.fastjson.serializer.CharacterCodec",
173:       "com.alibaba.fastjson.asm.TypeCollector",
174:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
175:       "com.alibaba.fastjson.asm.ByteVector",
176:       "com.alibaba.fastjson.parser.JSONLexer",
177:       "com.alibaba.fastjson.util.ASMClassLoader$1",
178:       "com.alibaba.fastjson.asm.Label",
179:       "com.alibaba.fastjson.asm.FieldWriter",
180:       "com.alibaba.fastjson.serializer.JSONSerializer",
181:       "com.alibaba.fastjson.util.JavaBeanInfo",
182:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
183:       "com.alibaba.fastjson.serializer.SerializeConfig",
184:       "com.alibaba.fastjson.serializer.AtomicCodec",
185:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
186:       "com.alibaba.fastjson.asm.Type",
187:       "com.alibaba.fastjson.serializer.FieldSerializer",
188:       "com.alibaba.fastjson.serializer.FloatCodec",
189:       "com.alibaba.fastjson.parser.JSONReaderScanner",
190:       "com.alibaba.fastjson.serializer.ValueFilter",
191:       "com.alibaba.fastjson.JSONPathException",
192:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
193:       "com.alibaba.fastjson.serializer.Labels",
194:       "com.alibaba.fastjson.serializer.CollectionCodec",
195:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
196:       "com.alibaba.fastjson.serializer.CharArrayCodec",
197:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
198:       "com.alibaba.fastjson.asm.MethodVisitor",
199:       "com.alibaba.fastjson.annotation.JSONCreator",
200:       "com.alibaba.fastjson.asm.MethodCollector",
201:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
202:       "com.alibaba.fastjson.serializer.LabelFilter",
203:       "com.alibaba.fastjson.annotation.JSONType",
204:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
205:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
206:       "com.alibaba.fastjson.serializer.DoubleSerializer",
207:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
208:       "com.alibaba.fastjson.serializer.BooleanCodec",
209:       "com.alibaba.fastjson.parser.ParserConfig",
210:       "com.alibaba.fastjson.parser.Feature",
211:       "com.alibaba.fastjson.parser.ParseContext",
212:       "com.alibaba.fastjson.serializer.PropertyPreFilter"
213:     );
214:   } 
215: 
216:   private static void resetClasses() {
217:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONReader_91_tmp__ESTest_scaffolding.class.getClassLoader()); 
218: 
219:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
220:       "com.alibaba.fastjson.JSONReader",
221:       "com.alibaba.fastjson.util.IOUtils$1",
222:       "com.alibaba.fastjson.util.IOUtils",
223:       "com.alibaba.fastjson.util.TypeUtils",
224:       "com.alibaba.fastjson.util.IdentityHashMap",
225:       "com.alibaba.fastjson.util.ASMUtils",
226:       "com.alibaba.fastjson.parser.SymbolTable",
227:       "com.alibaba.fastjson.serializer.SerializerFeature",
228:       "com.alibaba.fastjson.JSON",
229:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
230:       "com.alibaba.fastjson.util.ASMClassLoader$1",
231:       "com.alibaba.fastjson.util.ASMClassLoader",
232:       "com.alibaba.fastjson.serializer.MiscCodec",
233:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
234:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
235:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
236:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
237:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
238:       "com.alibaba.fastjson.serializer.DateCodec",
239:       "com.alibaba.fastjson.serializer.CalendarCodec",
240:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
241:       "com.alibaba.fastjson.serializer.CollectionCodec",
242:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
243:       "com.alibaba.fastjson.serializer.StringCodec",
244:       "com.alibaba.fastjson.serializer.CharacterCodec",
245:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
246:       "com.alibaba.fastjson.serializer.IntegerCodec",
247:       "com.alibaba.fastjson.serializer.LongCodec",
248:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
249:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
250:       "com.alibaba.fastjson.serializer.FloatCodec",
251:       "com.alibaba.fastjson.serializer.BooleanCodec",
252:       "com.alibaba.fastjson.serializer.CharArrayCodec",
253:       "com.alibaba.fastjson.serializer.ReferenceCodec",
254:       "com.alibaba.fastjson.serializer.AtomicCodec",
255:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
256:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
257:       "com.alibaba.fastjson.parser.ParserConfig",
258:       "com.alibaba.fastjson.parser.DefaultJSONParser",
259:       "com.alibaba.fastjson.parser.JSONLexerBase",
260:       "com.alibaba.fastjson.parser.JSONScanner",
261:       "com.alibaba.fastjson.JSONException",
262:       "com.alibaba.fastjson.parser.JSONToken",
263:       "com.alibaba.fastjson.TypeReference$1",
264:       "com.alibaba.fastjson.TypeReference",
265:       "com.alibaba.fastjson.parser.JSONReaderScanner",
266:       "com.alibaba.fastjson.JSONObject",
267:       "com.alibaba.fastjson.parser.ParseContext",
268:       "com.alibaba.fastjson.JSONStreamContext",
269:       "com.alibaba.fastjson.JSONArray",
270:       "com.alibaba.fastjson.serializer.SerializeWriter",
271:       "com.alibaba.fastjson.serializer.SerializeFilterable",
272:       "com.alibaba.fastjson.serializer.JSONSerializer",
273:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
274:       "com.alibaba.fastjson.serializer.DoubleSerializer",
275:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
276:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
277:       "com.alibaba.fastjson.serializer.AppendableSerializer",
278:       "com.alibaba.fastjson.serializer.ToStringSerializer",
279:       "com.alibaba.fastjson.serializer.SerializeConfig",
280:       "com.alibaba.fastjson.util.ServiceLoader",
281:       "com.alibaba.fastjson.serializer.MapSerializer",
282:       "com.alibaba.fastjson.serializer.SerialContext",
283:       "com.alibaba.fastjson.serializer.ListSerializer",
284:       "com.alibaba.fastjson.util.JavaBeanInfo",
285:       "com.alibaba.fastjson.asm.ClassWriter",
286:       "com.alibaba.fastjson.asm.ByteVector",
287:       "com.alibaba.fastjson.asm.Item",
288:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
289:       "com.alibaba.fastjson.asm.MethodWriter",
290:       "com.alibaba.fastjson.asm.Label",
291:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
292:       "com.alibaba.fastjson.asm.ClassReader",
293:       "com.alibaba.fastjson.asm.TypeCollector$1",
294:       "com.alibaba.fastjson.asm.TypeCollector",
295:       "com.alibaba.fastjson.asm.Type",
296:       "com.alibaba.fastjson.asm.MethodCollector",
297:       "com.alibaba.fastjson.util.FieldInfo",
298:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
299:       "com.alibaba.fastjson.asm.FieldWriter",
300:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
301:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
302:       "com.alibaba.fastjson.serializer.FieldSerializer",
303:       "com.alibaba.fastjson.serializer.BeanContext",
304:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
305:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
306:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
307:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
308:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
309:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
310:       "com.alibaba.fastjson.util.GenericArrayTypeImpl"
311:     );
312:   }
313: }

[MASTER] 14:37:06.514 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.635 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.678 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.720 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.758 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_97_1590151026721/com/alibaba/fastjson/JSONReader_97_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_97_1590151026721/com/alibaba/fastjson/JSONReader_97_tmp__ESTest_scaffolding.java]]
[MASTER] 14:37:06.758 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:37:06.758 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:37:06.759 [logback-2] ERROR JUnitAnalyzer - Diagnostic:  cannot find symbol
   symbol:   variable classLoader1
   location:  class com.alibaba.fastjson.JSONReader_97_tmp__ESTest: 27
[MASTER] 14:37:06.759 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:37:06.759 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_97_1590151026721/com/alibaba/fastjson/JSONReader_97_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 12:37:06 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.alibaba.fastjson.JSONReader;
11: import com.alibaba.fastjson.parser.DefaultJSONParser;
12: import com.alibaba.fastjson.parser.ParserConfig;
13: import com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory;
14: import java.lang.reflect.Method;
15: import java.util.HashMap;
16: import java.util.Map;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class JSONReader_97_tmp__ESTest extends JSONReader_97_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       ClassLoader.getSystemClassLoader();
27:       ASMDeserializerFactory aSMDeserializerFactory1 = new ASMDeserializerFactory(classLoader1);
28:       ParserConfig parserConfig1 = new ParserConfig(aSMDeserializerFactory1);
29:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("{\"x\":\"hello\",\"y\":7,\"z\":true,\"a\":-99,\"b\":{}}", parserConfig1);
30:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
31:       HashMap<Method, Integer> hashMap1 = new HashMap<Method, Integer>();
32:       HashMap hashMap2 = (HashMap)jSONReader1.readObject((Map) hashMap1);
33:       assertFalse(hashMap2.isEmpty());
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_97_1590151026721/com/alibaba/fastjson/JSONReader_97_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 12:37:06 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONReader_97_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONReader"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONReader_97_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
89:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
90:       "com.alibaba.fastjson.serializer.JSONSerializable",
91:       "com.alibaba.fastjson.serializer.SerializeWriter",
92:       "com.alibaba.fastjson.serializer.ReferenceCodec",
93:       "com.alibaba.fastjson.JSONException",
94:       "com.alibaba.fastjson.asm.TypeCollector$1",
95:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
96:       "com.alibaba.fastjson.serializer.ToStringSerializer",
97:       "com.alibaba.fastjson.serializer.SerialContext",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.serializer.AfterFilter",
100:       "com.alibaba.fastjson.TypeReference",
101:       "com.alibaba.fastjson.serializer.ObjectSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.serializer.MapSerializer",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
106:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
107:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
108:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
109:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
110:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
111:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
112:       "com.alibaba.fastjson.util.FieldInfo",
113:       "com.alibaba.fastjson.serializer.PropertyFilter",
114:       "com.alibaba.fastjson.annotation.JSONField",
115:       "com.alibaba.fastjson.parser.SymbolTable",
116:       "com.alibaba.fastjson.serializer.NameFilter",
117:       "com.alibaba.fastjson.serializer.ListSerializer",
118:       "com.alibaba.fastjson.JSONArray",
119:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
120:       "com.alibaba.fastjson.JSONAware",
121:       "com.alibaba.fastjson.serializer.LongCodec",
122:       "com.alibaba.fastjson.util.ASMClassLoader",
123:       "com.alibaba.fastjson.PropertyNamingStrategy",
124:       "com.alibaba.fastjson.parser.JSONToken",
125:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
126:       "com.alibaba.fastjson.serializer.AppendableSerializer",
127:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
128:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
129:       "com.alibaba.fastjson.serializer.ContextValueFilter",
130:       "com.alibaba.fastjson.util.ServiceLoader",
131:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
132:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
133:       "com.alibaba.fastjson.parser.DefaultJSONParser",
134:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
135:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
136:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
137:       "com.alibaba.fastjson.serializer.BeanContext",
138:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
139:       "com.alibaba.fastjson.util.IdentityHashMap",
140:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
141:       "com.alibaba.fastjson.JSON",
142:       "com.alibaba.fastjson.serializer.StringCodec",
143:       "com.alibaba.fastjson.serializer.SerializeFilterable",
144:       "com.alibaba.fastjson.JSONWriter",
145:       "com.alibaba.fastjson.asm.Opcodes",
146:       "com.alibaba.fastjson.JSONStreamContext",
147:       "com.alibaba.fastjson.JSONReader",
148:       "com.alibaba.fastjson.JSONStreamAware",
149:       "com.alibaba.fastjson.asm.MethodWriter",
150:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
151:       "com.alibaba.fastjson.serializer.SerializerFeature",
152:       "com.alibaba.fastjson.TypeReference$1",
153:       "com.alibaba.fastjson.serializer.CalendarCodec",
154:       "com.alibaba.fastjson.util.IOUtils",
155:       "com.alibaba.fastjson.util.TypeUtils",
156:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
157:       "com.alibaba.fastjson.asm.ClassReader",
158:       "com.alibaba.fastjson.spi.Module",
159:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
160:       "com.alibaba.fastjson.serializer.MiscCodec",
161:       "com.alibaba.fastjson.util.IOUtils$1",
162:       "com.alibaba.fastjson.serializer.IntegerCodec",
163:       "com.alibaba.fastjson.serializer.SerializeFilter",
164:       "com.alibaba.fastjson.JSONPObject",
165:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
166:       "com.alibaba.fastjson.serializer.BeforeFilter",
167:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
168:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
169:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
170:       "com.alibaba.fastjson.JSONObject",
171:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
172:       "com.alibaba.fastjson.serializer.CharacterCodec",
173:       "com.alibaba.fastjson.asm.TypeCollector",
174:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
175:       "com.alibaba.fastjson.asm.ByteVector",
176:       "com.alibaba.fastjson.parser.JSONLexer",
177:       "com.alibaba.fastjson.util.ASMClassLoader$1",
178:       "com.alibaba.fastjson.asm.Label",
179:       "com.alibaba.fastjson.asm.FieldWriter",
180:       "com.alibaba.fastjson.serializer.JSONSerializer",
181:       "com.alibaba.fastjson.util.JavaBeanInfo",
182:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
183:       "com.alibaba.fastjson.serializer.SerializeConfig",
184:       "com.alibaba.fastjson.serializer.AtomicCodec",
185:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
186:       "com.alibaba.fastjson.asm.Type",
187:       "com.alibaba.fastjson.serializer.FieldSerializer",
188:       "com.alibaba.fastjson.serializer.FloatCodec",
189:       "com.alibaba.fastjson.parser.JSONReaderScanner",
190:       "com.alibaba.fastjson.serializer.ValueFilter",
191:       "com.alibaba.fastjson.JSONPathException",
192:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
193:       "com.alibaba.fastjson.serializer.Labels",
194:       "com.alibaba.fastjson.serializer.CollectionCodec",
195:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
196:       "com.alibaba.fastjson.serializer.CharArrayCodec",
197:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
198:       "com.alibaba.fastjson.asm.MethodVisitor",
199:       "com.alibaba.fastjson.annotation.JSONCreator",
200:       "com.alibaba.fastjson.asm.MethodCollector",
201:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
202:       "com.alibaba.fastjson.serializer.LabelFilter",
203:       "com.alibaba.fastjson.annotation.JSONType",
204:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
205:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
206:       "com.alibaba.fastjson.serializer.DoubleSerializer",
207:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
208:       "com.alibaba.fastjson.serializer.BooleanCodec",
209:       "com.alibaba.fastjson.parser.ParserConfig",
210:       "com.alibaba.fastjson.parser.Feature",
211:       "com.alibaba.fastjson.parser.ParseContext",
212:       "com.alibaba.fastjson.serializer.PropertyPreFilter"
213:     );
214:   } 
215: 
216:   private static void resetClasses() {
217:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONReader_97_tmp__ESTest_scaffolding.class.getClassLoader()); 
218: 
219:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
220:       "com.alibaba.fastjson.JSONReader",
221:       "com.alibaba.fastjson.util.IOUtils$1",
222:       "com.alibaba.fastjson.util.IOUtils",
223:       "com.alibaba.fastjson.util.TypeUtils",
224:       "com.alibaba.fastjson.util.IdentityHashMap",
225:       "com.alibaba.fastjson.util.ASMUtils",
226:       "com.alibaba.fastjson.parser.SymbolTable",
227:       "com.alibaba.fastjson.serializer.SerializerFeature",
228:       "com.alibaba.fastjson.JSON",
229:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
230:       "com.alibaba.fastjson.util.ASMClassLoader$1",
231:       "com.alibaba.fastjson.util.ASMClassLoader",
232:       "com.alibaba.fastjson.serializer.MiscCodec",
233:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
234:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
235:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
236:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
237:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
238:       "com.alibaba.fastjson.serializer.DateCodec",
239:       "com.alibaba.fastjson.serializer.CalendarCodec",
240:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
241:       "com.alibaba.fastjson.serializer.CollectionCodec",
242:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
243:       "com.alibaba.fastjson.serializer.StringCodec",
244:       "com.alibaba.fastjson.serializer.CharacterCodec",
245:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
246:       "com.alibaba.fastjson.serializer.IntegerCodec",
247:       "com.alibaba.fastjson.serializer.LongCodec",
248:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
249:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
250:       "com.alibaba.fastjson.serializer.FloatCodec",
251:       "com.alibaba.fastjson.serializer.BooleanCodec",
252:       "com.alibaba.fastjson.serializer.CharArrayCodec",
253:       "com.alibaba.fastjson.serializer.ReferenceCodec",
254:       "com.alibaba.fastjson.serializer.AtomicCodec",
255:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
256:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
257:       "com.alibaba.fastjson.parser.ParserConfig",
258:       "com.alibaba.fastjson.parser.DefaultJSONParser",
259:       "com.alibaba.fastjson.parser.JSONLexerBase",
260:       "com.alibaba.fastjson.parser.JSONScanner",
261:       "com.alibaba.fastjson.JSONException",
262:       "com.alibaba.fastjson.parser.JSONToken",
263:       "com.alibaba.fastjson.TypeReference$1",
264:       "com.alibaba.fastjson.TypeReference",
265:       "com.alibaba.fastjson.parser.JSONReaderScanner",
266:       "com.alibaba.fastjson.JSONObject",
267:       "com.alibaba.fastjson.parser.ParseContext",
268:       "com.alibaba.fastjson.JSONStreamContext",
269:       "com.alibaba.fastjson.JSONArray",
270:       "com.alibaba.fastjson.serializer.SerializeWriter",
271:       "com.alibaba.fastjson.serializer.SerializeFilterable",
272:       "com.alibaba.fastjson.serializer.JSONSerializer",
273:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
274:       "com.alibaba.fastjson.serializer.DoubleSerializer",
275:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
276:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
277:       "com.alibaba.fastjson.serializer.AppendableSerializer",
278:       "com.alibaba.fastjson.serializer.ToStringSerializer",
279:       "com.alibaba.fastjson.serializer.SerializeConfig",
280:       "com.alibaba.fastjson.util.ServiceLoader",
281:       "com.alibaba.fastjson.serializer.MapSerializer",
282:       "com.alibaba.fastjson.serializer.SerialContext",
283:       "com.alibaba.fastjson.serializer.ListSerializer",
284:       "com.alibaba.fastjson.util.JavaBeanInfo",
285:       "com.alibaba.fastjson.asm.ClassWriter",
286:       "com.alibaba.fastjson.asm.ByteVector",
287:       "com.alibaba.fastjson.asm.Item",
288:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
289:       "com.alibaba.fastjson.asm.MethodWriter",
290:       "com.alibaba.fastjson.asm.Label",
291:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
292:       "com.alibaba.fastjson.asm.ClassReader",
293:       "com.alibaba.fastjson.asm.TypeCollector$1",
294:       "com.alibaba.fastjson.asm.TypeCollector",
295:       "com.alibaba.fastjson.asm.Type",
296:       "com.alibaba.fastjson.asm.MethodCollector",
297:       "com.alibaba.fastjson.util.FieldInfo",
298:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
299:       "com.alibaba.fastjson.asm.FieldWriter",
300:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
301:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
302:       "com.alibaba.fastjson.serializer.FieldSerializer",
303:       "com.alibaba.fastjson.serializer.BeanContext",
304:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
305:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
306:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
307:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
308:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
309:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
310:       "com.alibaba.fastjson.util.GenericArrayTypeImpl"
311:     );
312:   }
313: }

[MASTER] 14:37:06.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:06.853 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Kill switch
[MASTER] 14:37:07.010 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_100_1590151026854/com/alibaba/fastjson/JSONReader_100_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_100_1590151026854/com/alibaba/fastjson/JSONReader_100_tmp__ESTest_scaffolding.java]]
[MASTER] 14:37:07.010 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:37:07.010 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:37:07.011 [logback-2] ERROR JUnitAnalyzer - Diagnostic:  cannot find symbol
   symbol:   variable parserConfig1
   location:  class com.alibaba.fastjson.JSONReader_100_tmp__ESTest: 650
[MASTER] 14:37:07.011 [logback-2] ERROR JUnitAnalyzer - Diagnostic:  cannot find symbol
   symbol:   variable classLoader1
   location:  class com.alibaba.fastjson.JSONReader_100_tmp__ESTest: 714
[MASTER] 14:37:07.012 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:37:07.012 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_100_1590151026854/com/alibaba/fastjson/JSONReader_100_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 12:37:06 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.JSONObject;
12: import com.alibaba.fastjson.JSONReader;
13: import com.alibaba.fastjson.TypeReference;
14: import com.alibaba.fastjson.parser.DefaultJSONParser;
15: import com.alibaba.fastjson.parser.Feature;
16: import com.alibaba.fastjson.parser.JSONReaderScanner;
17: import com.alibaba.fastjson.parser.JSONScanner;
18: import com.alibaba.fastjson.parser.ParserConfig;
19: import com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory;
20: import java.io.PipedReader;
21: import java.io.Reader;
22: import java.io.StringReader;
23: import java.lang.annotation.Annotation;
24: import java.lang.reflect.Method;
25: import java.lang.reflect.Type;
26: import java.util.HashMap;
27: import java.util.Locale;
28: import java.util.Map;
29: import java.util.SimpleTimeZone;
30: import java.util.TimeZone;
31: import org.evosuite.runtime.EvoRunner;
32: import org.evosuite.runtime.EvoRunnerParameters;
33: import org.junit.runner.RunWith;
34: 
35: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
36: public class JSONReader_100_tmp__ESTest extends JSONReader_100_tmp__ESTest_scaffolding {
37: 
38:   @Test(timeout = 4000)
39:   public void test00()  throws Throwable  {
40:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
41:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
42:       // Undeclared exception!
43:       try { 
44:         jSONReader1.endArray();
45:         fail("Expecting exception: RuntimeException");
46:       
47:       } catch(RuntimeException e) {
48:          //
49:          // syntax error, expect ], actual error
50:          //
51:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
52:       }
53:   }
54: 
55:   @Test(timeout = 4000)
56:   public void test01()  throws Throwable  {
57:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
58:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
59:       // Undeclared exception!
60:       try { 
61:         jSONReader1.close();
62:         fail("Expecting exception: RuntimeException");
63:       
64:       } catch(RuntimeException e) {
65:          //
66:          // not close json text, token : error
67:          //
68:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
69:       }
70:   }
71: 
72:   @Test(timeout = 4000)
73:   public void test02()  throws Throwable  {
74:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
75:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
76:       Locale locale1 = Locale.CHINESE;
77:       jSONReader1.setLocale(locale1);
78:       assertEquals("", locale1.getISO3Country());
79:   }
80: 
81:   @Test(timeout = 4000)
82:   public void test03()  throws Throwable  {
83:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("&99");
84:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
85:       int int1 = jSONReader1.peek();
86:       assertEquals(1, int1);
87:   }
88: 
89:   @Test(timeout = 4000)
90:   public void test04()  throws Throwable  {
91:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
92:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
93:       Feature feature1 = Feature.AllowArbitraryCommas;
94:       jSONReader1.config(feature1, false);
95:       assertEquals(1, jSONReader1.peek());
96:   }
97: 
98:   @Test(timeout = 4000)
99:   public void test05()  throws Throwable  {
100:       StringReader stringReader1 = new StringReader("I@M<ub rXf$B0V;^");
101:       JSONReader jSONReader1 = new JSONReader(stringReader1);
102:       SimpleTimeZone simpleTimeZone1 = new SimpleTimeZone(7, "I@M<ub rXf$B0V;^");
103:       jSONReader1.setTimzeZone(simpleTimeZone1);
104:       assertEquals("java.util.SimpleTimeZone[id=I@M<ub rXf$B0V;^,offset=7,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]", simpleTimeZone1.toString());
105:   }
106: 
107:   @Test(timeout = 4000)
108:   public void test06()  throws Throwable  {
109:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
110:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
111:       TimeZone timeZone1 = jSONReader1.getTimzeZone();
112:       assertEquals("GMT", timeZone1.getID());
113:   }
114: 
115:   @Test(timeout = 4000)
116:   public void test07()  throws Throwable  {
117:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
118:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
119:       // Undeclared exception!
120:       try { 
121:         jSONReader1.readObject((TypeReference<Object>) null);
122:         fail("Expecting exception: NullPointerException");
123:       
124:       } catch(NullPointerException e) {
125:          //
126:          // no message in exception (getMessage() returned null)
127:          //
128:          verifyException("com.alibaba.fastjson.JSONReader", e);
129:       }
130:   }
131: 
132:   @Test(timeout = 4000)
133:   public void test08()  throws Throwable  {
134:       JSONScanner jSONScanner1 = new JSONScanner("context is null", 1);
135:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser(jSONScanner1);
136:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
137:       Locale locale1 = jSONReader1.getLocal();
138:       assertEquals("", locale1.getCountry());
139:   }
140: 
141:   @Test(timeout = 4000)
142:   public void test09()  throws Throwable  {
143:       StringReader stringReader1 = new StringReader("Sb");
144:       Feature[] featureArray1 = new Feature[3];
145:       JSONReader jSONReader1 = null;
146:       try {
147:         jSONReader1 = new JSONReader(stringReader1, featureArray1);
148:         fail("Expecting exception: NullPointerException");
149:       
150:       } catch(NullPointerException e) {
151:          //
152:          // no message in exception (getMessage() returned null)
153:          //
154:          verifyException("com.alibaba.fastjson.parser.Feature", e);
155:       }
156:   }
157: 
158:   @Test(timeout = 4000)
159:   public void test10()  throws Throwable  {
160:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("&99");
161:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
162:       // Undeclared exception!
163:       try { 
164:         jSONReader1.startObject();
165:         fail("Expecting exception: RuntimeException");
166:       
167:       } catch(RuntimeException e) {
168:          //
169:          // syntax error, expect {, actual error
170:          //
171:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
172:       }
173:   }
174: 
175:   @Test(timeout = 4000)
176:   public void test11()  throws Throwable  {
177:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
178:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
179:       // Undeclared exception!
180:       try { 
181:         jSONReader1.startArray();
182:         fail("Expecting exception: RuntimeException");
183:       
184:       } catch(RuntimeException e) {
185:          //
186:          // syntax error, expect [, actual error
187:          //
188:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
189:       }
190:   }
191: 
192:   @Test(timeout = 4000)
193:   public void test12()  throws Throwable  {
194:       StringReader stringReader1 = new StringReader("?$qVn");
195:       JSONReader jSONReader1 = new JSONReader(stringReader1);
196:       // Undeclared exception!
197:       try { 
198:         jSONReader1.hasNext();
199:         fail("Expecting exception: RuntimeException");
200:       
201:       } catch(RuntimeException e) {
202:          //
203:          // context is null
204:          //
205:          verifyException("com.alibaba.fastjson.JSONReader", e);
206:       }
207:   }
208: 
209:   @Test(timeout = 4000)
210:   public void test13()  throws Throwable  {
211:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("&99");
212:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
213:       Integer integer1 = jSONReader1.readInteger();
214:       assertEquals(99, (int)integer1);
215:   }
216: 
217:   @Test(timeout = 4000)
218:   public void test14()  throws Throwable  {
219:       StringReader stringReader1 = new StringReader("-");
220:       JSONReader jSONReader1 = new JSONReader(stringReader1);
221:       // Undeclared exception!
222:       try { 
223:         jSONReader1.readLong();
224:         fail("Expecting exception: NumberFormatException");
225:       
226:       } catch(NumberFormatException e) {
227:          //
228:          // -
229:          //
230:          verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
231:       }
232:   }
233: 
234:   @Test(timeout = 4000)
235:   public void test15()  throws Throwable  {
236:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("-99");
237:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
238:       String string1 = jSONReader1.readString();
239:       assertNotNull(string1);
240:   }
241: 
242:   @Test(timeout = 4000)
243:   public void test16()  throws Throwable  {
244:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
245:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
246:       // Undeclared exception!
247:       try { 
248:         jSONReader1.readObject((Type) null);
249:         fail("Expecting exception: RuntimeException");
250:       
251:       } catch(RuntimeException e) {
252:          //
253:          // syntax error, pos 2, line 1, column 3?$qVn
254:          //
255:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
256:       }
257:   }
258: 
259:   @Test(timeout = 4000)
260:   public void test17()  throws Throwable  {
261:       StringReader stringReader1 = new StringReader("}NI");
262:       JSONReader jSONReader1 = new JSONReader(stringReader1);
263:       Class<Object> class1 = Object.class;
264:       Object object1 = jSONReader1.readObject(class1);
265:       assertNotNull(object1);
266:   }
267: 
268:   @Test(timeout = 4000)
269:   public void test18()  throws Throwable  {
270:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("{\"fruit\":\"Apple\",\"size\":\"deserialze\",\"color\":99,\"value\":true,\"value2\":false,\"x\":\"a string\"}");
271:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
272:       jSONReader1.readObject((Object) defaultJSONParser1.NONE);
273:       assertEquals(0, defaultJSONParser1.resolveStatus);
274:   }
275: 
276:   @Test(timeout = 4000)
277:   public void test19()  throws Throwable  {
278:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
279:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
280:       // Undeclared exception!
281:       try { 
282:         jSONReader1.endObject();
283:         fail("Expecting exception: RuntimeException");
284:       
285:       } catch(RuntimeException e) {
286:          //
287:          // syntax error, expect }, actual error
288:          //
289:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
290:       }
291:   }
292: 
293:   @Test(timeout = 4000)
294:   public void test20()  throws Throwable  {
295:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("9");
296:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
297:       JSONReader jSONReader2 = null;
298:       try {
299:         jSONReader2 = new JSONReader(defaultJSONParser1.lexer);
300:         fail("Expecting exception: RuntimeException");
301:       
302:       } catch(RuntimeException e) {
303:          //
304:          // EOF error
305:          //
306:          verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
307:       }
308:   }
309: 
310:   @Test(timeout = 4000)
311:   public void test21()  throws Throwable  {
312:       JSONReader jSONReader1 = null;
313:       try {
314:         jSONReader1 = new JSONReader((Reader) null);
315:         fail("Expecting exception: NullPointerException");
316:       
317:       } catch(NullPointerException e) {
318:          //
319:          // no message in exception (getMessage() returned null)
320:          //
321:          verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
322:       }
323:   }
324: 
325:   @Test(timeout = 4000)
326:   public void test22()  throws Throwable  {
327:       PipedReader pipedReader1 = null;
328:       try {
329:         pipedReader1 = new PipedReader();
330:         fail("Expecting exception: RuntimeException");
331:       
332:       } catch(RuntimeException e) {
333:          //
334:          // Pipe not connected
335:          //
336:          verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
337:       }
338:       
339:       JSONReader jSONReader1 = null;
340:       try {
341:         jSONReader1 = new JSONReader(pipedReader1);
342:         fail("Expecting exception: RuntimeException");
343:       
344:       } catch(RuntimeException e) {
345:          //
346:          // Pipe not connected
347:          //
348:          verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
349:       }
350:   }
351: 
352:   @Test(timeout = 4000)
353:   public void test23()  throws Throwable  {
354:       JSONReader jSONReader1 = new JSONReader((DefaultJSONParser) null);
355:       Feature feature1 = Feature.InitStringFieldAsEmpty;
356:       // Undeclared exception!
357:       try { 
358:         jSONReader1.config(feature1, false);
359:         fail("Expecting exception: NullPointerException");
360:       
361:       } catch(NullPointerException e) {
362:          //
363:          // no message in exception (getMessage() returned null)
364:          //
365:          verifyException("com.alibaba.fastjson.JSONReader", e);
366:       }
367:   }
368: 
369:   @Test(timeout = 4000)
370:   public void test24()  throws Throwable  {
371:       JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("");
372:       JSONReader jSONReader1 = new JSONReader(jSONReaderScanner1);
373:       jSONReader1.close();
374:       // Undeclared exception!
375:       try { 
376:         jSONReader1.readInteger();
377:         fail("Expecting exception: NullPointerException");
378:       
379:       } catch(NullPointerException e) {
380:          //
381:          // no message in exception (getMessage() returned null)
382:          //
383:          verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
384:       }
385:   }
386: 
387:   @Test(timeout = 4000)
388:   public void test25()  throws Throwable  {
389:       StringReader stringReader1 = new StringReader("-");
390:       JSONReader jSONReader1 = new JSONReader(stringReader1);
391:       // Undeclared exception!
392:       try { 
393:         jSONReader1.readInteger();
394:         fail("Expecting exception: NumberFormatException");
395:       
396:       } catch(NumberFormatException e) {
397:          //
398:          // -
399:          //
400:          verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
401:       }
402:   }
403: 
404:   @Test(timeout = 4000)
405:   public void test26()  throws Throwable  {
406:       JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("D;B");
407:       JSONReader jSONReader1 = new JSONReader(jSONReaderScanner1);
408:       // Undeclared exception!
409:       try { 
410:         jSONReader1.readInteger();
411:         fail("Expecting exception: RuntimeException");
412:       
413:       } catch(RuntimeException e) {
414:          //
415:          // syntax error, 
416:          //
417:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
418:       }
419:   }
420: 
421:   @Test(timeout = 4000)
422:   public void test27()  throws Throwable  {
423:       JSONReader jSONReader1 = null;
424:       try {
425:         jSONReader1 = new JSONReader((DefaultJSONParser) null);
426:         fail("Expecting exception: NullPointerException");
427:       
428:       } catch(NullPointerException e) {
429:          //
430:          // no message in exception (getMessage() returned null)
431:          //
432:          verifyException("com.alibaba.fastjson.JSONReader", e);
433:       }
434:       
435:       // Undeclared exception!
436:       try { 
437:         jSONReader1.readLong();
438:         fail("Expecting exception: NullPointerException");
439:       
440:       } catch(NullPointerException e) {
441:          //
442:          // no message in exception (getMessage() returned null)
443:          //
444:          verifyException("com.alibaba.fastjson.JSONReader", e);
445:       }
446:   }
447: 
448:   @Test(timeout = 4000)
449:   public void test28()  throws Throwable  {
450:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
451:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
452:       // Undeclared exception!
453:       try { 
454:         jSONReader1.readLong();
455:         fail("Expecting exception: RuntimeException");
456:       
457:       } catch(RuntimeException e) {
458:          //
459:          // syntax error, pos 2, line 1, column 3Rqe>9^H
460:          //
461:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
462:       }
463:   }
464: 
465:   @Test(timeout = 4000)
466:   public void test29()  throws Throwable  {
467:       JSONReader jSONReader1 = null;
468:       try {
469:         jSONReader1 = new JSONReader((DefaultJSONParser) null);
470:         fail("Expecting exception: NullPointerException");
471:       
472:       } catch(NullPointerException e) {
473:          //
474:          // no message in exception (getMessage() returned null)
475:          //
476:          verifyException("com.alibaba.fastjson.JSONReader", e);
477:       }
478:       
479:       // Undeclared exception!
480:       try { 
481:         jSONReader1.readObject();
482:         fail("Expecting exception: NullPointerException");
483:       
484:       } catch(NullPointerException e) {
485:          //
486:          // no message in exception (getMessage() returned null)
487:          //
488:          verifyException("com.alibaba.fastjson.JSONReader", e);
489:       }
490:   }
491: 
492:   @Test(timeout = 4000)
493:   public void test30()  throws Throwable  {
494:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
495:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
496:       // Undeclared exception!
497:       try { 
498:         jSONReader1.readObject();
499:         fail("Expecting exception: RuntimeException");
500:       
501:       } catch(RuntimeException e) {
502:          //
503:          // syntax error, pos 2, line 1, column 3Rqe>9^H
504:          //
505:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
506:       }
507:   }
508: 
509:   @Test(timeout = 4000)
510:   public void test31()  throws Throwable  {
511:       Class<Annotation> class1 = Annotation.class;
512:       JSONReader jSONReader1 = new JSONReader((DefaultJSONParser) null);
513:       // Undeclared exception!
514:       try { 
515:         jSONReader1.readObject(class1);
516:         fail("Expecting exception: NullPointerException");
517:       
518:       } catch(NullPointerException e) {
519:          //
520:          // no message in exception (getMessage() returned null)
521:          //
522:          verifyException("com.alibaba.fastjson.JSONReader", e);
523:       }
524:   }
525: 
526:   @Test(timeout = 4000)
527:   public void test32()  throws Throwable  {
528:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
529:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
530:       Class<Annotation> class1 = Annotation.class;
531:       // Undeclared exception!
532:       try { 
533:         jSONReader1.readObject(class1);
534:         fail("Expecting exception: RuntimeException");
535:       
536:       } catch(RuntimeException e) {
537:          //
538:          // syntax error,except start with { or [,but actually start with error
539:          //
540:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
541:       }
542:   }
543: 
544:   @Test(timeout = 4000)
545:   public void test33()  throws Throwable  {
546:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
547:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
548:       // Undeclared exception!
549:       try { 
550:         jSONReader1.readObject((Object) null);
551:         fail("Expecting exception: NullPointerException");
552:       
553:       } catch(NullPointerException e) {
554:          //
555:          // no message in exception (getMessage() returned null)
556:          //
557:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
558:       }
559:   }
560: 
561:   @Test(timeout = 4000)
562:   public void test34()  throws Throwable  {
563:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
564:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
565:       // Undeclared exception!
566:       jSONReader1.readObject((Object) defaultJSONParser1);
567:   }
568: 
569:   @Test(timeout = 4000)
570:   public void test35()  throws Throwable  {
571:       StringReader stringReader1 = new StringReader(".{cvD%c");
572:       JSONReader jSONReader1 = new JSONReader(stringReader1);
573:       // Undeclared exception!
574:       try { 
575:         jSONReader1.readObject((Object) ".{cvD%c");
576:         fail("Expecting exception: RuntimeException");
577:       
578:       } catch(RuntimeException e) {
579:          //
580:          // syntax error, expect {, actual .
581:          //
582:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
583:       }
584:   }
585: 
586:   @Test(timeout = 4000)
587:   public void test36()  throws Throwable  {
588:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
589:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
590:       // Undeclared exception!
591:       try { 
592:         jSONReader1.readString();
593:         fail("Expecting exception: RuntimeException");
594:       
595:       } catch(RuntimeException e) {
596:          //
597:          // syntax error, pos 1, line 1, column 2Rqe>9^H
598:          //
599:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
600:       }
601:   }
602: 
603:   @Test(timeout = 4000)
604:   public void test37()  throws Throwable  {
605:       JSONReader jSONReader1 = null;
606:       try {
607:         jSONReader1 = new JSONReader((DefaultJSONParser) null);
608:         fail("Expecting exception: NullPointerException");
609:       
610:       } catch(NullPointerException e) {
611:          //
612:          // no message in exception (getMessage() returned null)
613:          //
614:          verifyException("com.alibaba.fastjson.JSONReader", e);
615:       }
616:       
617:       // Undeclared exception!
618:       try { 
619:         jSONReader1.startArray();
620:         fail("Expecting exception: NullPointerException");
621:       
622:       } catch(NullPointerException e) {
623:          //
624:          // no message in exception (getMessage() returned null)
625:          //
626:          verifyException("com.alibaba.fastjson.JSONReader", e);
627:       }
628:   }
629: 
630:   @Test(timeout = 4000)
631:   public void test38()  throws Throwable  {
632:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("-99");
633:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
634:       Integer integer1 = jSONReader1.readInteger();
635:       assertEquals((-99), (int)integer1);
636:   }
637: 
638:   @Test(timeout = 4000)
639:   public void test39()  throws Throwable  {
640:       ParserConfig parserConfig1 = new ParserConfig();
641:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("", parserConfig1);
642:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
643:       Integer integer1 = jSONReader1.readInteger();
644:       assertNull(integer1);
645:   }
646: 
647:   @Test(timeout = 4000)
648:   public void test40()  throws Throwable  {
649:       ParserConfig.getGlobalInstance();
650:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("-99", parserConfig1);
651:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
652:       Long long1 = jSONReader1.readLong();
653:       assertEquals((-99L), (long)long1);
654:   }
655: 
656:   @Test(timeout = 4000)
657:   public void test41()  throws Throwable  {
658:       char[] charArray1 = new char[7];
659:       ParserConfig parserConfig1 = ParserConfig.global;
660:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser(charArray1, 1, parserConfig1, 2063);
661:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
662:       // Undeclared exception!
663:       try { 
664:         jSONReader1.readLong();
665:         fail("Expecting exception: RuntimeException");
666:       
667:       } catch(RuntimeException e) {
668:          //
669:          // unterminated json string, pos 1, line 1, column 2\u0000
670:          //
671:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
672:       }
673:   }
674: 
675:   @Test(timeout = 4000)
676:   public void test42()  throws Throwable  {
677:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("&99");
678:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
679:       Long long1 = jSONReader1.readLong();
680:       assertEquals(99L, (long)long1);
681:   }
682: 
683:   @Test(timeout = 4000)
684:   public void test43()  throws Throwable  {
685:       StringReader stringReader1 = new StringReader("{\"x\":\"hello\",\"y\":7,\"z\":true,\"a\":[],\"b\":-99}");
686:       JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader1);
687:       JSONReader jSONReader1 = new JSONReader(jSONReaderScanner1);
688:       JSONObject jSONObject1 = (JSONObject)jSONReader1.readObject();
689:       assertEquals(5, jSONObject1.size());
690:   }
691: 
692:   @Test(timeout = 4000)
693:   public void test44()  throws Throwable  {
694:       ParserConfig parserConfig1 = new ParserConfig();
695:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("", parserConfig1);
696:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
697:       Object object1 = jSONReader1.readObject();
698:       assertNull(object1);
699:   }
700: 
701:   @Test(timeout = 4000)
702:   public void test45()  throws Throwable  {
703:       JSONScanner jSONScanner1 = new JSONScanner("null", 692);
704:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser(jSONScanner1);
705:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
706:       Class<Object> class1 = Object.class;
707:       Object object1 = jSONReader1.readObject(class1);
708:       assertNull(object1);
709:   }
710: 
711:   @Test(timeout = 4000)
712:   public void test46()  throws Throwable  {
713:       ClassLoader.getSystemClassLoader();
714:       ASMDeserializerFactory aSMDeserializerFactory1 = new ASMDeserializerFactory(classLoader1);
715:       ParserConfig parserConfig1 = new ParserConfig(aSMDeserializerFactory1);
716:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("{\"x\":\"hello\",\"y\":7,\"z\":true,\"a\":-99,\"b\":{}}", parserConfig1);
717:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
718:       HashMap<Method, Integer> hashMap1 = new HashMap<Method, Integer>();
719:       HashMap hashMap2 = (HashMap)jSONReader1.readObject((Map) hashMap1);
720:       assertFalse(hashMap2.isEmpty());
721:   }
722: 
723:   @Test(timeout = 4000)
724:   public void test47()  throws Throwable  {
725:       ParserConfig parserConfig1 = new ParserConfig(true);
726:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("", parserConfig1);
727:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
728:       String string1 = jSONReader1.readString();
729:       assertNull(string1);
730:   }
731: 
732:   @Test(timeout = 4000)
733:   public void test48()  throws Throwable  {
734:       StringReader stringReader1 = new StringReader("{\"fruit\":\"Apple\",\"size\":\"Large\",\"color\":\"Red\",\"value\":false,\"value2\":false,\"number\":\"1\"}");
735:       Feature[] featureArray1 = new Feature[8];
736:       Feature feature1 = Feature.AllowComment;
737:       featureArray1[1] = feature1;
738:       featureArray1[1] = feature1;
739:       featureArray1[2] = featureArray1[1];
740:       featureArray1[3] = feature1;
741:       featureArray1[4] = feature1;
742:       featureArray1[5] = featureArray1[1];
743:       featureArray1[6] = featureArray1[5];
744:       featureArray1[7] = feature1;
745:       JSONReader jSONReader1 = null;
746:       try {
747:         jSONReader1 = new JSONReader(stringReader1, featureArray1);
748:         fail("Expecting exception: NullPointerException");
749:       
750:       } catch(NullPointerException e) {
751:          //
752:          // no message in exception (getMessage() returned null)
753:          //
754:          verifyException("com.alibaba.fastjson.parser.Feature", e);
755:       }
756:   }
757: }
RegularFileObject[/tmp/EvoSuite_100_1590151026854/com/alibaba/fastjson/JSONReader_100_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 12:37:06 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONReader_100_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONReader"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONReader_100_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
89:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
90:       "com.alibaba.fastjson.serializer.JSONSerializable",
91:       "com.alibaba.fastjson.serializer.SerializeWriter",
92:       "com.alibaba.fastjson.serializer.ReferenceCodec",
93:       "com.alibaba.fastjson.JSONException",
94:       "com.alibaba.fastjson.asm.TypeCollector$1",
95:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
96:       "com.alibaba.fastjson.serializer.ToStringSerializer",
97:       "com.alibaba.fastjson.serializer.SerialContext",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.serializer.AfterFilter",
100:       "com.alibaba.fastjson.TypeReference",
101:       "com.alibaba.fastjson.serializer.ObjectSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.serializer.MapSerializer",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
106:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
107:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
108:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
109:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
110:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
111:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
112:       "com.alibaba.fastjson.util.FieldInfo",
113:       "com.alibaba.fastjson.serializer.PropertyFilter",
114:       "com.alibaba.fastjson.annotation.JSONField",
115:       "com.alibaba.fastjson.parser.SymbolTable",
116:       "com.alibaba.fastjson.serializer.NameFilter",
117:       "com.alibaba.fastjson.serializer.ListSerializer",
118:       "com.alibaba.fastjson.JSONArray",
119:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
120:       "com.alibaba.fastjson.JSONAware",
121:       "com.alibaba.fastjson.serializer.LongCodec",
122:       "com.alibaba.fastjson.util.ASMClassLoader",
123:       "com.alibaba.fastjson.PropertyNamingStrategy",
124:       "com.alibaba.fastjson.parser.JSONToken",
125:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
126:       "com.alibaba.fastjson.serializer.AppendableSerializer",
127:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
128:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
129:       "com.alibaba.fastjson.serializer.ContextValueFilter",
130:       "com.alibaba.fastjson.util.ServiceLoader",
131:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
132:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
133:       "com.alibaba.fastjson.parser.DefaultJSONParser",
134:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
135:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
136:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
137:       "com.alibaba.fastjson.serializer.BeanContext",
138:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
139:       "com.alibaba.fastjson.util.IdentityHashMap",
140:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
141:       "com.alibaba.fastjson.JSON",
142:       "com.alibaba.fastjson.serializer.StringCodec",
143:       "com.alibaba.fastjson.serializer.SerializeFilterable",
144:       "com.alibaba.fastjson.JSONWriter",
145:       "com.alibaba.fastjson.asm.Opcodes",
146:       "com.alibaba.fastjson.JSONStreamContext",
147:       "com.alibaba.fastjson.JSONReader",
148:       "com.alibaba.fastjson.JSONStreamAware",
149:       "com.alibaba.fastjson.asm.MethodWriter",
150:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
151:       "com.alibaba.fastjson.serializer.SerializerFeature",
152:       "com.alibaba.fastjson.TypeReference$1",
153:       "com.alibaba.fastjson.serializer.CalendarCodec",
154:       "com.alibaba.fastjson.util.IOUtils",
155:       "com.alibaba.fastjson.util.TypeUtils",
156:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
157:       "com.alibaba.fastjson.asm.ClassReader",
158:       "com.alibaba.fastjson.spi.Module",
159:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
160:       "com.alibaba.fastjson.serializer.MiscCodec",
161:       "com.alibaba.fastjson.util.IOUtils$1",
162:       "com.alibaba.fastjson.serializer.IntegerCodec",
163:       "com.alibaba.fastjson.serializer.SerializeFilter",
164:       "com.alibaba.fastjson.JSONPObject",
165:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
166:       "com.alibaba.fastjson.serializer.BeforeFilter",
167:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
168:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
169:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
170:       "com.alibaba.fastjson.JSONObject",
171:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
172:       "com.alibaba.fastjson.serializer.CharacterCodec",
173:       "com.alibaba.fastjson.asm.TypeCollector",
174:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
175:       "com.alibaba.fastjson.asm.ByteVector",
176:       "com.alibaba.fastjson.parser.JSONLexer",
177:       "com.alibaba.fastjson.util.ASMClassLoader$1",
178:       "com.alibaba.fastjson.asm.Label",
179:       "com.alibaba.fastjson.asm.FieldWriter",
180:       "com.alibaba.fastjson.serializer.JSONSerializer",
181:       "com.alibaba.fastjson.util.JavaBeanInfo",
182:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
183:       "com.alibaba.fastjson.serializer.SerializeConfig",
184:       "com.alibaba.fastjson.serializer.AtomicCodec",
185:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
186:       "com.alibaba.fastjson.asm.Type",
187:       "com.alibaba.fastjson.serializer.FieldSerializer",
188:       "com.alibaba.fastjson.serializer.FloatCodec",
189:       "com.alibaba.fastjson.parser.JSONReaderScanner",
190:       "com.alibaba.fastjson.serializer.ValueFilter",
191:       "com.alibaba.fastjson.JSONPathException",
192:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
193:       "com.alibaba.fastjson.serializer.Labels",
194:       "com.alibaba.fastjson.serializer.CollectionCodec",
195:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
196:       "com.alibaba.fastjson.serializer.CharArrayCodec",
197:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
198:       "com.alibaba.fastjson.asm.MethodVisitor",
199:       "com.alibaba.fastjson.annotation.JSONCreator",
200:       "com.alibaba.fastjson.asm.MethodCollector",
201:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
202:       "com.alibaba.fastjson.serializer.LabelFilter",
203:       "com.alibaba.fastjson.annotation.JSONType",
204:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
205:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
206:       "com.alibaba.fastjson.serializer.DoubleSerializer",
207:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
208:       "com.alibaba.fastjson.serializer.BooleanCodec",
209:       "com.alibaba.fastjson.parser.ParserConfig",
210:       "com.alibaba.fastjson.parser.Feature",
211:       "com.alibaba.fastjson.parser.ParseContext",
212:       "com.alibaba.fastjson.serializer.PropertyPreFilter"
213:     );
214:   } 
215: 
216:   private static void resetClasses() {
217:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONReader_100_tmp__ESTest_scaffolding.class.getClassLoader()); 
218: 
219:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
220:       "com.alibaba.fastjson.JSONReader",
221:       "com.alibaba.fastjson.util.IOUtils$1",
222:       "com.alibaba.fastjson.util.IOUtils",
223:       "com.alibaba.fastjson.util.TypeUtils",
224:       "com.alibaba.fastjson.util.IdentityHashMap",
225:       "com.alibaba.fastjson.util.ASMUtils",
226:       "com.alibaba.fastjson.parser.SymbolTable",
227:       "com.alibaba.fastjson.serializer.SerializerFeature",
228:       "com.alibaba.fastjson.JSON",
229:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
230:       "com.alibaba.fastjson.util.ASMClassLoader$1",
231:       "com.alibaba.fastjson.util.ASMClassLoader",
232:       "com.alibaba.fastjson.serializer.MiscCodec",
233:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
234:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
235:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
236:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
237:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
238:       "com.alibaba.fastjson.serializer.DateCodec",
239:       "com.alibaba.fastjson.serializer.CalendarCodec",
240:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
241:       "com.alibaba.fastjson.serializer.CollectionCodec",
242:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
243:       "com.alibaba.fastjson.serializer.StringCodec",
244:       "com.alibaba.fastjson.serializer.CharacterCodec",
245:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
246:       "com.alibaba.fastjson.serializer.IntegerCodec",
247:       "com.alibaba.fastjson.serializer.LongCodec",
248:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
249:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
250:       "com.alibaba.fastjson.serializer.FloatCodec",
251:       "com.alibaba.fastjson.serializer.BooleanCodec",
252:       "com.alibaba.fastjson.serializer.CharArrayCodec",
253:       "com.alibaba.fastjson.serializer.ReferenceCodec",
254:       "com.alibaba.fastjson.serializer.AtomicCodec",
255:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
256:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
257:       "com.alibaba.fastjson.parser.ParserConfig",
258:       "com.alibaba.fastjson.parser.DefaultJSONParser",
259:       "com.alibaba.fastjson.parser.JSONLexerBase",
260:       "com.alibaba.fastjson.parser.JSONScanner",
261:       "com.alibaba.fastjson.JSONException",
262:       "com.alibaba.fastjson.parser.JSONToken",
263:       "com.alibaba.fastjson.TypeReference$1",
264:       "com.alibaba.fastjson.TypeReference",
265:       "com.alibaba.fastjson.parser.JSONReaderScanner",
266:       "com.alibaba.fastjson.JSONObject",
267:       "com.alibaba.fastjson.parser.ParseContext",
268:       "com.alibaba.fastjson.JSONStreamContext",
269:       "com.alibaba.fastjson.JSONArray",
270:       "com.alibaba.fastjson.serializer.SerializeWriter",
271:       "com.alibaba.fastjson.serializer.SerializeFilterable",
272:       "com.alibaba.fastjson.serializer.JSONSerializer",
273:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
274:       "com.alibaba.fastjson.serializer.DoubleSerializer",
275:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
276:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
277:       "com.alibaba.fastjson.serializer.AppendableSerializer",
278:       "com.alibaba.fastjson.serializer.ToStringSerializer",
279:       "com.alibaba.fastjson.serializer.SerializeConfig",
280:       "com.alibaba.fastjson.util.ServiceLoader",
281:       "com.alibaba.fastjson.serializer.MapSerializer",
282:       "com.alibaba.fastjson.serializer.SerialContext",
283:       "com.alibaba.fastjson.serializer.ListSerializer",
284:       "com.alibaba.fastjson.util.JavaBeanInfo",
285:       "com.alibaba.fastjson.asm.ClassWriter",
286:       "com.alibaba.fastjson.asm.ByteVector",
287:       "com.alibaba.fastjson.asm.Item",
288:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
289:       "com.alibaba.fastjson.asm.MethodWriter",
290:       "com.alibaba.fastjson.asm.Label",
291:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
292:       "com.alibaba.fastjson.asm.ClassReader",
293:       "com.alibaba.fastjson.asm.TypeCollector$1",
294:       "com.alibaba.fastjson.asm.TypeCollector",
295:       "com.alibaba.fastjson.asm.Type",
296:       "com.alibaba.fastjson.asm.MethodCollector",
297:       "com.alibaba.fastjson.util.FieldInfo",
298:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
299:       "com.alibaba.fastjson.asm.FieldWriter",
300:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
301:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
302:       "com.alibaba.fastjson.serializer.FieldSerializer",
303:       "com.alibaba.fastjson.serializer.BeanContext",
304:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
305:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
306:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
307:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
308:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
309:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
310:       "com.alibaba.fastjson.util.GenericArrayTypeImpl"
311:     );
312:   }
313: }

[MASTER] 14:37:07.125 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_101_1590151027012/com/alibaba/fastjson/JSONReader_101_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_101_1590151027012/com/alibaba/fastjson/JSONReader_101_tmp__ESTest_scaffolding.java]]
[MASTER] 14:37:07.125 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:37:07.125 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:37:07.126 [logback-2] ERROR JUnitAnalyzer - Diagnostic:  cannot find symbol
   symbol:   variable classLoader1
   location:  class com.alibaba.fastjson.JSONReader_101_tmp__ESTest: 76
[MASTER] 14:37:07.126 [logback-2] ERROR JUnitAnalyzer - Diagnostic:  cannot find symbol
   symbol:   variable parserConfig1
   location:  class com.alibaba.fastjson.JSONReader_101_tmp__ESTest: 143
[MASTER] 14:37:07.127 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 14:37:07.127 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_101_1590151027012/com/alibaba/fastjson/JSONReader_101_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 12:37:07 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.JSONObject;
12: import com.alibaba.fastjson.JSONReader;
13: import com.alibaba.fastjson.TypeReference;
14: import com.alibaba.fastjson.parser.DefaultJSONParser;
15: import com.alibaba.fastjson.parser.Feature;
16: import com.alibaba.fastjson.parser.JSONReaderScanner;
17: import com.alibaba.fastjson.parser.JSONScanner;
18: import com.alibaba.fastjson.parser.ParserConfig;
19: import com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory;
20: import java.io.PipedReader;
21: import java.io.Reader;
22: import java.io.StringReader;
23: import java.lang.annotation.Annotation;
24: import java.lang.reflect.Method;
25: import java.lang.reflect.Type;
26: import java.util.HashMap;
27: import java.util.Locale;
28: import java.util.Map;
29: import java.util.SimpleTimeZone;
30: import java.util.TimeZone;
31: import org.evosuite.runtime.EvoRunner;
32: import org.evosuite.runtime.EvoRunnerParameters;
33: import org.junit.runner.RunWith;
34: 
35: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
36: public class JSONReader_101_tmp__ESTest extends JSONReader_101_tmp__ESTest_scaffolding {
37: 
38:   @Test(timeout = 4000)
39:   public void test00()  throws Throwable  {
40:       StringReader stringReader1 = new StringReader("{\"fruit\":\"Apple\",\"size\":\"Large\",\"color\":\"Red\",\"value\":false,\"value2\":false,\"number\":\"1\"}");
41:       Feature[] featureArray1 = new Feature[8];
42:       Feature feature1 = Feature.AllowComment;
43:       featureArray1[1] = feature1;
44:       featureArray1[1] = feature1;
45:       featureArray1[2] = featureArray1[1];
46:       featureArray1[3] = feature1;
47:       featureArray1[4] = feature1;
48:       featureArray1[5] = featureArray1[1];
49:       featureArray1[6] = featureArray1[5];
50:       featureArray1[7] = feature1;
51:       JSONReader jSONReader1 = null;
52:       try {
53:         jSONReader1 = new JSONReader(stringReader1, featureArray1);
54:         fail("Expecting exception: NullPointerException");
55:       
56:       } catch(NullPointerException e) {
57:          //
58:          // no message in exception (getMessage() returned null)
59:          //
60:          verifyException("com.alibaba.fastjson.parser.Feature", e);
61:       }
62:   }
63: 
64:   @Test(timeout = 4000)
65:   public void test01()  throws Throwable  {
66:       ParserConfig parserConfig1 = new ParserConfig(true);
67:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("", parserConfig1);
68:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
69:       String string1 = jSONReader1.readString();
70:       assertNull(string1);
71:   }
72: 
73:   @Test(timeout = 4000)
74:   public void test02()  throws Throwable  {
75:       ClassLoader.getSystemClassLoader();
76:       ASMDeserializerFactory aSMDeserializerFactory1 = new ASMDeserializerFactory(classLoader1);
77:       ParserConfig parserConfig1 = new ParserConfig(aSMDeserializerFactory1);
78:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("{\"x\":\"hello\",\"y\":7,\"z\":true,\"a\":-99,\"b\":{}}", parserConfig1);
79:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
80:       HashMap<Method, Integer> hashMap1 = new HashMap<Method, Integer>();
81:       HashMap hashMap2 = (HashMap)jSONReader1.readObject((Map) hashMap1);
82:       assertFalse(hashMap2.isEmpty());
83:   }
84: 
85:   @Test(timeout = 4000)
86:   public void test03()  throws Throwable  {
87:       JSONScanner jSONScanner1 = new JSONScanner("null", 692);
88:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser(jSONScanner1);
89:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
90:       Class<Object> class1 = Object.class;
91:       Object object1 = jSONReader1.readObject(class1);
92:       assertNull(object1);
93:   }
94: 
95:   @Test(timeout = 4000)
96:   public void test04()  throws Throwable  {
97:       ParserConfig parserConfig1 = new ParserConfig();
98:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("", parserConfig1);
99:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
100:       Object object1 = jSONReader1.readObject();
101:       assertNull(object1);
102:   }
103: 
104:   @Test(timeout = 4000)
105:   public void test05()  throws Throwable  {
106:       StringReader stringReader1 = new StringReader("{\"x\":\"hello\",\"y\":7,\"z\":true,\"a\":[],\"b\":-99}");
107:       JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader1);
108:       JSONReader jSONReader1 = new JSONReader(jSONReaderScanner1);
109:       JSONObject jSONObject1 = (JSONObject)jSONReader1.readObject();
110:       assertEquals(5, jSONObject1.size());
111:   }
112: 
113:   @Test(timeout = 4000)
114:   public void test06()  throws Throwable  {
115:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("&99");
116:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
117:       Long long1 = jSONReader1.readLong();
118:       assertEquals(99L, (long)long1);
119:   }
120: 
121:   @Test(timeout = 4000)
122:   public void test07()  throws Throwable  {
123:       char[] charArray1 = new char[7];
124:       ParserConfig parserConfig1 = ParserConfig.global;
125:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser(charArray1, 1, parserConfig1, 2063);
126:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
127:       // Undeclared exception!
128:       try { 
129:         jSONReader1.readLong();
130:         fail("Expecting exception: RuntimeException");
131:       
132:       } catch(RuntimeException e) {
133:          //
134:          // unterminated json string, pos 1, line 1, column 2\u0000
135:          //
136:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
137:       }
138:   }
139: 
140:   @Test(timeout = 4000)
141:   public void test08()  throws Throwable  {
142:       ParserConfig.getGlobalInstance();
143:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("-99", parserConfig1);
144:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
145:       Long long1 = jSONReader1.readLong();
146:       assertEquals((-99L), (long)long1);
147:   }
148: 
149:   @Test(timeout = 4000)
150:   public void test09()  throws Throwable  {
151:       ParserConfig parserConfig1 = new ParserConfig();
152:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("", parserConfig1);
153:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
154:       Integer integer1 = jSONReader1.readInteger();
155:       assertNull(integer1);
156:   }
157: 
158:   @Test(timeout = 4000)
159:   public void test10()  throws Throwable  {
160:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("-99");
161:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
162:       Integer integer1 = jSONReader1.readInteger();
163:       assertEquals((-99), (int)integer1);
164:   }
165: 
166:   @Test(timeout = 4000)
167:   public void test11()  throws Throwable  {
168:       JSONReader jSONReader1 = null;
169:       try {
170:         jSONReader1 = new JSONReader((DefaultJSONParser) null);
171:         fail("Expecting exception: NullPointerException");
172:       
173:       } catch(NullPointerException e) {
174:          //
175:          // no message in exception (getMessage() returned null)
176:          //
177:          verifyException("com.alibaba.fastjson.JSONReader", e);
178:       }
179:       
180:       // Undeclared exception!
181:       try { 
182:         jSONReader1.startArray();
183:         fail("Expecting exception: NullPointerException");
184:       
185:       } catch(NullPointerException e) {
186:          //
187:          // no message in exception (getMessage() returned null)
188:          //
189:          verifyException("com.alibaba.fastjson.JSONReader", e);
190:       }
191:   }
192: 
193:   @Test(timeout = 4000)
194:   public void test12()  throws Throwable  {
195:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
196:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
197:       // Undeclared exception!
198:       try { 
199:         jSONReader1.readString();
200:         fail("Expecting exception: RuntimeException");
201:       
202:       } catch(RuntimeException e) {
203:          //
204:          // syntax error, pos 1, line 1, column 2Rqe>9^H
205:          //
206:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
207:       }
208:   }
209: 
210:   @Test(timeout = 4000)
211:   public void test13()  throws Throwable  {
212:       StringReader stringReader1 = new StringReader(".{cvD%c");
213:       JSONReader jSONReader1 = new JSONReader(stringReader1);
214:       // Undeclared exception!
215:       try { 
216:         jSONReader1.readObject((Object) ".{cvD%c");
217:         fail("Expecting exception: RuntimeException");
218:       
219:       } catch(RuntimeException e) {
220:          //
221:          // syntax error, expect {, actual .
222:          //
223:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
224:       }
225:   }
226: 
227:   @Test(timeout = 4000)
228:   public void test14()  throws Throwable  {
229:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
230:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
231:       // Undeclared exception!
232:       jSONReader1.readObject((Object) defaultJSONParser1);
233:   }
234: 
235:   @Test(timeout = 4000)
236:   public void test15()  throws Throwable  {
237:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
238:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
239:       // Undeclared exception!
240:       try { 
241:         jSONReader1.readObject((Object) null);
242:         fail("Expecting exception: NullPointerException");
243:       
244:       } catch(NullPointerException e) {
245:          //
246:          // no message in exception (getMessage() returned null)
247:          //
248:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
249:       }
250:   }
251: 
252:   @Test(timeout = 4000)
253:   public void test16()  throws Throwable  {
254:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
255:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
256:       Class<Annotation> class1 = Annotation.class;
257:       // Undeclared exception!
258:       try { 
259:         jSONReader1.readObject(class1);
260:         fail("Expecting exception: RuntimeException");
261:       
262:       } catch(RuntimeException e) {
263:          //
264:          // syntax error,except start with { or [,but actually start with error
265:          //
266:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
267:       }
268:   }
269: 
270:   @Test(timeout = 4000)
271:   public void test17()  throws Throwable  {
272:       Class<Annotation> class1 = Annotation.class;
273:       JSONReader jSONReader1 = new JSONReader((DefaultJSONParser) null);
274:       // Undeclared exception!
275:       try { 
276:         jSONReader1.readObject(class1);
277:         fail("Expecting exception: NullPointerException");
278:       
279:       } catch(NullPointerException e) {
280:          //
281:          // no message in exception (getMessage() returned null)
282:          //
283:          verifyException("com.alibaba.fastjson.JSONReader", e);
284:       }
285:   }
286: 
287:   @Test(timeout = 4000)
288:   public void test18()  throws Throwable  {
289:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
290:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
291:       // Undeclared exception!
292:       try { 
293:         jSONReader1.readObject();
294:         fail("Expecting exception: RuntimeException");
295:       
296:       } catch(RuntimeException e) {
297:          //
298:          // syntax error, pos 2, line 1, column 3Rqe>9^H
299:          //
300:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
301:       }
302:   }
303: 
304:   @Test(timeout = 4000)
305:   public void test19()  throws Throwable  {
306:       JSONReader jSONReader1 = null;
307:       try {
308:         jSONReader1 = new JSONReader((DefaultJSONParser) null);
309:         fail("Expecting exception: NullPointerException");
310:       
311:       } catch(NullPointerException e) {
312:          //
313:          // no message in exception (getMessage() returned null)
314:          //
315:          verifyException("com.alibaba.fastjson.JSONReader", e);
316:       }
317:       
318:       // Undeclared exception!
319:       try { 
320:         jSONReader1.readObject();
321:         fail("Expecting exception: NullPointerException");
322:       
323:       } catch(NullPointerException e) {
324:          //
325:          // no message in exception (getMessage() returned null)
326:          //
327:          verifyException("com.alibaba.fastjson.JSONReader", e);
328:       }
329:   }
330: 
331:   @Test(timeout = 4000)
332:   public void test20()  throws Throwable  {
333:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
334:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
335:       // Undeclared exception!
336:       try { 
337:         jSONReader1.readLong();
338:         fail("Expecting exception: RuntimeException");
339:       
340:       } catch(RuntimeException e) {
341:          //
342:          // syntax error, pos 2, line 1, column 3Rqe>9^H
343:          //
344:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
345:       }
346:   }
347: 
348:   @Test(timeout = 4000)
349:   public void test21()  throws Throwable  {
350:       JSONReader jSONReader1 = null;
351:       try {
352:         jSONReader1 = new JSONReader((DefaultJSONParser) null);
353:         fail("Expecting exception: NullPointerException");
354:       
355:       } catch(NullPointerException e) {
356:          //
357:          // no message in exception (getMessage() returned null)
358:          //
359:          verifyException("com.alibaba.fastjson.JSONReader", e);
360:       }
361:       
362:       // Undeclared exception!
363:       try { 
364:         jSONReader1.readLong();
365:         fail("Expecting exception: NullPointerException");
366:       
367:       } catch(NullPointerException e) {
368:          //
369:          // no message in exception (getMessage() returned null)
370:          //
371:          verifyException("com.alibaba.fastjson.JSONReader", e);
372:       }
373:   }
374: 
375:   @Test(timeout = 4000)
376:   public void test22()  throws Throwable  {
377:       JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("D;B");
378:       JSONReader jSONReader1 = new JSONReader(jSONReaderScanner1);
379:       // Undeclared exception!
380:       try { 
381:         jSONReader1.readInteger();
382:         fail("Expecting exception: RuntimeException");
383:       
384:       } catch(RuntimeException e) {
385:          //
386:          // syntax error, 
387:          //
388:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
389:       }
390:   }
391: 
392:   @Test(timeout = 4000)
393:   public void test23()  throws Throwable  {
394:       StringReader stringReader1 = new StringReader("-");
395:       JSONReader jSONReader1 = new JSONReader(stringReader1);
396:       // Undeclared exception!
397:       try { 
398:         jSONReader1.readInteger();
399:         fail("Expecting exception: NumberFormatException");
400:       
401:       } catch(NumberFormatException e) {
402:          //
403:          // -
404:          //
405:          verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
406:       }
407:   }
408: 
409:   @Test(timeout = 4000)
410:   public void test24()  throws Throwable  {
411:       JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("");
412:       JSONReader jSONReader1 = new JSONReader(jSONReaderScanner1);
413:       jSONReader1.close();
414:       // Undeclared exception!
415:       try { 
416:         jSONReader1.readInteger();
417:         fail("Expecting exception: NullPointerException");
418:       
419:       } catch(NullPointerException e) {
420:          //
421:          // no message in exception (getMessage() returned null)
422:          //
423:          verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
424:       }
425:   }
426: 
427:   @Test(timeout = 4000)
428:   public void test25()  throws Throwable  {
429:       JSONReader jSONReader1 = new JSONReader((DefaultJSONParser) null);
430:       Feature feature1 = Feature.InitStringFieldAsEmpty;
431:       // Undeclared exception!
432:       try { 
433:         jSONReader1.config(feature1, false);
434:         fail("Expecting exception: NullPointerException");
435:       
436:       } catch(NullPointerException e) {
437:          //
438:          // no message in exception (getMessage() returned null)
439:          //
440:          verifyException("com.alibaba.fastjson.JSONReader", e);
441:       }
442:   }
443: 
444:   @Test(timeout = 4000)
445:   public void test26()  throws Throwable  {
446:       PipedReader pipedReader1 = null;
447:       try {
448:         pipedReader1 = new PipedReader();
449:         fail("Expecting exception: RuntimeException");
450:       
451:       } catch(RuntimeException e) {
452:          //
453:          // Pipe not connected
454:          //
455:          verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
456:       }
457:       
458:       JSONReader jSONReader1 = null;
459:       try {
460:         jSONReader1 = new JSONReader(pipedReader1);
461:         fail("Expecting exception: RuntimeException");
462:       
463:       } catch(RuntimeException e) {
464:          //
465:          // Pipe not connected
466:          //
467:          verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
468:       }
469:   }
470: 
471:   @Test(timeout = 4000)
472:   public void test27()  throws Throwable  {
473:       JSONReader jSONReader1 = null;
474:       try {
475:         jSONReader1 = new JSONReader((Reader) null);
476:         fail("Expecting exception: NullPointerException");
477:       
478:       } catch(NullPointerException e) {
479:          //
480:          // no message in exception (getMessage() returned null)
481:          //
482:          verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
483:       }
484:   }
485: 
486:   @Test(timeout = 4000)
487:   public void test28()  throws Throwable  {
488:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("9");
489:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
490:       JSONReader jSONReader2 = null;
491:       try {
492:         jSONReader2 = new JSONReader(defaultJSONParser1.lexer);
493:         fail("Expecting exception: RuntimeException");
494:       
495:       } catch(RuntimeException e) {
496:          //
497:          // EOF error
498:          //
499:          verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
500:       }
501:   }
502: 
503:   @Test(timeout = 4000)
504:   public void test29()  throws Throwable  {
505:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
506:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
507:       // Undeclared exception!
508:       try { 
509:         jSONReader1.endObject();
510:         fail("Expecting exception: RuntimeException");
511:       
512:       } catch(RuntimeException e) {
513:          //
514:          // syntax error, expect }, actual error
515:          //
516:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
517:       }
518:   }
519: 
520:   @Test(timeout = 4000)
521:   public void test30()  throws Throwable  {
522:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("{\"fruit\":\"Apple\",\"size\":\"deserialze\",\"color\":99,\"value\":true,\"value2\":false,\"x\":\"a string\"}");
523:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
524:       jSONReader1.readObject((Object) defaultJSONParser1.NONE);
525:       assertEquals(0, defaultJSONParser1.resolveStatus);
526:   }
527: 
528:   @Test(timeout = 4000)
529:   public void test31()  throws Throwable  {
530:       StringReader stringReader1 = new StringReader("}NI");
531:       JSONReader jSONReader1 = new JSONReader(stringReader1);
532:       Class<Object> class1 = Object.class;
533:       Object object1 = jSONReader1.readObject(class1);
534:       assertNotNull(object1);
535:   }
536: 
537:   @Test(timeout = 4000)
538:   public void test32()  throws Throwable  {
539:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
540:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
541:       // Undeclared exception!
542:       try { 
543:         jSONReader1.readObject((Type) null);
544:         fail("Expecting exception: RuntimeException");
545:       
546:       } catch(RuntimeException e) {
547:          //
548:          // syntax error, pos 2, line 1, column 3?$qVn
549:          //
550:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
551:       }
552:   }
553: 
554:   @Test(timeout = 4000)
555:   public void test33()  throws Throwable  {
556:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("-99");
557:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
558:       String string1 = jSONReader1.readString();
559:       assertNotNull(string1);
560:   }
561: 
562:   @Test(timeout = 4000)
563:   public void test34()  throws Throwable  {
564:       StringReader stringReader1 = new StringReader("-");
565:       JSONReader jSONReader1 = new JSONReader(stringReader1);
566:       // Undeclared exception!
567:       try { 
568:         jSONReader1.readLong();
569:         fail("Expecting exception: NumberFormatException");
570:       
571:       } catch(NumberFormatException e) {
572:          //
573:          // -
574:          //
575:          verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
576:       }
577:   }
578: 
579:   @Test(timeout = 4000)
580:   public void test35()  throws Throwable  {
581:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("&99");
582:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
583:       Integer integer1 = jSONReader1.readInteger();
584:       assertEquals(99, (int)integer1);
585:   }
586: 
587:   @Test(timeout = 4000)
588:   public void test36()  throws Throwable  {
589:       StringReader stringReader1 = new StringReader("?$qVn");
590:       JSONReader jSONReader1 = new JSONReader(stringReader1);
591:       // Undeclared exception!
592:       try { 
593:         jSONReader1.hasNext();
594:         fail("Expecting exception: RuntimeException");
595:       
596:       } catch(RuntimeException e) {
597:          //
598:          // context is null
599:          //
600:          verifyException("com.alibaba.fastjson.JSONReader", e);
601:       }
602:   }
603: 
604:   @Test(timeout = 4000)
605:   public void test37()  throws Throwable  {
606:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
607:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
608:       // Undeclared exception!
609:       try { 
610:         jSONReader1.startArray();
611:         fail("Expecting exception: RuntimeException");
612:       
613:       } catch(RuntimeException e) {
614:          //
615:          // syntax error, expect [, actual error
616:          //
617:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
618:       }
619:   }
620: 
621:   @Test(timeout = 4000)
622:   public void test38()  throws Throwable  {
623:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("&99");
624:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
625:       // Undeclared exception!
626:       try { 
627:         jSONReader1.startObject();
628:         fail("Expecting exception: RuntimeException");
629:       
630:       } catch(RuntimeException e) {
631:          //
632:          // syntax error, expect {, actual error
633:          //
634:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
635:       }
636:   }
637: 
638:   @Test(timeout = 4000)
639:   public void test39()  throws Throwable  {
640:       StringReader stringReader1 = new StringReader("Sb");
641:       Feature[] featureArray1 = new Feature[3];
642:       JSONReader jSONReader1 = null;
643:       try {
644:         jSONReader1 = new JSONReader(stringReader1, featureArray1);
645:         fail("Expecting exception: NullPointerException");
646:       
647:       } catch(NullPointerException e) {
648:          //
649:          // no message in exception (getMessage() returned null)
650:          //
651:          verifyException("com.alibaba.fastjson.parser.Feature", e);
652:       }
653:   }
654: 
655:   @Test(timeout = 4000)
656:   public void test40()  throws Throwable  {
657:       JSONScanner jSONScanner1 = new JSONScanner("context is null", 1);
658:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser(jSONScanner1);
659:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
660:       Locale locale1 = jSONReader1.getLocal();
661:       assertEquals("", locale1.getCountry());
662:   }
663: 
664:   @Test(timeout = 4000)
665:   public void test41()  throws Throwable  {
666:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
667:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
668:       // Undeclared exception!
669:       try { 
670:         jSONReader1.readObject((TypeReference<Object>) null);
671:         fail("Expecting exception: NullPointerException");
672:       
673:       } catch(NullPointerException e) {
674:          //
675:          // no message in exception (getMessage() returned null)
676:          //
677:          verifyException("com.alibaba.fastjson.JSONReader", e);
678:       }
679:   }
680: 
681:   @Test(timeout = 4000)
682:   public void test42()  throws Throwable  {
683:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
684:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
685:       TimeZone timeZone1 = jSONReader1.getTimzeZone();
686:       assertEquals("GMT", timeZone1.getID());
687:   }
688: 
689:   @Test(timeout = 4000)
690:   public void test43()  throws Throwable  {
691:       StringReader stringReader1 = new StringReader("I@M<ub rXf$B0V;^");
692:       JSONReader jSONReader1 = new JSONReader(stringReader1);
693:       SimpleTimeZone simpleTimeZone1 = new SimpleTimeZone(7, "I@M<ub rXf$B0V;^");
694:       jSONReader1.setTimzeZone(simpleTimeZone1);
695:       assertEquals("java.util.SimpleTimeZone[id=I@M<ub rXf$B0V;^,offset=7,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]", simpleTimeZone1.toString());
696:   }
697: 
698:   @Test(timeout = 4000)
699:   public void test44()  throws Throwable  {
700:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
701:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
702:       Feature feature1 = Feature.AllowArbitraryCommas;
703:       jSONReader1.config(feature1, false);
704:       assertEquals(1, jSONReader1.peek());
705:   }
706: 
707:   @Test(timeout = 4000)
708:   public void test45()  throws Throwable  {
709:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("&99");
710:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
711:       int int1 = jSONReader1.peek();
712:       assertEquals(1, int1);
713:   }
714: 
715:   @Test(timeout = 4000)
716:   public void test46()  throws Throwable  {
717:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("?$qVn");
718:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
719:       Locale locale1 = Locale.CHINESE;
720:       jSONReader1.setLocale(locale1);
721:       assertEquals("", locale1.getISO3Country());
722:   }
723: 
724:   @Test(timeout = 4000)
725:   public void test47()  throws Throwable  {
726:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
727:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1);
728:       // Undeclared exception!
729:       try { 
730:         jSONReader1.close();
731:         fail("Expecting exception: RuntimeException");
732:       
733:       } catch(RuntimeException e) {
734:          //
735:          // not close json text, token : error
736:          //
737:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
738:       }
739:   }
740: 
741:   @Test(timeout = 4000)
742:   public void test48()  throws Throwable  {
743:       DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser("Rqe>9^H");
744:       JSONReader jSONReader1 = new JSONReader(defaultJSONParser1.lexer);
745:       // Undeclared exception!
746:       try { 
747:         jSONReader1.endArray();
748:         fail("Expecting exception: RuntimeException");
749:       
750:       } catch(RuntimeException e) {
751:          //
752:          // syntax error, expect ], actual error
753:          //
754:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
755:       }
756:   }
757: }
RegularFileObject[/tmp/EvoSuite_101_1590151027012/com/alibaba/fastjson/JSONReader_101_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 12:37:07 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONReader_101_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONReader"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONReader_101_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
89:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
90:       "com.alibaba.fastjson.serializer.JSONSerializable",
91:       "com.alibaba.fastjson.serializer.SerializeWriter",
92:       "com.alibaba.fastjson.serializer.ReferenceCodec",
93:       "com.alibaba.fastjson.JSONException",
94:       "com.alibaba.fastjson.asm.TypeCollector$1",
95:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
96:       "com.alibaba.fastjson.serializer.ToStringSerializer",
97:       "com.alibaba.fastjson.serializer.SerialContext",
98:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
99:       "com.alibaba.fastjson.serializer.AfterFilter",
100:       "com.alibaba.fastjson.TypeReference",
101:       "com.alibaba.fastjson.serializer.ObjectSerializer",
102:       "com.alibaba.fastjson.asm.Item",
103:       "com.alibaba.fastjson.serializer.MapSerializer",
104:       "com.alibaba.fastjson.serializer.DateCodec",
105:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
106:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
107:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
108:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
109:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
110:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
111:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
112:       "com.alibaba.fastjson.util.FieldInfo",
113:       "com.alibaba.fastjson.serializer.PropertyFilter",
114:       "com.alibaba.fastjson.annotation.JSONField",
115:       "com.alibaba.fastjson.parser.SymbolTable",
116:       "com.alibaba.fastjson.serializer.NameFilter",
117:       "com.alibaba.fastjson.serializer.ListSerializer",
118:       "com.alibaba.fastjson.JSONArray",
119:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
120:       "com.alibaba.fastjson.JSONAware",
121:       "com.alibaba.fastjson.serializer.LongCodec",
122:       "com.alibaba.fastjson.util.ASMClassLoader",
123:       "com.alibaba.fastjson.PropertyNamingStrategy",
124:       "com.alibaba.fastjson.parser.JSONToken",
125:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
126:       "com.alibaba.fastjson.serializer.AppendableSerializer",
127:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
128:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
129:       "com.alibaba.fastjson.serializer.ContextValueFilter",
130:       "com.alibaba.fastjson.util.ServiceLoader",
131:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
132:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
133:       "com.alibaba.fastjson.parser.DefaultJSONParser",
134:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
135:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
136:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
137:       "com.alibaba.fastjson.serializer.BeanContext",
138:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
139:       "com.alibaba.fastjson.util.IdentityHashMap",
140:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
141:       "com.alibaba.fastjson.JSON",
142:       "com.alibaba.fastjson.serializer.StringCodec",
143:       "com.alibaba.fastjson.serializer.SerializeFilterable",
144:       "com.alibaba.fastjson.JSONWriter",
145:       "com.alibaba.fastjson.asm.Opcodes",
146:       "com.alibaba.fastjson.JSONStreamContext",
147:       "com.alibaba.fastjson.JSONReader",
148:       "com.alibaba.fastjson.JSONStreamAware",
149:       "com.alibaba.fastjson.asm.MethodWriter",
150:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
151:       "com.alibaba.fastjson.serializer.SerializerFeature",
152:       "com.alibaba.fastjson.TypeReference$1",
153:       "com.alibaba.fastjson.serializer.CalendarCodec",
154:       "com.alibaba.fastjson.util.IOUtils",
155:       "com.alibaba.fastjson.util.TypeUtils",
156:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
157:       "com.alibaba.fastjson.asm.ClassReader",
158:       "com.alibaba.fastjson.spi.Module",
159:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
160:       "com.alibaba.fastjson.serializer.MiscCodec",
161:       "com.alibaba.fastjson.util.IOUtils$1",
162:       "com.alibaba.fastjson.serializer.IntegerCodec",
163:       "com.alibaba.fastjson.serializer.SerializeFilter",
164:       "com.alibaba.fastjson.JSONPObject",
165:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
166:       "com.alibaba.fastjson.serializer.BeforeFilter",
167:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
168:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
169:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
170:       "com.alibaba.fastjson.JSONObject",
171:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
172:       "com.alibaba.fastjson.serializer.CharacterCodec",
173:       "com.alibaba.fastjson.asm.TypeCollector",
174:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
175:       "com.alibaba.fastjson.asm.ByteVector",
176:       "com.alibaba.fastjson.parser.JSONLexer",
177:       "com.alibaba.fastjson.util.ASMClassLoader$1",
178:       "com.alibaba.fastjson.asm.Label",
179:       "com.alibaba.fastjson.asm.FieldWriter",
180:       "com.alibaba.fastjson.serializer.JSONSerializer",
181:       "com.alibaba.fastjson.util.JavaBeanInfo",
182:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
183:       "com.alibaba.fastjson.serializer.SerializeConfig",
184:       "com.alibaba.fastjson.serializer.AtomicCodec",
185:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
186:       "com.alibaba.fastjson.asm.Type",
187:       "com.alibaba.fastjson.serializer.FieldSerializer",
188:       "com.alibaba.fastjson.serializer.FloatCodec",
189:       "com.alibaba.fastjson.parser.JSONReaderScanner",
190:       "com.alibaba.fastjson.serializer.ValueFilter",
191:       "com.alibaba.fastjson.JSONPathException",
192:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
193:       "com.alibaba.fastjson.serializer.Labels",
194:       "com.alibaba.fastjson.serializer.CollectionCodec",
195:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
196:       "com.alibaba.fastjson.serializer.CharArrayCodec",
197:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
198:       "com.alibaba.fastjson.asm.MethodVisitor",
199:       "com.alibaba.fastjson.annotation.JSONCreator",
200:       "com.alibaba.fastjson.asm.MethodCollector",
201:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
202:       "com.alibaba.fastjson.serializer.LabelFilter",
203:       "com.alibaba.fastjson.annotation.JSONType",
204:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
205:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
206:       "com.alibaba.fastjson.serializer.DoubleSerializer",
207:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
208:       "com.alibaba.fastjson.serializer.BooleanCodec",
209:       "com.alibaba.fastjson.parser.ParserConfig",
210:       "com.alibaba.fastjson.parser.Feature",
211:       "com.alibaba.fastjson.parser.ParseContext",
212:       "com.alibaba.fastjson.serializer.PropertyPreFilter"
213:     );
214:   } 
215: 
216:   private static void resetClasses() {
217:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONReader_101_tmp__ESTest_scaffolding.class.getClassLoader()); 
218: 
219:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
220:       "com.alibaba.fastjson.JSONReader",
221:       "com.alibaba.fastjson.util.IOUtils$1",
222:       "com.alibaba.fastjson.util.IOUtils",
223:       "com.alibaba.fastjson.util.TypeUtils",
224:       "com.alibaba.fastjson.util.IdentityHashMap",
225:       "com.alibaba.fastjson.util.ASMUtils",
226:       "com.alibaba.fastjson.parser.SymbolTable",
227:       "com.alibaba.fastjson.serializer.SerializerFeature",
228:       "com.alibaba.fastjson.JSON",
229:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
230:       "com.alibaba.fastjson.util.ASMClassLoader$1",
231:       "com.alibaba.fastjson.util.ASMClassLoader",
232:       "com.alibaba.fastjson.serializer.MiscCodec",
233:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
234:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
235:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
236:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
237:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
238:       "com.alibaba.fastjson.serializer.DateCodec",
239:       "com.alibaba.fastjson.serializer.CalendarCodec",
240:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
241:       "com.alibaba.fastjson.serializer.CollectionCodec",
242:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
243:       "com.alibaba.fastjson.serializer.StringCodec",
244:       "com.alibaba.fastjson.serializer.CharacterCodec",
245:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
246:       "com.alibaba.fastjson.serializer.IntegerCodec",
247:       "com.alibaba.fastjson.serializer.LongCodec",
248:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
249:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
250:       "com.alibaba.fastjson.serializer.FloatCodec",
251:       "com.alibaba.fastjson.serializer.BooleanCodec",
252:       "com.alibaba.fastjson.serializer.CharArrayCodec",
253:       "com.alibaba.fastjson.serializer.ReferenceCodec",
254:       "com.alibaba.fastjson.serializer.AtomicCodec",
255:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
256:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
257:       "com.alibaba.fastjson.parser.ParserConfig",
258:       "com.alibaba.fastjson.parser.DefaultJSONParser",
259:       "com.alibaba.fastjson.parser.JSONLexerBase",
260:       "com.alibaba.fastjson.parser.JSONScanner",
261:       "com.alibaba.fastjson.JSONException",
262:       "com.alibaba.fastjson.parser.JSONToken",
263:       "com.alibaba.fastjson.TypeReference$1",
264:       "com.alibaba.fastjson.TypeReference",
265:       "com.alibaba.fastjson.parser.JSONReaderScanner",
266:       "com.alibaba.fastjson.JSONObject",
267:       "com.alibaba.fastjson.parser.ParseContext",
268:       "com.alibaba.fastjson.JSONStreamContext",
269:       "com.alibaba.fastjson.JSONArray",
270:       "com.alibaba.fastjson.serializer.SerializeWriter",
271:       "com.alibaba.fastjson.serializer.SerializeFilterable",
272:       "com.alibaba.fastjson.serializer.JSONSerializer",
273:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
274:       "com.alibaba.fastjson.serializer.DoubleSerializer",
275:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
276:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
277:       "com.alibaba.fastjson.serializer.AppendableSerializer",
278:       "com.alibaba.fastjson.serializer.ToStringSerializer",
279:       "com.alibaba.fastjson.serializer.SerializeConfig",
280:       "com.alibaba.fastjson.util.ServiceLoader",
281:       "com.alibaba.fastjson.serializer.MapSerializer",
282:       "com.alibaba.fastjson.serializer.SerialContext",
283:       "com.alibaba.fastjson.serializer.ListSerializer",
284:       "com.alibaba.fastjson.util.JavaBeanInfo",
285:       "com.alibaba.fastjson.asm.ClassWriter",
286:       "com.alibaba.fastjson.asm.ByteVector",
287:       "com.alibaba.fastjson.asm.Item",
288:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
289:       "com.alibaba.fastjson.asm.MethodWriter",
290:       "com.alibaba.fastjson.asm.Label",
291:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
292:       "com.alibaba.fastjson.asm.ClassReader",
293:       "com.alibaba.fastjson.asm.TypeCollector$1",
294:       "com.alibaba.fastjson.asm.TypeCollector",
295:       "com.alibaba.fastjson.asm.Type",
296:       "com.alibaba.fastjson.asm.MethodCollector",
297:       "com.alibaba.fastjson.util.FieldInfo",
298:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
299:       "com.alibaba.fastjson.asm.FieldWriter",
300:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
301:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
302:       "com.alibaba.fastjson.serializer.FieldSerializer",
303:       "com.alibaba.fastjson.serializer.BeanContext",
304:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
305:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
306:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
307:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
308:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
309:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
310:       "com.alibaba.fastjson.util.GenericArrayTypeImpl"
311:     );
312:   }
313: }

* Writing tests to file
* Writing JUnit test case 'JSONReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Resulting test suite's mutation score: 20%
* Done!

* Computation finished
* Compiling and checking tests
[MASTER] 14:37:40.873 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 14:37:40.874 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONObject jSONObject0 = new JSONObject(2147483645);
Byte byte0 = new Byte((byte) (-4));
jSONObject0.put("Hl", (Object) byte0);

* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'JSONObject_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
* Writing tests to file
* Writing JUnit test case 'JSONReaderScanner_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSON
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.parser.DefaultJSONParser
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 9924
* Connecting to master process on port 9928
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:40:35.420 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 14:40:35.449 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSON
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2080
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 747 / 2080
[MASTER] 14:40:36.955 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 14:40:36.958 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 14:40:36.972 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Enum<E> : Type points to itself
[MASTER] 14:40:36.973 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:40:36.973 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:40:40.140 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 14:40:40.140 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.DefaultJSONParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 3512
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 650 / 3512
[MASTER] 14:40:41.327 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 14:40:41.328 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 14:40:41.341 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 14:40:41.342 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 14:40:41.343 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumMap<K, V> : Type points to itself
[MASTER] 14:40:41.343 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumSet<E> : Type points to itself
[MASTER] 14:40:41.343 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashSet<E> : Type points to itself
[MASTER] 14:40:41.343 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Hashtable<K, V> : Type points to itself
[MASTER] 14:40:41.344 [logback-2] ERROR TestCluster - Failed to check cache for java.util.IdentityHashMap<K, V> : Type points to itself
[MASTER] 14:40:41.344 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashMap<K, V> : Type points to itself
[MASTER] 14:40:41.344 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 14:40:41.346 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Stack<E> : Type points to itself
[MASTER] 14:40:41.346 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeMap<K, V> : Type points to itself
[MASTER] 14:40:41.346 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 14:40:41.347 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 14:40:41.699 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 14:40:42.858 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
[MASTER] 14:40:49.289 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 14:41:04.010 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.ParameterizedTypeImpl due to org.evosuite.ga.ConstructionFailedException: Have no generator for java.lang.reflect.Constructor<java.lang.Integer> canUseFunctionalMocks=false, canBeMocked: false
[MASTER] 14:41:05.659 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.ParameterizedTypeImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.BeanContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 14:41:09.117 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.BeanContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.parser.DefaultJSONParser due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.parser.ParserConfig due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 14:41:09.576 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 14:41:13.672 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: No generators of type java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>
[MASTER] 14:41:15.138 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 14:41:47.365 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
[MASTER] 14:42:00.274 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 14:42:16.116 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.BeanContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: No generators of type java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>
[MASTER] 14:42:17.412 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.BeanContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 14:42:46.379 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
[MASTER] 14:42:48.681 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: No generators of type java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>
[MASTER] 14:43:02.240 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.JSONArray due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 14:43:38.746 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Search finished after 182s and 228 generations, 118465 statements, best individual has fitness: 534.0
[MASTER] 14:43:39.580 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.executedAndThenSendIndividualToMaster(StatisticsSender.java:98) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTests(TestSuiteGenerator.java:687) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:245) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_1_PascalNameFilter.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Search finished after 183s and 138 generations, 69739 statements, best individual has fitness: 1263.0
* Minimizing test suite
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 973
* Number of covered goals: 616
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 707
* Number of covered goals: 430
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 97%
* Total number of goals: 67
* Number of covered goals: 65
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 897
* Number of covered goals: 684
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 58%
* Total number of goals: 102
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 63
* Number of covered goals: 63
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 63
* Number of covered goals: 60
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 707
* Number of covered goals: 389
* Generated 195 tests with total length 677
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 435
* Number of covered goals: 380
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 283
* Number of covered goals: 238
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 99%
* Total number of goals: 133
* Number of covered goals: 132
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 716
* Number of covered goals: 552
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 197
* Number of covered goals: 85
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 83
* Number of covered goals: 81
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 89%
* Total number of goals: 83
* Number of covered goals: 74
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 283
* Number of covered goals: 227
* Generated 263 tests with total length 1177
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 34%
* Compiling and checking tests
[MASTER] 14:44:32.551 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1590151472521/com/alibaba/fastjson/JSON_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1590151472521/com/alibaba/fastjson/JSON_25_tmp__ESTest_scaffolding.java]]
[MASTER] 14:44:32.551 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:44:32.551 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:44:32.555 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<com.alibaba.fastjson.JSONObject> cannot be converted to java.lang.Class<java.util.HashMap<com.alibaba.fastjson.serializer.SimplePropertyPreFilter,java.lang.reflect.Constructor>>: 31
[MASTER] 14:44:32.556 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1590151472521/com/alibaba/fastjson/JSON_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 12:44:32 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.JSON;
12: import com.alibaba.fastjson.JSONObject;
13: import com.alibaba.fastjson.parser.Feature;
14: import com.alibaba.fastjson.parser.deserializer.ParseProcess;
15: import com.alibaba.fastjson.serializer.SimplePropertyPreFilter;
16: import java.lang.reflect.Constructor;
17: import java.util.HashMap;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class JSON_25_tmp__ESTest extends JSON_25_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       Feature[] featureArray0 = new Feature[0];
28:       Class<JSONObject> class0 = JSONObject.class;
29:       // Undeclared exception!
30:       try { 
31:         JSON.parseObject("K7$V<", (Class<HashMap<SimplePropertyPreFilter, Constructor>>) class0, (ParseProcess) null, featureArray0);
32:         fail("Expecting exception: RuntimeException");
33:       
34:       } catch(RuntimeException e) {
35:          //
36:          // syntax error, expect {, actual error, pos 1, line 1, column 2K7$V<
37:          //
38:          verifyException("com.alibaba.fastjson.parser.DefaultJSONParser", e);
39:       }
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_25_1590151472521/com/alibaba/fastjson/JSON_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 12:44:32 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSON_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSON"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:     java.lang.System.setProperty("user.home", "/home/apaniche"); 
78:   }
79: 
80:   private static void initializeClasses() {
81:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSON_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
82:       "com.alibaba.fastjson.asm.ClassWriter",
83:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
84:       "com.alibaba.fastjson.util.ASMUtils",
85:       "com.alibaba.fastjson.JSONPath",
86:       "com.alibaba.fastjson.parser.JSONScanner",
87:       "com.alibaba.fastjson.parser.JSONLexerBase",
88:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
89:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
90:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
91:       "com.alibaba.fastjson.serializer.JSONSerializable",
92:       "com.alibaba.fastjson.serializer.SerializeWriter",
93:       "com.alibaba.fastjson.serializer.ReferenceCodec",
94:       "com.alibaba.fastjson.JSONException",
95:       "com.alibaba.fastjson.asm.TypeCollector$1",
96:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
97:       "com.alibaba.fastjson.serializer.ToStringSerializer",
98:       "com.alibaba.fastjson.serializer.SerialContext",
99:       "com.alibaba.fastjson.JSONPath$FilterGroup",
100:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
101:       "com.alibaba.fastjson.serializer.AfterFilter",
102:       "com.alibaba.fastjson.TypeReference",
103:       "com.alibaba.fastjson.serializer.ObjectSerializer",
104:       "com.alibaba.fastjson.JSONValidator$Type",
105:       "com.alibaba.fastjson.serializer.MapSerializer",
106:       "com.alibaba.fastjson.asm.Item",
107:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
108:       "com.alibaba.fastjson.serializer.DateCodec",
109:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
110:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
111:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
112:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
113:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
114:       "com.alibaba.fastjson.JSONPath$Filter",
115:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
116:       "com.alibaba.fastjson.util.FieldInfo",
117:       "com.alibaba.fastjson.JSONValidator$UTF16Validator",
118:       "com.alibaba.fastjson.annotation.JSONField",
119:       "com.alibaba.fastjson.serializer.PropertyFilter",
120:       "com.alibaba.fastjson.parser.SymbolTable",
121:       "com.alibaba.fastjson.serializer.NameFilter",
122:       "com.alibaba.fastjson.serializer.ListSerializer",
123:       "com.alibaba.fastjson.JSONArray",
124:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
125:       "com.alibaba.fastjson.JSONAware",
126:       "com.alibaba.fastjson.serializer.LongCodec",
127:       "com.alibaba.fastjson.serializer.EnumSerializer",
128:       "com.alibaba.fastjson.util.ASMClassLoader",
129:       "com.alibaba.fastjson.PropertyNamingStrategy",
130:       "com.alibaba.fastjson.parser.JSONToken",
131:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
132:       "com.alibaba.fastjson.serializer.AppendableSerializer",
133:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
134:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
135:       "com.alibaba.fastjson.serializer.ContextValueFilter",
136:       "com.alibaba.fastjson.util.ServiceLoader",
137:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
138:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
139:       "com.alibaba.fastjson.JSONPath$FilterSegment",
140:       "com.alibaba.fastjson.parser.DefaultJSONParser",
141:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
142:       "com.alibaba.fastjson.JSONValidator$ReaderValidator",
143:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
144:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
145:       "com.alibaba.fastjson.serializer.BeanContext",
146:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
147:       "com.alibaba.fastjson.util.IdentityHashMap",
148:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
149:       "com.alibaba.fastjson.JSON",
150:       "com.alibaba.fastjson.serializer.StringCodec",
151:       "com.alibaba.fastjson.serializer.SerializeFilterable",
152:       "com.alibaba.fastjson.JSONWriter",
153:       "com.alibaba.fastjson.asm.Opcodes",
154:       "com.alibaba.fastjson.JSONReader",
155:       "com.alibaba.fastjson.JSONStreamAware",
156:       "com.alibaba.fastjson.asm.MethodWriter",
157:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
158:       "com.alibaba.fastjson.serializer.SerializerFeature",
159:       "com.alibaba.fastjson.JSONPath$Operator",
160:       "com.alibaba.fastjson.TypeReference$1",
161:       "com.alibaba.fastjson.serializer.CalendarCodec",
162:       "com.alibaba.fastjson.util.IOUtils",
163:       "com.alibaba.fastjson.util.TypeUtils",
164:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
165:       "com.alibaba.fastjson.asm.ClassReader",
166:       "com.alibaba.fastjson.JSONPath$Segment",
167:       "com.alibaba.fastjson.spi.Module",
168:       "com.alibaba.fastjson.JSONValidator",
169:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
170:       "com.alibaba.fastjson.serializer.MiscCodec",
171:       "com.alibaba.fastjson.util.IOUtils$1",
172:       "com.alibaba.fastjson.serializer.IntegerCodec",
173:       "com.alibaba.fastjson.serializer.SerializeFilter",
174:       "com.alibaba.fastjson.JSONPObject",
175:       "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
176:       "com.alibaba.fastjson.serializer.PascalNameFilter",
177:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
178:       "com.alibaba.fastjson.serializer.BeforeFilter",
179:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
180:       "com.alibaba.fastjson.serializer.ArraySerializer",
181:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
182:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
183:       "com.alibaba.fastjson.JSONObject",
184:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
185:       "com.alibaba.fastjson.serializer.CharacterCodec",
186:       "com.alibaba.fastjson.asm.TypeCollector",
187:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
188:       "com.alibaba.fastjson.asm.ByteVector",
189:       "com.alibaba.fastjson.parser.JSONLexer",
190:       "com.alibaba.fastjson.util.ASMClassLoader$1",
191:       "com.alibaba.fastjson.asm.Label",
192:       "com.alibaba.fastjson.JSONValidator$UTF8Validator",
193:       "com.alibaba.fastjson.asm.FieldWriter",
194:       "com.alibaba.fastjson.serializer.JSONSerializer",
195:       "com.alibaba.fastjson.util.JavaBeanInfo",
196:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
197:       "com.alibaba.fastjson.serializer.SerializeConfig",
198:       "com.alibaba.fastjson.serializer.AtomicCodec",
199:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
200:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
201:       "com.alibaba.fastjson.asm.Type",
202:       "com.alibaba.fastjson.serializer.FieldSerializer",
203:       "com.alibaba.fastjson.serializer.FloatCodec",
204:       "com.alibaba.fastjson.parser.JSONReaderScanner",
205:       "com.alibaba.fastjson.serializer.ValueFilter",
206:       "com.alibaba.fastjson.JSONPathException",
207:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
208:       "com.alibaba.fastjson.serializer.Labels",
209:       "com.alibaba.fastjson.serializer.CollectionCodec",
210:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
211:       "com.alibaba.fastjson.serializer.CharArrayCodec",
212:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
213:       "com.alibaba.fastjson.asm.MethodVisitor",
214:       "com.alibaba.fastjson.annotation.JSONCreator",
215:       "com.alibaba.fastjson.asm.MethodCollector",
216:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
217:       "com.alibaba.fastjson.annotation.JSONType",
218:       "com.alibaba.fastjson.serializer.LabelFilter",
219:       "com.alibaba.fastjson.util.UTF8Decoder",
220:       "com.alibaba.fastjson.JSONValidator$UTF8InputStreamValidator",
221:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
222:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
223:       "com.alibaba.fastjson.serializer.DoubleSerializer",
224:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
225:       "com.alibaba.fastjson.serializer.BooleanCodec",
226:       "com.alibaba.fastjson.parser.Feature",
227:       "com.alibaba.fastjson.parser.ParserConfig",
228:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
229:       "com.alibaba.fastjson.parser.ParseContext"
230:     );
231:   } 
232: 
233:   private static void resetClasses() {
234:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSON_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
235: 
236:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
237:       "com.alibaba.fastjson.parser.Feature",
238:       "com.alibaba.fastjson.serializer.SerializerFeature",
239:       "com.alibaba.fastjson.util.IOUtils$1",
240:       "com.alibaba.fastjson.util.IOUtils",
241:       "com.alibaba.fastjson.JSON",
242:       "com.alibaba.fastjson.util.IdentityHashMap",
243:       "com.alibaba.fastjson.util.ASMUtils",
244:       "com.alibaba.fastjson.parser.SymbolTable",
245:       "com.alibaba.fastjson.util.TypeUtils",
246:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
247:       "com.alibaba.fastjson.util.ASMClassLoader$1",
248:       "com.alibaba.fastjson.util.ASMClassLoader",
249:       "com.alibaba.fastjson.serializer.MiscCodec",
250:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
251:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
252:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
253:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
254:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
255:       "com.alibaba.fastjson.serializer.DateCodec",
256:       "com.alibaba.fastjson.serializer.CalendarCodec",
257:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
258:       "com.alibaba.fastjson.serializer.CollectionCodec",
259:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
260:       "com.alibaba.fastjson.serializer.StringCodec",
261:       "com.alibaba.fastjson.serializer.CharacterCodec",
262:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
263:       "com.alibaba.fastjson.serializer.IntegerCodec",
264:       "com.alibaba.fastjson.serializer.LongCodec",
265:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
266:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
267:       "com.alibaba.fastjson.serializer.FloatCodec",
268:       "com.alibaba.fastjson.serializer.BooleanCodec",
269:       "com.alibaba.fastjson.serializer.CharArrayCodec",
270:       "com.alibaba.fastjson.serializer.ReferenceCodec",
271:       "com.alibaba.fastjson.serializer.AtomicCodec",
272:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
273:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
274:       "com.alibaba.fastjson.parser.ParserConfig",
275:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
276:       "com.alibaba.fastjson.serializer.DoubleSerializer",
277:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
278:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
279:       "com.alibaba.fastjson.serializer.AppendableSerializer",
280:       "com.alibaba.fastjson.serializer.ToStringSerializer",
281:       "com.alibaba.fastjson.serializer.SerializeConfig",
282:       "com.alibaba.fastjson.JSONObject",
283:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
284:       "com.alibaba.fastjson.parser.DefaultJSONParser",
285:       "com.alibaba.fastjson.parser.JSONLexerBase",
286:       "com.alibaba.fastjson.parser.JSONScanner",
287:       "com.alibaba.fastjson.JSONException",
288:       "com.alibaba.fastjson.util.UTF8Decoder",
289:       "com.alibaba.fastjson.JSONArray",
290:       "com.alibaba.fastjson.serializer.SerializeWriter",
291:       "com.alibaba.fastjson.serializer.SerializeFilterable",
292:       "com.alibaba.fastjson.serializer.JSONSerializer",
293:       "com.alibaba.fastjson.util.ServiceLoader",
294:       "com.alibaba.fastjson.serializer.MapSerializer",
295:       "com.alibaba.fastjson.serializer.SerialContext",
296:       "com.alibaba.fastjson.parser.JSONToken",
297:       "com.alibaba.fastjson.util.JavaBeanInfo",
298:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
299:       "com.alibaba.fastjson.asm.ClassReader",
300:       "com.alibaba.fastjson.asm.TypeCollector$1",
301:       "com.alibaba.fastjson.asm.TypeCollector",
302:       "com.alibaba.fastjson.asm.Type",
303:       "com.alibaba.fastjson.asm.MethodCollector",
304:       "com.alibaba.fastjson.util.FieldInfo",
305:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
306:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
307:       "com.alibaba.fastjson.serializer.PascalNameFilter",
308:       "com.alibaba.fastjson.serializer.ListSerializer",
309:       "com.alibaba.fastjson.parser.ParseContext",
310:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
311:       "com.alibaba.fastjson.asm.ClassWriter",
312:       "com.alibaba.fastjson.asm.ByteVector",
313:       "com.alibaba.fastjson.asm.Item",
314:       "com.alibaba.fastjson.asm.FieldWriter",
315:       "com.alibaba.fastjson.asm.MethodWriter",
316:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
317:       "com.alibaba.fastjson.asm.Label",
318:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
319:       "com.alibaba.fastjson.serializer.FieldSerializer",
320:       "com.alibaba.fastjson.serializer.BeanContext",
321:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
322:       "com.alibaba.fastjson.TypeReference$1",
323:       "com.alibaba.fastjson.TypeReference",
324:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
325:       "com.alibaba.fastjson.JSONPObject",
326:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
327:       "com.alibaba.fastjson.serializer.EnumSerializer",
328:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
329:       "com.alibaba.fastjson.PropertyNamingStrategy",
330:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
331:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
332:       "com.alibaba.fastjson.JSONPath$Operator",
333:       "com.alibaba.fastjson.parser.JSONReaderScanner",
334:       "com.alibaba.fastjson.serializer.ArraySerializer",
335:       "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
336:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
337:       "com.alibaba.fastjson.PropertyNamingStrategy$1",
338:       "com.alibaba.fastjson.parser.deserializer.OptionalCodec",
339:       "com.alibaba.fastjson.serializer.JSONAwareSerializer",
340:       "com.alibaba.fastjson.serializer.ByteBufferCodec",
341:       "com.alibaba.fastjson.serializer.ByteBufferCodec$ByteBufferBean",
342:       "com.alibaba.fastjson.serializer.AnnotationSerializer"
343:     );
344:   }
345: }

[MASTER] 14:44:32.556 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Feature[] featureArray0 = new Feature[0];
Class<JSONObject> class0 = JSONObject.class;
JSON.parseObject("K7$V<", (Class<HashMap<SimplePropertyPreFilter, Constructor>>) class0, (ParseProcess) null, featureArray0);

* Resulting test suite's mutation score: 31%
[MASTER] 14:44:32.709 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_30_1590151472680/com/alibaba/fastjson/JSON_30_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_30_1590151472680/com/alibaba/fastjson/JSON_30_tmp__ESTest_scaffolding.java]]
[MASTER] 14:44:32.710 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:44:32.710 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:44:32.710 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<com.alibaba.fastjson.serializer.SimplePropertyPreFilter> cannot be converted to java.lang.Class<java.util.AbstractMap.SimpleImmutableEntry<java.lang.reflect.Constructor,com.alibaba.fastjson.JSONArray>>: 25
[MASTER] 14:44:32.711 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_30_1590151472680/com/alibaba/fastjson/JSON_30_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 12:44:32 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.alibaba.fastjson.JSON;
11: import com.alibaba.fastjson.JSONArray;
12: import com.alibaba.fastjson.serializer.SimplePropertyPreFilter;
13: import java.lang.reflect.Constructor;
14: import java.util.AbstractMap;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class JSON_30_tmp__ESTest extends JSON_30_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       Class<SimplePropertyPreFilter> class0 = SimplePropertyPreFilter.class;
25:       AbstractMap.SimpleImmutableEntry<Constructor, JSONArray> abstractMap_SimpleImmutableEntry0 = JSON.parseObject("", (Class<AbstractMap.SimpleImmutableEntry<Constructor, JSONArray>>) class0);
26:       assertNull(abstractMap_SimpleImmutableEntry0);
27:   }
28: }
RegularFileObject[/tmp/EvoSuite_30_1590151472680/com/alibaba/fastjson/JSON_30_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 12:44:32 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSON_30_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSON"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:     java.lang.System.setProperty("user.home", "/home/apaniche"); 
78:   }
79: 
80:   private static void initializeClasses() {
81:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSON_30_tmp__ESTest_scaffolding.class.getClassLoader() ,
82:       "com.alibaba.fastjson.asm.ClassWriter",
83:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
84:       "com.alibaba.fastjson.util.ASMUtils",
85:       "com.alibaba.fastjson.JSONPath",
86:       "com.alibaba.fastjson.parser.JSONScanner",
87:       "com.alibaba.fastjson.parser.JSONLexerBase",
88:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
89:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
90:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
91:       "com.alibaba.fastjson.serializer.JSONSerializable",
92:       "com.alibaba.fastjson.serializer.SerializeWriter",
93:       "com.alibaba.fastjson.serializer.ReferenceCodec",
94:       "com.alibaba.fastjson.JSONException",
95:       "com.alibaba.fastjson.asm.TypeCollector$1",
96:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
97:       "com.alibaba.fastjson.serializer.ToStringSerializer",
98:       "com.alibaba.fastjson.serializer.SerialContext",
99:       "com.alibaba.fastjson.JSONPath$FilterGroup",
100:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
101:       "com.alibaba.fastjson.serializer.AfterFilter",
102:       "com.alibaba.fastjson.TypeReference",
103:       "com.alibaba.fastjson.serializer.ObjectSerializer",
104:       "com.alibaba.fastjson.JSONValidator$Type",
105:       "com.alibaba.fastjson.serializer.MapSerializer",
106:       "com.alibaba.fastjson.asm.Item",
107:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
108:       "com.alibaba.fastjson.serializer.DateCodec",
109:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
110:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
111:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
112:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
113:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
114:       "com.alibaba.fastjson.JSONPath$Filter",
115:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
116:       "com.alibaba.fastjson.util.FieldInfo",
117:       "com.alibaba.fastjson.JSONValidator$UTF16Validator",
118:       "com.alibaba.fastjson.annotation.JSONField",
119:       "com.alibaba.fastjson.serializer.PropertyFilter",
120:       "com.alibaba.fastjson.parser.SymbolTable",
121:       "com.alibaba.fastjson.serializer.NameFilter",
122:       "com.alibaba.fastjson.serializer.ListSerializer",
123:       "com.alibaba.fastjson.JSONArray",
124:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
125:       "com.alibaba.fastjson.JSONAware",
126:       "com.alibaba.fastjson.serializer.LongCodec",
127:       "com.alibaba.fastjson.serializer.EnumSerializer",
128:       "com.alibaba.fastjson.util.ASMClassLoader",
129:       "com.alibaba.fastjson.PropertyNamingStrategy",
130:       "com.alibaba.fastjson.parser.JSONToken",
131:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
132:       "com.alibaba.fastjson.serializer.AppendableSerializer",
133:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
134:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
135:       "com.alibaba.fastjson.serializer.ContextValueFilter",
136:       "com.alibaba.fastjson.util.ServiceLoader",
137:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
138:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
139:       "com.alibaba.fastjson.JSONPath$FilterSegment",
140:       "com.alibaba.fastjson.parser.DefaultJSONParser",
141:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
142:       "com.alibaba.fastjson.JSONValidator$ReaderValidator",
143:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
144:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
145:       "com.alibaba.fastjson.serializer.BeanContext",
146:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
147:       "com.alibaba.fastjson.util.IdentityHashMap",
148:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
149:       "com.alibaba.fastjson.JSON",
150:       "com.alibaba.fastjson.serializer.StringCodec",
151:       "com.alibaba.fastjson.serializer.SerializeFilterable",
152:       "com.alibaba.fastjson.JSONWriter",
153:       "com.alibaba.fastjson.asm.Opcodes",
154:       "com.alibaba.fastjson.JSONReader",
155:       "com.alibaba.fastjson.JSONStreamAware",
156:       "com.alibaba.fastjson.asm.MethodWriter",
157:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
158:       "com.alibaba.fastjson.serializer.SerializerFeature",
159:       "com.alibaba.fastjson.JSONPath$Operator",
160:       "com.alibaba.fastjson.TypeReference$1",
161:       "com.alibaba.fastjson.serializer.CalendarCodec",
162:       "com.alibaba.fastjson.util.IOUtils",
163:       "com.alibaba.fastjson.util.TypeUtils",
164:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
165:       "com.alibaba.fastjson.asm.ClassReader",
166:       "com.alibaba.fastjson.JSONPath$Segment",
167:       "com.alibaba.fastjson.spi.Module",
168:       "com.alibaba.fastjson.JSONValidator",
169:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
170:       "com.alibaba.fastjson.serializer.MiscCodec",
171:       "com.alibaba.fastjson.util.IOUtils$1",
172:       "com.alibaba.fastjson.serializer.IntegerCodec",
173:       "com.alibaba.fastjson.serializer.SerializeFilter",
174:       "com.alibaba.fastjson.JSONPObject",
175:       "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
176:       "com.alibaba.fastjson.serializer.PascalNameFilter",
177:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
178:       "com.alibaba.fastjson.serializer.BeforeFilter",
179:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
180:       "com.alibaba.fastjson.serializer.ArraySerializer",
181:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
182:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
183:       "com.alibaba.fastjson.JSONObject",
184:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
185:       "com.alibaba.fastjson.serializer.CharacterCodec",
186:       "com.alibaba.fastjson.asm.TypeCollector",
187:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
188:       "com.alibaba.fastjson.asm.ByteVector",
189:       "com.alibaba.fastjson.parser.JSONLexer",
190:       "com.alibaba.fastjson.util.ASMClassLoader$1",
191:       "com.alibaba.fastjson.asm.Label",
192:       "com.alibaba.fastjson.JSONValidator$UTF8Validator",
193:       "com.alibaba.fastjson.asm.FieldWriter",
194:       "com.alibaba.fastjson.serializer.JSONSerializer",
195:       "com.alibaba.fastjson.util.JavaBeanInfo",
196:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
197:       "com.alibaba.fastjson.serializer.SerializeConfig",
198:       "com.alibaba.fastjson.serializer.AtomicCodec",
199:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
200:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
201:       "com.alibaba.fastjson.asm.Type",
202:       "com.alibaba.fastjson.serializer.FieldSerializer",
203:       "com.alibaba.fastjson.serializer.FloatCodec",
204:       "com.alibaba.fastjson.parser.JSONReaderScanner",
205:       "com.alibaba.fastjson.serializer.ValueFilter",
206:       "com.alibaba.fastjson.JSONPathException",
207:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
208:       "com.alibaba.fastjson.serializer.Labels",
209:       "com.alibaba.fastjson.serializer.CollectionCodec",
210:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
211:       "com.alibaba.fastjson.serializer.CharArrayCodec",
212:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
213:       "com.alibaba.fastjson.asm.MethodVisitor",
214:       "com.alibaba.fastjson.annotation.JSONCreator",
215:       "com.alibaba.fastjson.asm.MethodCollector",
216:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
217:       "com.alibaba.fastjson.annotation.JSONType",
218:       "com.alibaba.fastjson.serializer.LabelFilter",
219:       "com.alibaba.fastjson.util.UTF8Decoder",
220:       "com.alibaba.fastjson.JSONValidator$UTF8InputStreamValidator",
221:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
222:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
223:       "com.alibaba.fastjson.serializer.DoubleSerializer",
224:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
225:       "com.alibaba.fastjson.serializer.BooleanCodec",
226:       "com.alibaba.fastjson.parser.Feature",
227:       "com.alibaba.fastjson.parser.ParserConfig",
228:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
229:       "com.alibaba.fastjson.parser.ParseContext"
230:     );
231:   } 
232: 
233:   private static void resetClasses() {
234:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSON_30_tmp__ESTest_scaffolding.class.getClassLoader()); 
235: 
236:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
237:       "com.alibaba.fastjson.parser.Feature",
238:       "com.alibaba.fastjson.serializer.SerializerFeature",
239:       "com.alibaba.fastjson.util.IOUtils$1",
240:       "com.alibaba.fastjson.util.IOUtils",
241:       "com.alibaba.fastjson.JSON",
242:       "com.alibaba.fastjson.util.IdentityHashMap",
243:       "com.alibaba.fastjson.util.ASMUtils",
244:       "com.alibaba.fastjson.parser.SymbolTable",
245:       "com.alibaba.fastjson.util.TypeUtils",
246:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
247:       "com.alibaba.fastjson.util.ASMClassLoader$1",
248:       "com.alibaba.fastjson.util.ASMClassLoader",
249:       "com.alibaba.fastjson.serializer.MiscCodec",
250:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
251:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
252:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
253:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
254:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
255:       "com.alibaba.fastjson.serializer.DateCodec",
256:       "com.alibaba.fastjson.serializer.CalendarCodec",
257:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
258:       "com.alibaba.fastjson.serializer.CollectionCodec",
259:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
260:       "com.alibaba.fastjson.serializer.StringCodec",
261:       "com.alibaba.fastjson.serializer.CharacterCodec",
262:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
263:       "com.alibaba.fastjson.serializer.IntegerCodec",
264:       "com.alibaba.fastjson.serializer.LongCodec",
265:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
266:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
267:       "com.alibaba.fastjson.serializer.FloatCodec",
268:       "com.alibaba.fastjson.serializer.BooleanCodec",
269:       "com.alibaba.fastjson.serializer.CharArrayCodec",
270:       "com.alibaba.fastjson.serializer.ReferenceCodec",
271:       "com.alibaba.fastjson.serializer.AtomicCodec",
272:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
273:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
274:       "com.alibaba.fastjson.parser.ParserConfig",
275:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
276:       "com.alibaba.fastjson.serializer.DoubleSerializer",
277:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
278:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
279:       "com.alibaba.fastjson.serializer.AppendableSerializer",
280:       "com.alibaba.fastjson.serializer.ToStringSerializer",
281:       "com.alibaba.fastjson.serializer.SerializeConfig",
282:       "com.alibaba.fastjson.JSONObject",
283:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
284:       "com.alibaba.fastjson.parser.DefaultJSONParser",
285:       "com.alibaba.fastjson.parser.JSONLexerBase",
286:       "com.alibaba.fastjson.parser.JSONScanner",
287:       "com.alibaba.fastjson.JSONException",
288:       "com.alibaba.fastjson.util.UTF8Decoder",
289:       "com.alibaba.fastjson.JSONArray",
290:       "com.alibaba.fastjson.serializer.SerializeWriter",
291:       "com.alibaba.fastjson.serializer.SerializeFilterable",
292:       "com.alibaba.fastjson.serializer.JSONSerializer",
293:       "com.alibaba.fastjson.util.ServiceLoader",
294:       "com.alibaba.fastjson.serializer.MapSerializer",
295:       "com.alibaba.fastjson.serializer.SerialContext",
296:       "com.alibaba.fastjson.parser.JSONToken",
297:       "com.alibaba.fastjson.util.JavaBeanInfo",
298:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
299:       "com.alibaba.fastjson.asm.ClassReader",
300:       "com.alibaba.fastjson.asm.TypeCollector$1",
301:       "com.alibaba.fastjson.asm.TypeCollector",
302:       "com.alibaba.fastjson.asm.Type",
303:       "com.alibaba.fastjson.asm.MethodCollector",
304:       "com.alibaba.fastjson.util.FieldInfo",
305:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
306:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
307:       "com.alibaba.fastjson.serializer.PascalNameFilter",
308:       "com.alibaba.fastjson.serializer.ListSerializer",
309:       "com.alibaba.fastjson.parser.ParseContext",
310:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
311:       "com.alibaba.fastjson.asm.ClassWriter",
312:       "com.alibaba.fastjson.asm.ByteVector",
313:       "com.alibaba.fastjson.asm.Item",
314:       "com.alibaba.fastjson.asm.FieldWriter",
315:       "com.alibaba.fastjson.asm.MethodWriter",
316:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
317:       "com.alibaba.fastjson.asm.Label",
318:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
319:       "com.alibaba.fastjson.serializer.FieldSerializer",
320:       "com.alibaba.fastjson.serializer.BeanContext",
321:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
322:       "com.alibaba.fastjson.TypeReference$1",
323:       "com.alibaba.fastjson.TypeReference",
324:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
325:       "com.alibaba.fastjson.JSONPObject",
326:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
327:       "com.alibaba.fastjson.serializer.EnumSerializer",
328:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
329:       "com.alibaba.fastjson.PropertyNamingStrategy",
330:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
331:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
332:       "com.alibaba.fastjson.JSONPath$Operator",
333:       "com.alibaba.fastjson.parser.JSONReaderScanner",
334:       "com.alibaba.fastjson.serializer.ArraySerializer",
335:       "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
336:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
337:       "com.alibaba.fastjson.PropertyNamingStrategy$1",
338:       "com.alibaba.fastjson.parser.deserializer.OptionalCodec",
339:       "com.alibaba.fastjson.serializer.JSONAwareSerializer",
340:       "com.alibaba.fastjson.serializer.ByteBufferCodec",
341:       "com.alibaba.fastjson.serializer.ByteBufferCodec$ByteBufferBean",
342:       "com.alibaba.fastjson.serializer.AnnotationSerializer"
343:     );
344:   }
345: }

[MASTER] 14:44:32.711 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Class<SimplePropertyPreFilter> class0 = SimplePropertyPreFilter.class;
AbstractMap.SimpleImmutableEntry<Constructor, JSONArray> abstractMap_SimpleImmutableEntry0 = JSON.parseObject("", (Class<AbstractMap.SimpleImmutableEntry<Constructor, JSONArray>>) class0);
assertNull(abstractMap_SimpleImmutableEntry0);


* Compiling and checking tests
[MASTER] 14:44:35.248 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_38_1590151475215/com/alibaba/fastjson/parser/DefaultJSONParser_38_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_38_1590151475215/com/alibaba/fastjson/parser/DefaultJSONParser_38_tmp__ESTest_scaffolding.java]]
[MASTER] 14:44:35.248 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:44:35.248 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:44:35.252 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.awt.Insets> cannot be converted to java.lang.Class<java.util.HashSet<java.util.LinkedList>>: 33
[MASTER] 14:44:35.253 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_38_1590151475215/com/alibaba/fastjson/parser/DefaultJSONParser_38_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri May 22 12:44:35 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson.parser;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.parser.DefaultJSONParser;
12: import com.alibaba.fastjson.parser.ParserConfig;
13: import com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory;
14: import java.awt.Insets;
15: import java.util.HashSet;
16: import java.util.LinkedList;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class DefaultJSONParser_38_tmp__ESTest extends DefaultJSONParser_38_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
27:       ASMDeserializerFactory aSMDeserializerFactory0 = new ASMDeserializerFactory(classLoader0);
28:       ParserConfig parserConfig0 = new ParserConfig(aSMDeserializerFactory0);
29:       DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser("[false,99]", parserConfig0, 26);
30:       Class<Insets> class0 = Insets.class;
31:       // Undeclared exception!
32:       try { 
33:         defaultJSONParser0.parseArray((Class<HashSet<LinkedList>>) class0);
34:         fail("Expecting exception: RuntimeException");
35:       
36:       } catch(RuntimeException e) {
37:          //
38:          // syntax error, expect {, actual false, pos 1, fastjson-version 1.2.68
39:          //
40:          verifyException("com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer", e);
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_38_1590151475215/com/alibaba/fastjson/parser/DefaultJSONParser_38_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri May 22 12:44:35 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson.parser;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class DefaultJSONParser_38_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.parser.DefaultJSONParser"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DefaultJSONParser_38_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.serializer.AwtCodec",
84:       "com.alibaba.fastjson.util.ASMUtils",
85:       "com.alibaba.fastjson.JSONPath",
86:       "com.alibaba.fastjson.parser.JSONScanner",
87:       "com.alibaba.fastjson.parser.JSONLexerBase",
88:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
89:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
90:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
91:       "com.alibaba.fastjson.serializer.JSONSerializable",
92:       "com.alibaba.fastjson.serializer.SerializeWriter",
93:       "com.alibaba.fastjson.serializer.ReferenceCodec",
94:       "com.alibaba.fastjson.JSONException",
95:       "com.alibaba.fastjson.asm.TypeCollector$1",
96:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
97:       "com.alibaba.fastjson.serializer.ToStringSerializer",
98:       "com.alibaba.fastjson.serializer.SerialContext",
99:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
100:       "com.alibaba.fastjson.serializer.AfterFilter",
101:       "com.alibaba.fastjson.TypeReference",
102:       "com.alibaba.fastjson.serializer.ObjectSerializer",
103:       "com.alibaba.fastjson.asm.Item",
104:       "com.alibaba.fastjson.serializer.MapSerializer",
105:       "com.alibaba.fastjson.serializer.DateCodec",
106:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
107:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
108:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
109:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
110:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
111:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
112:       "com.alibaba.fastjson.util.FieldInfo",
113:       "com.alibaba.fastjson.annotation.JSONField",
114:       "com.alibaba.fastjson.serializer.PropertyFilter",
115:       "com.alibaba.fastjson.parser.SymbolTable",
116:       "com.alibaba.fastjson.serializer.NameFilter",
117:       "com.alibaba.fastjson.serializer.ListSerializer",
118:       "com.alibaba.fastjson.JSONArray",
119:       "com.alibaba.fastjson.JSONAware",
120:       "com.alibaba.fastjson.serializer.LongCodec",
121:       "com.alibaba.fastjson.util.ASMClassLoader",
122:       "com.alibaba.fastjson.PropertyNamingStrategy",
123:       "com.alibaba.fastjson.parser.JSONToken",
124:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
125:       "com.alibaba.fastjson.serializer.AppendableSerializer",
126:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
127:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
128:       "com.alibaba.fastjson.serializer.ContextValueFilter",
129:       "com.alibaba.fastjson.util.ServiceLoader",
130:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
131:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
132:       "com.alibaba.fastjson.parser.DefaultJSONParser",
133:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
134:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
135:       "com.alibaba.fastjson.serializer.BeanContext",
136:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
137:       "com.alibaba.fastjson.util.IdentityHashMap",
138:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
139:       "com.alibaba.fastjson.JSON",
140:       "com.alibaba.fastjson.serializer.StringCodec",
141:       "com.alibaba.fastjson.serializer.SerializeFilterable",
142:       "com.alibaba.fastjson.JSONWriter",
143:       "com.alibaba.fastjson.asm.Opcodes",
144:       "com.alibaba.fastjson.JSONReader",
145:       "com.alibaba.fastjson.JSONStreamAware",
146:       "com.alibaba.fastjson.asm.MethodWriter",
147:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
148:       "com.alibaba.fastjson.serializer.SerializerFeature",
149:       "com.alibaba.fastjson.TypeReference$1",
150:       "com.alibaba.fastjson.serializer.CalendarCodec",
151:       "com.alibaba.fastjson.util.IOUtils",
152:       "com.alibaba.fastjson.util.TypeUtils",
153:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
154:       "com.alibaba.fastjson.asm.ClassReader",
155:       "com.alibaba.fastjson.spi.Module",
156:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
157:       "com.alibaba.fastjson.serializer.MiscCodec",
158:       "com.alibaba.fastjson.util.IOUtils$1",
159:       "com.alibaba.fastjson.serializer.IntegerCodec",
160:       "com.alibaba.fastjson.serializer.SerializeFilter",
161:       "com.alibaba.fastjson.JSONPObject",
162:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
163:       "com.alibaba.fastjson.serializer.BeforeFilter",
164:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
165:       "com.alibaba.fastjson.serializer.ArraySerializer",
166:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
167:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
168:       "com.alibaba.fastjson.JSONObject",
169:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
170:       "com.alibaba.fastjson.serializer.CharacterCodec",
171:       "com.alibaba.fastjson.asm.TypeCollector",
172:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
173:       "com.alibaba.fastjson.asm.ByteVector",
174:       "com.alibaba.fastjson.parser.JSONLexer",
175:       "com.alibaba.fastjson.util.ASMClassLoader$1",
176:       "com.alibaba.fastjson.asm.Label",
177:       "com.alibaba.fastjson.asm.FieldWriter",
178:       "com.alibaba.fastjson.serializer.JSONSerializer",
179:       "com.alibaba.fastjson.util.JavaBeanInfo",
180:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
181:       "com.alibaba.fastjson.serializer.SerializeConfig",
182:       "com.alibaba.fastjson.serializer.AtomicCodec",
183:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
184:       "com.alibaba.fastjson.asm.Type",
185:       "com.alibaba.fastjson.serializer.FieldSerializer",
186:       "com.alibaba.fastjson.serializer.FloatCodec",
187:       "com.alibaba.fastjson.parser.JSONReaderScanner",
188:       "com.alibaba.fastjson.serializer.ValueFilter",
189:       "com.alibaba.fastjson.JSONPathException",
190:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
191:       "com.alibaba.fastjson.serializer.Labels",
192:       "com.alibaba.fastjson.serializer.CollectionCodec",
193:       "com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer",
194:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
195:       "com.alibaba.fastjson.serializer.CharArrayCodec",
196:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
197:       "com.alibaba.fastjson.asm.MethodVisitor",
198:       "com.alibaba.fastjson.annotation.JSONCreator",
199:       "com.alibaba.fastjson.asm.MethodCollector",
200:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
201:       "com.alibaba.fastjson.serializer.LabelFilter",
202:       "com.alibaba.fastjson.annotation.JSONType",
203:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
204:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
205:       "com.alibaba.fastjson.serializer.DoubleSerializer",
206:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
207:       "com.alibaba.fastjson.serializer.BooleanCodec",
208:       "com.alibaba.fastjson.parser.ParserConfig",
209:       "com.alibaba.fastjson.parser.ParseContext",
210:       "com.alibaba.fastjson.parser.Feature",
211:       "com.alibaba.fastjson.serializer.PropertyPreFilter"
212:     );
213:   } 
214: 
215:   private static void resetClasses() {
216:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DefaultJSONParser_38_tmp__ESTest_scaffolding.class.getClassLoader()); 
217: 
218:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
219:       "com.alibaba.fastjson.parser.DefaultJSONParser",
220:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
221:       "com.alibaba.fastjson.util.IOUtils$1",
222:       "com.alibaba.fastjson.util.IOUtils",
223:       "com.alibaba.fastjson.util.IdentityHashMap",
224:       "com.alibaba.fastjson.util.ASMUtils",
225:       "com.alibaba.fastjson.parser.SymbolTable",
226:       "com.alibaba.fastjson.parser.Feature",
227:       "com.alibaba.fastjson.serializer.SerializerFeature",
228:       "com.alibaba.fastjson.JSON",
229:       "com.alibaba.fastjson.util.TypeUtils",
230:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
231:       "com.alibaba.fastjson.util.ASMClassLoader$1",
232:       "com.alibaba.fastjson.util.ASMClassLoader",
233:       "com.alibaba.fastjson.serializer.MiscCodec",
234:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
235:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
236:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
237:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
238:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
239:       "com.alibaba.fastjson.serializer.DateCodec",
240:       "com.alibaba.fastjson.serializer.CalendarCodec",
241:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
242:       "com.alibaba.fastjson.serializer.CollectionCodec",
243:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
244:       "com.alibaba.fastjson.serializer.StringCodec",
245:       "com.alibaba.fastjson.serializer.CharacterCodec",
246:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
247:       "com.alibaba.fastjson.serializer.IntegerCodec",
248:       "com.alibaba.fastjson.serializer.LongCodec",
249:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
250:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
251:       "com.alibaba.fastjson.serializer.FloatCodec",
252:       "com.alibaba.fastjson.serializer.BooleanCodec",
253:       "com.alibaba.fastjson.serializer.CharArrayCodec",
254:       "com.alibaba.fastjson.serializer.ReferenceCodec",
255:       "com.alibaba.fastjson.serializer.AtomicCodec",
256:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
257:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
258:       "com.alibaba.fastjson.parser.ParserConfig",
259:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
260:       "com.alibaba.fastjson.serializer.DoubleSerializer",
261:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
262:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
263:       "com.alibaba.fastjson.serializer.AppendableSerializer",
264:       "com.alibaba.fastjson.serializer.ToStringSerializer",
265:       "com.alibaba.fastjson.serializer.SerializeConfig",
266:       "com.alibaba.fastjson.JSONPath",
267:       "com.alibaba.fastjson.parser.JSONLexerBase",
268:       "com.alibaba.fastjson.parser.JSONScanner",
269:       "com.alibaba.fastjson.parser.JSONReaderScanner",
270:       "com.alibaba.fastjson.JSONException",
271:       "com.alibaba.fastjson.parser.JSONToken",
272:       "com.alibaba.fastjson.parser.ParseContext",
273:       "com.alibaba.fastjson.JSONArray",
274:       "com.alibaba.fastjson.serializer.SerializeWriter",
275:       "com.alibaba.fastjson.serializer.SerializeFilterable",
276:       "com.alibaba.fastjson.serializer.JSONSerializer",
277:       "com.alibaba.fastjson.util.ServiceLoader",
278:       "com.alibaba.fastjson.serializer.ListSerializer",
279:       "com.alibaba.fastjson.JSONObject",
280:       "com.alibaba.fastjson.serializer.MapSerializer",
281:       "com.alibaba.fastjson.serializer.SerialContext",
282:       "com.alibaba.fastjson.util.FieldInfo",
283:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
284:       "com.alibaba.fastjson.asm.ClassWriter",
285:       "com.alibaba.fastjson.asm.ByteVector",
286:       "com.alibaba.fastjson.asm.Item",
287:       "com.alibaba.fastjson.asm.FieldWriter",
288:       "com.alibaba.fastjson.asm.MethodWriter",
289:       "com.alibaba.fastjson.asm.Type",
290:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
291:       "com.alibaba.fastjson.asm.Label",
292:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
293:       "com.alibaba.fastjson.serializer.FieldSerializer",
294:       "com.alibaba.fastjson.serializer.BeanContext",
295:       "com.alibaba.fastjson.TypeReference$1",
296:       "com.alibaba.fastjson.TypeReference",
297:       "com.alibaba.fastjson.util.JavaBeanInfo",
298:       "com.alibaba.fastjson.asm.ClassReader",
299:       "com.alibaba.fastjson.asm.TypeCollector$1",
300:       "com.alibaba.fastjson.asm.TypeCollector",
301:       "com.alibaba.fastjson.asm.MethodCollector",
302:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
303:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
304:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
305:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
306:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
307:       "com.alibaba.fastjson.serializer.AwtCodec",
308:       "com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer",
309:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
310:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
311:       "com.alibaba.fastjson.util.UTF8Decoder",
312:       "com.alibaba.fastjson.PropertyNamingStrategy$1",
313:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
314:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessableDeserializer",
315:       "com.alibaba.fastjson.serializer.EnumSerializer",
316:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
317:       "com.alibaba.fastjson.parser.deserializer.OptionalCodec",
318:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
319:       "com.alibaba.fastjson.serializer.ArraySerializer"
320:     );
321:   }
322: }

[MASTER] 14:44:35.253 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
ASMDeserializerFactory aSMDeserializerFactory0 = new ASMDeserializerFactory(classLoader0);
ParserConfig parserConfig0 = new ParserConfig(aSMDeserializerFactory0);
DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser("[false,99]", parserConfig0, 26);
Class<Insets> class0 = Insets.class;
defaultJSONParser0.parseArray((Class<HashSet<LinkedList>>) class0);

[MASTER] 14:44:41.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 14:44:41.409 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SerializerFeature[] serializerFeatureArray0 = new SerializerFeature[0];
File file0 = MockFile.createTempFile("parser.features.NonStringKeyAsString", "@type");
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
Charset charset0 = uTF8Decoder0.charset();
JSON.writeJSONString((OutputStream) mockFileOutputStream0, charset0, (Object) file0, serializerFeatureArray0);

[MASTER] 14:45:03.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to java.util.LinkedHashMap
[MASTER] 14:45:03.434 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedHashMap<JavaBeanSerializer, Integer> linkedHashMap0 = new LinkedHashMap<JavaBeanSerializer, Integer>();
SerializeConfig serializeConfig0 = SerializeConfig.getGlobalInstance();
LinkedHashMap linkedHashMap1 = (LinkedHashMap)JSON.toJSON((Object) linkedHashMap0, serializeConfig0);
assertTrue(linkedHashMap1.isEmpty());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'JSON_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'DefaultJSONParser_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONPath
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.parser.JSONScanner
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONArray
* Starting Client-0
* Connecting to master process on port 9922
* Starting Client-0
* Connecting to master process on port 9927
* Starting Client-0
* Connecting to master process on port 9928
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:45:39.456 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 14:45:39.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONArray
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1055
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 674 / 1055
[MASTER] 14:45:40.620 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 14:45:40.625 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 14:45:41.479 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 14:45:42.619 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.JSONScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 14:45:43.476 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 14:45:43.477 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONPath
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 5652
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 470 / 5652
* Total number of test goals for DYNAMOSA: 7058
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 865 / 7058
[MASTER] 14:45:45.340 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 14:45:45.350 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 14:45:45.350 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 14:45:45.350 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumSet<E> : Type points to itself
[MASTER] 14:45:45.351 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashSet<E> : Type points to itself
[MASTER] 14:45:45.351 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 14:45:45.351 [logback-2] ERROR TestCluster - Failed to check cache for java.util.PriorityQueue<E> : Type points to itself
[MASTER] 14:45:45.351 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ServiceLoader<S> : Type points to itself
[MASTER] 14:45:45.351 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Stack<E> : Type points to itself
[MASTER] 14:45:45.352 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 14:45:45.352 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 14:45:45.353 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 14:45:45.359 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Enum<E> : Type points to itself
[MASTER] 14:45:45.361 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:45:45.362 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 14:45:46.857 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 14:45:46.858 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
[MASTER] 14:45:47.173 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 14:46:09.879 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 14:46:14.792 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 14:46:27.256 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[MASTER] 14:46:52.411 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
[MASTER] 14:46:55.386 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.serializer.SerializeBeanInfo due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: No generators of type java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>
[MASTER] 14:47:53.143 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Search finished after 182s and 106 generations, 38401 statements, best individual has fitness: 284.0
* Minimizing test suite
* Search finished after 185s and 338 generations, 202025 statements, best individual has fitness: 2597.0
* Search finished after 185s and 205 generations, 164270 statements, best individual has fitness: 3566.0
[MASTER] 14:48:53.567 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Minimizing test suite
[MASTER] 14:48:56.317 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.executedAndThenSendIndividualToMaster(StatisticsSender.java:98) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTests(TestSuiteGenerator.java:687) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:245) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_2_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 173
* Number of covered goals: 147
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 79%
* Total number of goals: 101
* Number of covered goals: 80
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 85%
* Total number of goals: 95
* Number of covered goals: 81
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 325
* Number of covered goals: 290
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 219
* Number of covered goals: 96
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 68
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 68
* Number of covered goals: 66
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 101
* Number of covered goals: 80
* Generated 161 tests with total length 438
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 1857
* Number of covered goals: 1035
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 1519
* Number of covered goals: 799
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 63
* Number of covered goals: 63
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 65%
* Total number of goals: 567
* Number of covered goals: 367
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 94
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 48
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 49%
* Total number of goals: 1519
* Number of covered goals: 740
* Generated 256 tests with total length 775
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
[MASTER] 14:50:13.961 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 14:50:13.962 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONArray jSONArray0 = new JSONArray();
JSONArray jSONArray1 = jSONArray0.fluentSet((-1), jSONArray0);
boolean boolean0 = jSONArray1.contains(jSONArray0);
assertEquals(1, jSONArray0.size());
assertTrue(boolean0);


* Coverage of criterion LINE: 56%
* Total number of goals: 2079
* Number of covered goals: 1174
* Coverage analysis for criterion BRANCH
[MASTER] 14:50:17.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 14:50:17.449 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONArray jSONArray0 = new JSONArray(1107297537);

* Coverage of criterion BRANCH: 46%
* Total number of goals: 1850
* Number of covered goals: 851
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 99%
* Total number of goals: 127
* Number of covered goals: 126
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 913
* Number of covered goals: 572
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 75%
* Total number of goals: 114
* Number of covered goals: 85
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 126
* Number of covered goals: 126
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 126
* Number of covered goals: 120
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 1850
* Number of covered goals: 801
* Generated 358 tests with total length 1200
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:50:24.882 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_12_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.executedAndThenSendIndividualToMaster(StatisticsSender.java:98) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:484) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:255) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_12_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_12_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_12_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
[MASTER] 14:50:26.846 [logback-1] WARN  GenericClass - Class not found: class com.alibaba.fastjson.serializer.ASMSerializer_12_JavaBeanDeserializer - keeping old class loader 
java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_12_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.changeClassLoader(GenericClass.java:331) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.testcase.variable.VariableReferenceImpl.changeClassLoader(VariableReferenceImpl.java:575) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.testcase.statements.AbstractStatement.lambda$changeClassLoader$2(AbstractStatement.java:489) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Iterable.forEach(Iterable.java:75) ~[na:1.8.0_161]
	at org.evosuite.testcase.statements.AbstractStatement.changeClassLoader(AbstractStatement.java:489) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.testcase.statements.MethodStatement.changeClassLoader(MethodStatement.java:616) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.testcase.DefaultTestCase.changeClassLoader(DefaultTestCase.java:265) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.assertion.AssertionGenerator.changeClassLoader(AssertionGenerator.java:234) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.assertion.MutationAssertionGenerator.setupClassLoader(MutationAssertionGenerator.java:188) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.assertion.SimpleMutationAssertionGenerator.addAssertions(SimpleMutationAssertionGenerator.java:57) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGeneratorHelper.addAssertions(TestSuiteGeneratorHelper.java:287) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:542) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:255) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_12_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 21 common frames omitted
[MASTER] 14:50:37.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 14:50:37.899 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONArray jSONArray0 = new JSONArray();
jSONArray0.set(1692, jSONArray0);
jSONArray0.fluentRetainAll(jSONArray0);
assertFalse(jSONArray0.isEmpty());


* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'JSONArray_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'JSONScanner_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 14:51:50.446 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_464_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:544) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:255) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_464_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_464_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.assertion.Assertion.readObject(Assertion.java:255) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.HashSet.readObject(HashSet.java:341) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_464_JavaBeanDeserializer.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 93 common frames omitted
[MASTER] 14:52:04.782 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: not support jsonpath : syntax error, expect [, actual 
[MASTER] 14:52:04.783 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DataTruncation dataTruncation0 = new DataTruncation(30, false, false, 30, 30);
SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("syntax error, expect [, actual ", ":;7rvbt50a=h t", dataTruncation0);
JSONPath.set((Object) dataTruncation0, "syntax error, expect [, actual ", (Object) sQLNonTransientConnectionException0);

[MASTER] 14:52:12.777 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: illeal jsonpath syntax. [K~2
[MASTER] 14:52:12.777 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath.RangeSegment jSONPath_RangeSegment0 = new JSONPath.RangeSegment(447, (-156), 8);
JSONPath.contains((Object) jSONPath_RangeSegment0, "[K~2");

[MASTER] 14:52:21.931 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<90> but was:<84>
[MASTER] 14:52:21.931 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("yL5,O,Wmv1mDFg69#;", "zc@wso@11p a%y{,", 31186);
Map<String, Object> map0 = JSONPath.paths((Object) sQLNonTransientConnectionException0);
assertEquals(90, map0.size());


[MASTER] 14:52:24.511 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: illeal jsonpath syntax. $3a_~=%n7~{}?
[MASTER] 14:52:24.511 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath.size((Object) "Q}", "$3a_~=%n7~{}?");

[MASTER] 14:52:24.836 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StringIndexOutOfBoundsException: String index out of range: 11
[MASTER] 14:52:24.836 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath.eval((Object) "S$HG2PS/N7(", "S$HG2PS/N7(");

[MASTER] 14:52:27.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: expect '], but '.'
[MASTER] 14:52:27.294 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Double double0 = new Double(15);
JSONPath.eval((Object) double0, "[{p.mTgu");

[MASTER] 14:52:46.511 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONException: create asm serializer error, verson 1.2.68, class class java.lang.StackTraceElement
[MASTER] 14:52:46.512 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SQLException sQLException0 = new SQLException();
JSONPath.Operator jSONPath_Operator0 = JSONPath.Operator.NOT_BETWEEN;
JSONPath.DoubleOpSegement jSONPath_DoubleOpSegement0 = new JSONPath.DoubleOpSegement("cast", 1728.215470458, jSONPath_Operator0);
JSONPath.FilterGroup jSONPath_FilterGroup0 = new JSONPath.FilterGroup(jSONPath_DoubleOpSegement0, jSONPath_DoubleOpSegement0, true);
JSONPath jSONPath0 = new JSONPath("cast");
JSONPath.WildCardSegment jSONPath_WildCardSegment0 = JSONPath.WildCardSegment.instance_deep;
JSONPath.WildCardSegment jSONPath_WildCardSegment1 = JSONPath.WildCardSegment.instance;
SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("java/lang/Byte", "cast", 102);
DataTruncation dataTruncation0 = new DataTruncation(4132, true, true, 254, 111);
ArrayList arrayList0 = (ArrayList)jSONPath_WildCardSegment1.eval(jSONPath0, sQLFeatureNotSupportedException0, dataTruncation0);
assertNotNull(arrayList0);

boolean boolean0 = jSONPath_FilterGroup0.apply(jSONPath0, sQLException0, jSONPath_WildCardSegment0, arrayList0);
assertEquals(13, arrayList0.size());
assertFalse(boolean0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing tests to file
* Writing JUnit test case 'JSONPath_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.alibaba.fastjson.JSONWriter
* Starting Client-0
* Connecting to master process on port 9922
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONWriter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 429
* Using seed 1
* Starting evolution
* Initial Number of Goals in DynaMOSA = 130 / 429
* Search finished after 181s and 2121 generations, 911276 statements, best individual has fitness: 32.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 97
* Number of covered goals: 97
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 76
* Number of covered goals: 71
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 148
* Number of covered goals: 146
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 76
* Number of covered goals: 71
* Generated 34 tests with total length 126
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JSONWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s1/fastjson/evosuite-tests
* Done!

* Computation finished
[MASTER] 14:56:16.561 [main] ERROR RuntimeVariable - Obtained invalid goal count: covered 438 out of 429
[MASTER] 14:56:16.562 [main] ERROR SearchStatistics - Not going to write down statistics data, as some data is invalid
[MASTER] 14:56:16.663 [main] ERROR TestGeneration - failed to write statistics data
