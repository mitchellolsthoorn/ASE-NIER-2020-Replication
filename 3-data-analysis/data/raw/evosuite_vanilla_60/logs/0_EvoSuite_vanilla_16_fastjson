* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.JSONArray
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.JSONReader
* Starting Client-0
* Connecting to master process on port 15943
* Starting Client-0
* Connecting to master process on port 15944
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:47:58.727 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:47:58.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
[MASTER] 17:47:58.878 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:47:58.879 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 740
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 232 / 740
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONArray
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1055
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 674 / 1055
[MASTER] 17:48:00.479 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:48:00.481 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:48:01.052 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 17:48:02.702 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 17:48:09.736 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 17:48:10.387 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:48:32.098 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
* Search finished after 62s and 48 generations, 19295 statements, best individual has fitness: 290.0
* Search finished after 65s and 11 generations, 3631 statements, best individual has fitness: 558.0
* Minimizing test suite
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 157
* Number of covered goals: 49
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 115
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 20%
* Total number of goals: 266
* Number of covered goals: 54
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 37
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 68%
* Total number of goals: 25
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 115
* Number of covered goals: 26
* Generated 51 tests with total length 167
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 173
* Number of covered goals: 149
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 101
* Number of covered goals: 82
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 81%
* Total number of goals: 83
* Number of covered goals: 67
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 325
* Number of covered goals: 288
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 219
* Number of covered goals: 91
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 68
* Number of covered goals: 64
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 101
* Number of covered goals: 80
* Generated 145 tests with total length 405
* Resulting test suite's coverage: 79% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 17:49:33.274 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_15_1589989773248/com/alibaba/fastjson/JSONArray_15_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_15_1589989773248/com/alibaba/fastjson/JSONArray_15_tmp__ESTest_scaffolding.java]]
[MASTER] 17:49:33.274 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:49:33.274 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:49:33.277 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<java.lang.reflect.Method> cannot be converted to java.lang.Class<java.util.HashMap<java.util.HashMap,com.alibaba.fastjson.JSONArray>>: 25
[MASTER] 17:49:33.278 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_15_1589989773248/com/alibaba/fastjson/JSONArray_15_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed May 20 15:49:33 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.alibaba.fastjson.JSONArray;
11: import java.lang.reflect.Method;
12: import java.util.HashMap;
13: import java.util.List;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class JSONArray_15_tmp__ESTest extends JSONArray_15_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       JSONArray jSONArray0 = new JSONArray(2022);
24:       Class<Method> class0 = Method.class;
25:       List<HashMap<HashMap, JSONArray>> list0 = jSONArray0.toJavaList((Class<HashMap<HashMap, JSONArray>>) class0);
26:       assertTrue(list0.isEmpty());
27:   }
28: }
RegularFileObject[/tmp/EvoSuite_15_1589989773248/com/alibaba/fastjson/JSONArray_15_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed May 20 15:49:33 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSONArray_15_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSONArray"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONArray_15_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.serializer.JSONSerializable",
89:       "com.alibaba.fastjson.serializer.SerializeWriter",
90:       "com.alibaba.fastjson.serializer.ReferenceCodec",
91:       "com.alibaba.fastjson.JSONException",
92:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
93:       "com.alibaba.fastjson.serializer.ToStringSerializer",
94:       "com.alibaba.fastjson.serializer.SerialContext",
95:       "com.alibaba.fastjson.serializer.AfterFilter",
96:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
97:       "com.alibaba.fastjson.TypeReference",
98:       "com.alibaba.fastjson.serializer.ObjectSerializer",
99:       "com.alibaba.fastjson.serializer.MapSerializer",
100:       "com.alibaba.fastjson.asm.Item",
101:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
102:       "com.alibaba.fastjson.serializer.DateCodec",
103:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
104:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
105:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
106:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
107:       "com.alibaba.fastjson.util.FieldInfo",
108:       "com.alibaba.fastjson.serializer.PropertyFilter",
109:       "com.alibaba.fastjson.annotation.JSONField",
110:       "com.alibaba.fastjson.parser.SymbolTable",
111:       "com.alibaba.fastjson.serializer.NameFilter",
112:       "com.alibaba.fastjson.serializer.ListSerializer",
113:       "com.alibaba.fastjson.JSONArray",
114:       "com.alibaba.fastjson.JSONAware",
115:       "com.alibaba.fastjson.serializer.LongCodec",
116:       "com.alibaba.fastjson.serializer.EnumSerializer",
117:       "com.alibaba.fastjson.util.ASMClassLoader",
118:       "com.alibaba.fastjson.parser.JSONToken",
119:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
120:       "com.alibaba.fastjson.PropertyNamingStrategy",
121:       "com.alibaba.fastjson.serializer.AppendableSerializer",
122:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
123:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
124:       "com.alibaba.fastjson.serializer.ContextValueFilter",
125:       "com.alibaba.fastjson.util.ServiceLoader",
126:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
127:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
128:       "com.alibaba.fastjson.parser.DefaultJSONParser",
129:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
130:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
131:       "com.alibaba.fastjson.serializer.BeanContext",
132:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
133:       "com.alibaba.fastjson.util.IdentityHashMap",
134:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
135:       "com.alibaba.fastjson.JSON",
136:       "com.alibaba.fastjson.serializer.StringCodec",
137:       "com.alibaba.fastjson.serializer.SerializeFilterable",
138:       "com.alibaba.fastjson.JSONWriter",
139:       "com.alibaba.fastjson.asm.Opcodes",
140:       "com.alibaba.fastjson.JSONReader",
141:       "com.alibaba.fastjson.JSONStreamAware",
142:       "com.alibaba.fastjson.asm.MethodWriter",
143:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
144:       "com.alibaba.fastjson.serializer.SerializerFeature",
145:       "com.alibaba.fastjson.serializer.CalendarCodec",
146:       "com.alibaba.fastjson.util.IOUtils",
147:       "com.alibaba.fastjson.util.TypeUtils",
148:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
149:       "com.alibaba.fastjson.spi.Module",
150:       "com.alibaba.fastjson.serializer.MiscCodec",
151:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
152:       "com.alibaba.fastjson.util.IOUtils$1",
153:       "com.alibaba.fastjson.serializer.IntegerCodec",
154:       "com.alibaba.fastjson.serializer.SerializeFilter",
155:       "com.alibaba.fastjson.JSONPObject",
156:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
157:       "com.alibaba.fastjson.serializer.BeforeFilter",
158:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
159:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
160:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
161:       "com.alibaba.fastjson.JSONObject",
162:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
163:       "com.alibaba.fastjson.serializer.CharacterCodec",
164:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
165:       "com.alibaba.fastjson.asm.ByteVector",
166:       "com.alibaba.fastjson.parser.JSONLexer",
167:       "com.alibaba.fastjson.util.ASMClassLoader$1",
168:       "com.alibaba.fastjson.asm.Label",
169:       "com.alibaba.fastjson.asm.FieldWriter",
170:       "com.alibaba.fastjson.serializer.JSONSerializer",
171:       "com.alibaba.fastjson.util.JavaBeanInfo",
172:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
173:       "com.alibaba.fastjson.serializer.SerializeConfig",
174:       "com.alibaba.fastjson.serializer.AtomicCodec",
175:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
176:       "com.alibaba.fastjson.asm.Type",
177:       "com.alibaba.fastjson.serializer.FieldSerializer",
178:       "com.alibaba.fastjson.serializer.FloatCodec",
179:       "com.alibaba.fastjson.parser.JSONReaderScanner",
180:       "com.alibaba.fastjson.serializer.ValueFilter",
181:       "com.alibaba.fastjson.JSONPathException",
182:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
183:       "com.alibaba.fastjson.serializer.Labels",
184:       "com.alibaba.fastjson.serializer.CollectionCodec",
185:       "com.alibaba.fastjson.serializer.CharArrayCodec",
186:       "com.alibaba.fastjson.asm.MethodVisitor",
187:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
188:       "com.alibaba.fastjson.serializer.LabelFilter",
189:       "com.alibaba.fastjson.annotation.JSONType",
190:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
191:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
192:       "com.alibaba.fastjson.serializer.DoubleSerializer",
193:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
194:       "com.alibaba.fastjson.serializer.BooleanCodec",
195:       "com.alibaba.fastjson.parser.Feature",
196:       "com.alibaba.fastjson.parser.ParserConfig",
197:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
198:       "com.alibaba.fastjson.parser.ParseContext"
199:     );
200:   } 
201: 
202:   private static void resetClasses() {
203:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONArray_15_tmp__ESTest_scaffolding.class.getClassLoader()); 
204: 
205:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
206:       "com.alibaba.fastjson.parser.Feature",
207:       "com.alibaba.fastjson.serializer.SerializerFeature",
208:       "com.alibaba.fastjson.util.IOUtils$1",
209:       "com.alibaba.fastjson.util.IOUtils",
210:       "com.alibaba.fastjson.JSON",
211:       "com.alibaba.fastjson.JSONArray",
212:       "com.alibaba.fastjson.util.TypeUtils",
213:       "com.alibaba.fastjson.util.IdentityHashMap",
214:       "com.alibaba.fastjson.util.ASMUtils",
215:       "com.alibaba.fastjson.parser.SymbolTable",
216:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
217:       "com.alibaba.fastjson.util.ASMClassLoader$1",
218:       "com.alibaba.fastjson.util.ASMClassLoader",
219:       "com.alibaba.fastjson.serializer.MiscCodec",
220:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
221:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
222:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
223:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
224:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
225:       "com.alibaba.fastjson.serializer.DateCodec",
226:       "com.alibaba.fastjson.serializer.CalendarCodec",
227:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
228:       "com.alibaba.fastjson.serializer.CollectionCodec",
229:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
230:       "com.alibaba.fastjson.serializer.StringCodec",
231:       "com.alibaba.fastjson.serializer.CharacterCodec",
232:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
233:       "com.alibaba.fastjson.serializer.IntegerCodec",
234:       "com.alibaba.fastjson.serializer.LongCodec",
235:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
236:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
237:       "com.alibaba.fastjson.serializer.FloatCodec",
238:       "com.alibaba.fastjson.serializer.BooleanCodec",
239:       "com.alibaba.fastjson.serializer.CharArrayCodec",
240:       "com.alibaba.fastjson.serializer.ReferenceCodec",
241:       "com.alibaba.fastjson.serializer.AtomicCodec",
242:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
243:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
244:       "com.alibaba.fastjson.parser.ParserConfig",
245:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
246:       "com.alibaba.fastjson.serializer.DoubleSerializer",
247:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
248:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
249:       "com.alibaba.fastjson.serializer.AppendableSerializer",
250:       "com.alibaba.fastjson.serializer.ToStringSerializer",
251:       "com.alibaba.fastjson.serializer.SerializeConfig",
252:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
253:       "com.alibaba.fastjson.parser.DefaultJSONParser",
254:       "com.alibaba.fastjson.parser.JSONLexerBase",
255:       "com.alibaba.fastjson.parser.JSONScanner",
256:       "com.alibaba.fastjson.JSONException",
257:       "com.alibaba.fastjson.parser.JSONToken",
258:       "com.alibaba.fastjson.serializer.SerializeWriter",
259:       "com.alibaba.fastjson.serializer.SerializeFilterable",
260:       "com.alibaba.fastjson.serializer.JSONSerializer",
261:       "com.alibaba.fastjson.util.ServiceLoader",
262:       "com.alibaba.fastjson.serializer.ListSerializer",
263:       "com.alibaba.fastjson.JSONObject",
264:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
265:       "com.alibaba.fastjson.util.FieldInfo",
266:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
267:       "com.alibaba.fastjson.serializer.FieldSerializer",
268:       "com.alibaba.fastjson.serializer.BeanContext",
269:       "com.alibaba.fastjson.serializer.SerialContext",
270:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
271:       "com.alibaba.fastjson.asm.ClassWriter",
272:       "com.alibaba.fastjson.asm.ByteVector",
273:       "com.alibaba.fastjson.asm.Item",
274:       "com.alibaba.fastjson.asm.FieldWriter",
275:       "com.alibaba.fastjson.asm.MethodWriter",
276:       "com.alibaba.fastjson.asm.Type",
277:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
278:       "com.alibaba.fastjson.asm.Label",
279:       "com.alibaba.fastjson.serializer.PascalNameFilter",
280:       "com.alibaba.fastjson.util.UTF8Decoder",
281:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
282:       "com.alibaba.fastjson.serializer.MapSerializer",
283:       "com.alibaba.fastjson.parser.JSONReaderScanner",
284:       "com.alibaba.fastjson.util.JavaBeanInfo",
285:       "com.alibaba.fastjson.asm.ClassReader",
286:       "com.alibaba.fastjson.asm.TypeCollector$1",
287:       "com.alibaba.fastjson.asm.TypeCollector",
288:       "com.alibaba.fastjson.asm.MethodCollector",
289:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
290:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
291:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
292:       "com.alibaba.fastjson.util.RyuFloat",
293:       "com.alibaba.fastjson.serializer.ArraySerializer",
294:       "com.alibaba.fastjson.serializer.EnumerationSerializer",
295:       "com.alibaba.fastjson.serializer.EnumSerializer",
296:       "com.alibaba.fastjson.TypeReference$1",
297:       "com.alibaba.fastjson.TypeReference",
298:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
299:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
300:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer"
301:     );
302:   }
303: }

[MASTER] 17:49:33.278 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
JSONArray jSONArray0 = new JSONArray(2022);
Class<Method> class0 = Method.class;
List<HashMap<HashMap, JSONArray>> list0 = jSONArray0.toJavaList((Class<HashMap<HashMap, JSONArray>>) class0);
assertTrue(list0.isEmpty());


* Writing tests to file
* Writing JUnit test case 'JSONReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
[MASTER] 17:50:02.650 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 17:50:02.651 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONArray jSONArray0 = new JSONArray(781250000);

* Writing tests to file
* Writing JUnit test case 'JSONArray_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.JSONPath
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.parser.DefaultJSONParser
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 15942
* Connecting to master process on port 15943
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:50:38.902 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:50:38.902 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONPath
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 17:50:39.740 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:50:39.743 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.DefaultJSONParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7058
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 865 / 7058
[MASTER] 17:50:40.566 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:50:40.575 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 17:50:40.575 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 17:50:40.575 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumSet<E> : Type points to itself
[MASTER] 17:50:40.575 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashSet<E> : Type points to itself
[MASTER] 17:50:40.576 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 17:50:40.576 [logback-2] ERROR TestCluster - Failed to check cache for java.util.PriorityQueue<E> : Type points to itself
[MASTER] 17:50:40.576 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ServiceLoader<S> : Type points to itself
[MASTER] 17:50:40.577 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Stack<E> : Type points to itself
[MASTER] 17:50:40.577 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 17:50:40.578 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 17:50:40.579 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:50:40.584 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Enum<E> : Type points to itself
[MASTER] 17:50:40.594 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:50:40.595 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Total number of test goals for DYNAMOSA: 3512
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 650 / 3512
[MASTER] 17:50:41.003 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 17:50:41.279 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:50:41.281 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:50:41.300 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayDeque<E> : Type points to itself
[MASTER] 17:50:41.300 [logback-2] ERROR TestCluster - Failed to check cache for java.util.ArrayList<E> : Type points to itself
[MASTER] 17:50:41.302 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumMap<K, V> : Type points to itself
[MASTER] 17:50:41.303 [logback-2] ERROR TestCluster - Failed to check cache for java.util.EnumSet<E> : Type points to itself
[MASTER] 17:50:41.304 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashSet<E> : Type points to itself
[MASTER] 17:50:41.304 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Hashtable<K, V> : Type points to itself
[MASTER] 17:50:41.304 [logback-2] ERROR TestCluster - Failed to check cache for java.util.IdentityHashMap<K, V> : Type points to itself
[MASTER] 17:50:41.304 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashMap<K, V> : Type points to itself
[MASTER] 17:50:41.305 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 17:50:41.307 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Stack<E> : Type points to itself
[MASTER] 17:50:41.308 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeMap<K, V> : Type points to itself
[MASTER] 17:50:41.309 [logback-2] ERROR TestCluster - Failed to check cache for java.util.TreeSet<E> : Type points to itself
[MASTER] 17:50:41.309 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 17:50:51.032 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 17:51:18.485 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 63s and 52 generations, 27134 statements, best individual has fitness: 2170.0
* Minimizing test suite
* Search finished after 65s and 46 generations, 38359 statements, best individual has fitness: 4248.0
[MASTER] 17:51:48.962 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 8 seconds more than allowed.
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 973
* Number of covered goals: 309
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 707
* Number of covered goals: 227
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 47
* Number of covered goals: 47
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 57%
* Total number of goals: 897
* Number of covered goals: 513
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 102
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 63
* Number of covered goals: 62
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 73%
* Total number of goals: 63
* Number of covered goals: 46
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 707
* Number of covered goals: 208
* Generated 125 tests with total length 457
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 48%
* Total number of goals: 2079
* Number of covered goals: 991
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 35%
* Total number of goals: 1850
* Number of covered goals: 646
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 99%
* Total number of goals: 77
* Number of covered goals: 76
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 913
* Number of covered goals: 464
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 114
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 126
* Number of covered goals: 123
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 87%
* Total number of goals: 126
* Number of covered goals: 109
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 32%
* Total number of goals: 1850
* Number of covered goals: 591
* Generated 242 tests with total length 908
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
* Writing tests to file
* Writing JUnit test case 'DefaultJSONParser_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
[MASTER] 17:53:51.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.alibaba.fastjson.parser.DefaultJSONParser but in com.alibaba.fastjson.JSONPath$JSONPathParser.readName(JSONPath.java:1683): org.evosuite.runtime.mock.java.lang.MockThrowable: illeal jsonpath syntax. (;
[MASTER] 17:53:51.191 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath.extract("bf5NM8.g3*<", "(;");

[MASTER] 17:53:52.251 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: not support jsonpath : yxGE%HF;T|
[MASTER] 17:53:52.252 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Locale locale0 = Locale.ENGLISH;
JSONPath.size((Object) locale0, "yxGE%HF;T|");

[MASTER] 17:54:05.748 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONException: toJSON error
[MASTER] 17:54:05.749 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
ParserConfig parserConfig0 = new ParserConfig(classLoader0);
SerializeConfig serializeConfig0 = SerializeConfig.getGlobalInstance();
Map<String, Object> map0 = JSONPath.paths((Object) parserConfig0, serializeConfig0);
assertEquals(9, map0.size());


[MASTER] 17:54:06.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: not support jsonpath : XvMM7"lkJL/_tI4H<le
[MASTER] 17:54:06.616 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONPath jSONPath0 = new JSONPath("not");
String[] stringArray0 = new String[2];
stringArray0[0] = "z";
stringArray0[1] = "XvMM7\"lkJL/_tI4H<le";
JSONPath.reserveToArray(jSONPath0, stringArray0);

[MASTER] 17:54:07.717 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class com.alibaba.fastjson.JSONPathException: not support jsonpath : create asm serializer error, verson 1.2.68, class 
[MASTER] 17:54:07.718 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("uZJiQW:t*`B5 ;%`", "uZJiQW:t*`B5 ;%`", 11);
SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("uZJiQW:t*`B5 ;%`", sQLNonTransientConnectionException0);
SQLDataException sQLDataException0 = new SQLDataException("uZJiQW:t*`B5 ;%`", "uZJiQW:t*`B5 ;%`", 32, sQLTimeoutException0);
JSONPath.set((Object) sQLDataException0, "create asm serializer error, verson 1.2.68, class ", (Object) "create asm serializer error, verson 1.2.68, class ");

[MASTER] 17:54:27.624 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<90> but was:<84>
[MASTER] 17:54:27.625 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SerializeConfig serializeConfig0 = SerializeConfig.getGlobalInstance();
ParserConfig parserConfig0 = ParserConfig.getGlobalInstance();
JSONPath jSONPath0 = new JSONPath("pa", serializeConfig0, parserConfig0);
SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("o+r*jWxA\"", "fastjson.parser.safeMode");
Map<String, Object> map0 = JSONPath.paths((Object) sQLTransactionRollbackException0);
jSONPath0.getArrayItem(map0, 538);
assertEquals(90, map0.size());


[MASTER] 17:54:32.683 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<83> but was:<84>
[MASTER] 17:54:32.683 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SerializeConfig serializeConfig0 = SerializeConfig.getGlobalInstance();
ParserConfig parserConfig0 = ParserConfig.getGlobalInstance();
JSONPath jSONPath0 = new JSONPath("pa", serializeConfig0, parserConfig0);
SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("o+r*jWxA\"", "fastjson.parser.safeMode");
Map<String, Object> map0 = JSONPath.paths((Object) sQLTransactionRollbackException0);
Set<?> set0 = jSONPath0.keySet((Object) map0);
assertNull(set0);
assertEquals(83, map0.size());


* Writing tests to file
* Writing JUnit test case 'JSONPath_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.JSONValidator
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.JSONObject
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.parser.JSONReaderScanner
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.JSONWriter
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 15942
* Starting Client-0
* Connecting to master process on port 15941
* Starting Client-0
* Connecting to master process on port 15944
* Connecting to master process on port 15945
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONWriter
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
* Total number of test goals for DYNAMOSA: 429
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 130 / 429
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONValidator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1127
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 268 / 1127
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.JSONReaderScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1110
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 338 / 1110
[MASTER] 17:54:45.559 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:54:45.561 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSONObject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1211
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 496 / 1211
[MASTER] 17:54:46.706 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:54:46.708 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:54:46.709 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 17:54:46.710 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:54:51.281 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 17:55:17.743 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:55:17.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Search finished after 61s and 723 generations, 262727 statements, best individual has fitness: 30.0
* Minimizing test suite
* Search finished after 62s and 27 generations, 12322 statements, best individual has fitness: 402.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 97
* Number of covered goals: 97
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 76
* Number of covered goals: 71
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 148
* Number of covered goals: 146
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 76
* Number of covered goals: 71
* Generated 28 tests with total length 116
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Minimizing test suite
* Search finished after 62s and 41 generations, 16430 statements, best individual has fitness: 525.0
* Minimizing test suite
* Search finished after 66s and 14 generations, 8494 statements, best individual has fitness: 211.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 156
* Number of covered goals: 127
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 104
* Number of covered goals: 79
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 662
* Number of covered goals: 581
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 40
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 22
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 104
* Number of covered goals: 79
* Generated 63 tests with total length 188
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 254
* Number of covered goals: 153
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 172
* Number of covered goals: 87
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 94%
* Total number of goals: 17
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 333
* Number of covered goals: 192
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 162
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 59
* Number of covered goals: 56
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 59
* Number of covered goals: 54
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 172
* Number of covered goals: 86
* Generated 80 tests with total length 209
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JSONWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
[MASTER] 17:56:02.601 [main] ERROR RuntimeVariable - Obtained invalid goal count: covered 437 out of 429
[MASTER] 17:56:02.602 [main] ERROR SearchStatistics - Not going to write down statistics data, as some data is invalid
[MASTER] 17:56:02.703 [main] ERROR TestGeneration - failed to write statistics data
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 266
* Number of covered goals: 149
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 212
* Number of covered goals: 112
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 375
* Number of covered goals: 319
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 14
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 24
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 88%
* Total number of goals: 24
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 212
* Number of covered goals: 112
* Generated 48 tests with total length 135
* Resulting test suite's coverage: 57% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 17:56:27.743 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 17:56:27.744 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONObject jSONObject0 = new JSONObject(2147483645, false);
jSONObject0.fluentPut("0J\"<,`xxD{I#<E", "6L<");

[MASTER] 17:56:29.720 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<55> but was:<34>
[MASTER] 17:56:29.721 [logback-1] WARN  JUnitAnalyzer - Failing test:
 char[] charArray0 = JSONLexerBase.typeFieldName;
JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1, 455);
int int0 = jSONReaderScanner0.indexOf('Z', 1);
assertTrue(jSONReaderScanner0.isEOF());
assertEquals('7', jSONReaderScanner0.getCurrent());
assertEquals((-1), int0);


* Writing tests to file
* Writing JUnit test case 'JSONObject_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
* Writing tests to file
* Writing JUnit test case 'JSONReaderScanner_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JSONValidator_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.JSON
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.alibaba.fastjson.parser.JSONScanner
* Starting Client-0
* Connecting to master process on port 15940
* Starting Client-0
* Connecting to master process on port 15943
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:57:16.757 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:57:16.758 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.JSON
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2080
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 747 / 2080
[MASTER] 17:57:17.858 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 17:57:17.859 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:57:17.863 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Enum<E> : Type points to itself
[MASTER] 17:57:17.863 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:57:17.864 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
  - /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:57:19.001 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.reflect.Constructor<T> : Type points to itself
[MASTER] 17:57:19.951 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Finished analyzing classpath
* Generating tests for class com.alibaba.fastjson.parser.JSONScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 17:57:20.053 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Total number of test goals for DYNAMOSA: 5652
* Using seed 16
* Starting evolution
* Initial Number of Goals in DynaMOSA = 470 / 5652
[MASTER] 17:57:21.302 [logback-1] WARN  CheapPurityAnalyzer - com.google.common.collect.ArrayListMultimap was not found in the inheritance tree. Using DEFAULT value for cheap-purity analysis
[MASTER] 17:57:21.302 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: com.google.common.collect.ArrayListMultimap
[MASTER] 17:57:31.212 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 17:57:33.879 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.alibaba.fastjson.util.FieldInfo due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
* Search finished after 62s and 67 generations, 42229 statements, best individual has fitness: 764.0
[MASTER] 17:58:19.831 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_4_String.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_4_String.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_4_String.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_4_String.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
[MASTER] 17:58:20.302 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_4_String.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.executedAndThenSendIndividualToMaster(StatisticsSender.java:98) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTests(TestSuiteGenerator.java:687) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:245) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_4_String.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_4_String.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/serializer/ASMSerializer_4_String.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Minimizing test suite
[MASTER] 17:58:24.029 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_3_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsListener.lambda$new$0(StatisticsListener.java:69) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_3_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	... 1 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_3_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_3_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Search finished after 64s and 182 generations, 102310 statements, best individual has fitness: 3586.0
[MASTER] 17:58:25.756 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
	java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_3_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:393) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:283) ~[na:1.8.0_161]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:260) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_161]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_161]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:266) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.executedAndThenSendIndividualToMaster(StatisticsSender.java:98) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTests(TestSuiteGenerator.java:687) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:245) [evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:155) [evosuite.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_161]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]
Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
	java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_3_Object.class' should be in target project, but could not be found!
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:352) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683) ~[na:1.8.0_161]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_161]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ~[na:1.8.0_161]
	... 3 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_3_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:203) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.instrumentation.InstrumentingClassLoader.loadClass(InstrumentingClassLoader.java:168) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:149) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.getClass(GenericClass.java:115) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at org.evosuite.utils.generic.GenericClass.readObject(GenericClass.java:1720) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:556) ~[na:1.8.0_161]
	at org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103) ~[evosuite.jar:1.0.7-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at java.util.ArrayList.readObject(ArrayList.java:797) ~[na:1.8.0_161]
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2168) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2277) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2201) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2059) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1566) ~[na:1.8.0_161]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:426) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:322) ~[na:1.8.0_161]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:341) ~[na:1.8.0_161]
	... 12 common frames omitted
Caused by: java.lang.ClassNotFoundException: Class 'com/alibaba/fastjson/parser/deserializer/FastjsonASMDeserializer_3_Object.class' should be in target project, but could not be found!
	at org.evosuite.instrumentation.InstrumentingClassLoader.instrumentClass(InstrumentingClassLoader.java:190) ~[evosuite.jar:1.0.7-SNAPSHOT]
	... 74 common frames omitted
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 76%
* Total number of goals: 435
* Number of covered goals: 332
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 71%
* Total number of goals: 283
* Number of covered goals: 201
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 86
* Number of covered goals: 86
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 716
* Number of covered goals: 482
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 197
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 83
* Number of covered goals: 76
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 71%
* Total number of goals: 83
* Number of covered goals: 59
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 283
* Number of covered goals: 177
* Generated 177 tests with total length 759
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
* Coverage of criterion LINE: 37%
* Total number of goals: 1857
* Number of covered goals: 693
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 1519
* Number of covered goals: 489
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 567
* Number of covered goals: 315
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 94
* Number of covered goals: 57
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 48
* Number of covered goals: 47
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 1519
* Number of covered goals: 435
* Generated 206 tests with total length 531
* Resulting test suite's coverage: 59% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 17:58:58.631 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_140_1589990338609/com/alibaba/fastjson/JSON_140_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_140_1589990338609/com/alibaba/fastjson/JSON_140_tmp__ESTest_scaffolding.java]]
[MASTER] 17:58:58.631 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar:/home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:58:58.631 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/apaniche/mitchell/generation-scripts/evosuite.jar:/home/apaniche/mitchell/generation-scripts/projects/fastjson/fastjson-1.2.68.jar
[MASTER] 17:58:58.634 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Class<com.alibaba.fastjson.JSONArray> cannot be converted to java.lang.Class<java.lang.reflect.Constructor<java.util.LinkedList>>: 28
[MASTER] 17:58:58.635 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_140_1589990338609/com/alibaba/fastjson/JSON_140_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed May 20 15:58:58 GMT 2020
4:  */
5: 
6: package com.alibaba.fastjson;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.alibaba.fastjson.JSONArray;
12: import com.alibaba.fastjson.JSONObject;
13: import java.lang.reflect.Constructor;
14: import java.util.LinkedList;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class JSON_140_tmp__ESTest extends JSON_140_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       JSONObject jSONObject0 = new JSONObject(false);
25:       Class<JSONArray> class0 = JSONArray.class;
26:       // Undeclared exception!
27:       try { 
28:         jSONObject0.toJavaObject((Class<Constructor<LinkedList>>) class0);
29:         fail("Expecting exception: RuntimeException");
30:       
31:       } catch(RuntimeException e) {
32:          //
33:          // can not get javaBeanDeserializer. com.alibaba.fastjson.JSONArray
34:          //
35:          verifyException("com.alibaba.fastjson.util.TypeUtils", e);
36:       }
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_140_1589990338609/com/alibaba/fastjson/JSON_140_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed May 20 15:58:58 GMT 2020
5:  */
6: 
7: package com.alibaba.fastjson;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JSON_140_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.alibaba.fastjson.JSON"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
76:     java.lang.System.setProperty("user.dir", "/home/apaniche/mitchell/generation-scripts/projects/fastjson"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSON_140_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.alibaba.fastjson.asm.ClassWriter",
82:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
83:       "com.alibaba.fastjson.util.ASMUtils",
84:       "com.alibaba.fastjson.JSONPath",
85:       "com.alibaba.fastjson.parser.JSONScanner",
86:       "com.alibaba.fastjson.parser.JSONLexerBase",
87:       "com.alibaba.fastjson.parser.deserializer.ParseProcess",
88:       "com.alibaba.fastjson.parser.deserializer.FieldTypeResolver",
89:       "com.alibaba.fastjson.parser.ParserConfig$AutoTypeCheckHandler",
90:       "com.alibaba.fastjson.serializer.JSONSerializable",
91:       "com.alibaba.fastjson.serializer.SerializeWriter",
92:       "com.alibaba.fastjson.serializer.ReferenceCodec",
93:       "com.alibaba.fastjson.JSONException",
94:       "com.alibaba.fastjson.asm.TypeCollector$1",
95:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
96:       "com.alibaba.fastjson.serializer.ToStringSerializer",
97:       "com.alibaba.fastjson.serializer.SerialContext",
98:       "com.alibaba.fastjson.JSONPath$FilterGroup",
99:       "com.alibaba.fastjson.parser.deserializer.ResolveFieldDeserializer",
100:       "com.alibaba.fastjson.serializer.AfterFilter",
101:       "com.alibaba.fastjson.JSONValidator$Type",
102:       "com.alibaba.fastjson.TypeReference",
103:       "com.alibaba.fastjson.serializer.ObjectSerializer",
104:       "com.alibaba.fastjson.asm.Item",
105:       "com.alibaba.fastjson.serializer.MapSerializer",
106:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
107:       "com.alibaba.fastjson.serializer.DateCodec",
108:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
109:       "com.alibaba.fastjson.parser.deserializer.ExtraTypeProvider",
110:       "com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask",
111:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
112:       "com.alibaba.fastjson.JSONPath$Filter",
113:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
114:       "com.alibaba.fastjson.JSONValidator$UTF16Validator",
115:       "com.alibaba.fastjson.util.FieldInfo",
116:       "com.alibaba.fastjson.annotation.JSONField",
117:       "com.alibaba.fastjson.serializer.PropertyFilter",
118:       "com.alibaba.fastjson.parser.SymbolTable",
119:       "com.alibaba.fastjson.serializer.NameFilter",
120:       "com.alibaba.fastjson.serializer.ListSerializer",
121:       "com.alibaba.fastjson.JSONArray",
122:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
123:       "com.alibaba.fastjson.JSONAware",
124:       "com.alibaba.fastjson.serializer.LongCodec",
125:       "com.alibaba.fastjson.serializer.EnumSerializer",
126:       "com.alibaba.fastjson.util.ASMClassLoader",
127:       "com.alibaba.fastjson.PropertyNamingStrategy",
128:       "com.alibaba.fastjson.parser.JSONToken",
129:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
130:       "com.alibaba.fastjson.serializer.AppendableSerializer",
131:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
132:       "com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer",
133:       "com.alibaba.fastjson.serializer.ContextValueFilter",
134:       "com.alibaba.fastjson.util.ServiceLoader",
135:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
136:       "com.alibaba.fastjson.JSONPath$FilterSegment",
137:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer",
138:       "com.alibaba.fastjson.parser.DefaultJSONParser",
139:       "com.alibaba.fastjson.serializer.ContextObjectSerializer",
140:       "com.alibaba.fastjson.JSONValidator$ReaderValidator",
141:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
142:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
143:       "com.alibaba.fastjson.serializer.BeanContext",
144:       "com.alibaba.fastjson.serializer.AutowiredObjectSerializer",
145:       "com.alibaba.fastjson.util.IdentityHashMap",
146:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
147:       "com.alibaba.fastjson.JSON",
148:       "com.alibaba.fastjson.serializer.StringCodec",
149:       "com.alibaba.fastjson.serializer.SerializeFilterable",
150:       "com.alibaba.fastjson.JSONWriter",
151:       "com.alibaba.fastjson.asm.Opcodes",
152:       "com.alibaba.fastjson.JSONReader",
153:       "com.alibaba.fastjson.JSONStreamAware",
154:       "com.alibaba.fastjson.asm.MethodWriter",
155:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
156:       "com.alibaba.fastjson.serializer.SerializerFeature",
157:       "com.alibaba.fastjson.JSONPath$Operator",
158:       "com.alibaba.fastjson.TypeReference$1",
159:       "com.alibaba.fastjson.serializer.CalendarCodec",
160:       "com.alibaba.fastjson.util.IOUtils",
161:       "com.alibaba.fastjson.util.TypeUtils",
162:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
163:       "com.alibaba.fastjson.asm.ClassReader",
164:       "com.alibaba.fastjson.JSONPath$Segment",
165:       "com.alibaba.fastjson.spi.Module",
166:       "com.alibaba.fastjson.JSONValidator",
167:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
168:       "com.alibaba.fastjson.serializer.MiscCodec",
169:       "com.alibaba.fastjson.util.IOUtils$1",
170:       "com.alibaba.fastjson.serializer.IntegerCodec",
171:       "com.alibaba.fastjson.serializer.SerializeFilter",
172:       "com.alibaba.fastjson.JSONPObject",
173:       "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
174:       "com.alibaba.fastjson.serializer.PascalNameFilter",
175:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessor",
176:       "com.alibaba.fastjson.serializer.BeforeFilter",
177:       "com.alibaba.fastjson.parser.deserializer.ExtraProcessable",
178:       "com.alibaba.fastjson.serializer.ArraySerializer",
179:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
180:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
181:       "com.alibaba.fastjson.JSONObject",
182:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
183:       "com.alibaba.fastjson.serializer.CharacterCodec",
184:       "com.alibaba.fastjson.asm.TypeCollector",
185:       "com.alibaba.fastjson.parser.deserializer.ObjectDeserializer",
186:       "com.alibaba.fastjson.asm.ByteVector",
187:       "com.alibaba.fastjson.parser.JSONLexer",
188:       "com.alibaba.fastjson.util.ASMClassLoader$1",
189:       "com.alibaba.fastjson.asm.Label",
190:       "com.alibaba.fastjson.JSONValidator$UTF8Validator",
191:       "com.alibaba.fastjson.asm.FieldWriter",
192:       "com.alibaba.fastjson.serializer.JSONSerializer",
193:       "com.alibaba.fastjson.util.JavaBeanInfo",
194:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
195:       "com.alibaba.fastjson.serializer.SerializeConfig",
196:       "com.alibaba.fastjson.serializer.AtomicCodec",
197:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
198:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
199:       "com.alibaba.fastjson.asm.Type",
200:       "com.alibaba.fastjson.serializer.FieldSerializer",
201:       "com.alibaba.fastjson.serializer.FloatCodec",
202:       "com.alibaba.fastjson.parser.JSONReaderScanner",
203:       "com.alibaba.fastjson.serializer.ValueFilter",
204:       "com.alibaba.fastjson.JSONPathException",
205:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
206:       "com.alibaba.fastjson.serializer.Labels",
207:       "com.alibaba.fastjson.serializer.CollectionCodec",
208:       "com.alibaba.fastjson.parser.deserializer.PropertyProcessable",
209:       "com.alibaba.fastjson.serializer.CharArrayCodec",
210:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
211:       "com.alibaba.fastjson.asm.MethodVisitor",
212:       "com.alibaba.fastjson.annotation.JSONCreator",
213:       "com.alibaba.fastjson.asm.MethodCollector",
214:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
215:       "com.alibaba.fastjson.serializer.LabelFilter",
216:       "com.alibaba.fastjson.annotation.JSONType",
217:       "com.alibaba.fastjson.util.UTF8Decoder",
218:       "com.alibaba.fastjson.JSONValidator$UTF8InputStreamValidator",
219:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
220:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
221:       "com.alibaba.fastjson.serializer.DoubleSerializer",
222:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
223:       "com.alibaba.fastjson.serializer.BooleanCodec",
224:       "com.alibaba.fastjson.parser.Feature",
225:       "com.alibaba.fastjson.parser.ParserConfig",
226:       "com.alibaba.fastjson.serializer.PropertyPreFilter",
227:       "com.alibaba.fastjson.parser.ParseContext"
228:     );
229:   } 
230: 
231:   private static void resetClasses() {
232:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSON_140_tmp__ESTest_scaffolding.class.getClassLoader()); 
233: 
234:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
235:       "com.alibaba.fastjson.parser.Feature",
236:       "com.alibaba.fastjson.serializer.SerializerFeature",
237:       "com.alibaba.fastjson.util.IOUtils$1",
238:       "com.alibaba.fastjson.util.IOUtils",
239:       "com.alibaba.fastjson.JSON",
240:       "com.alibaba.fastjson.util.IdentityHashMap",
241:       "com.alibaba.fastjson.util.ASMUtils",
242:       "com.alibaba.fastjson.parser.SymbolTable",
243:       "com.alibaba.fastjson.util.TypeUtils",
244:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory",
245:       "com.alibaba.fastjson.util.ASMClassLoader$1",
246:       "com.alibaba.fastjson.util.ASMClassLoader",
247:       "com.alibaba.fastjson.serializer.MiscCodec",
248:       "com.alibaba.fastjson.util.IdentityHashMap$Entry",
249:       "com.alibaba.fastjson.parser.deserializer.ContextObjectDeserializer",
250:       "com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer",
251:       "com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer",
252:       "com.alibaba.fastjson.parser.deserializer.TimeDeserializer",
253:       "com.alibaba.fastjson.serializer.DateCodec",
254:       "com.alibaba.fastjson.serializer.CalendarCodec",
255:       "com.alibaba.fastjson.parser.deserializer.MapDeserializer",
256:       "com.alibaba.fastjson.serializer.CollectionCodec",
257:       "com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer",
258:       "com.alibaba.fastjson.serializer.StringCodec",
259:       "com.alibaba.fastjson.serializer.CharacterCodec",
260:       "com.alibaba.fastjson.parser.deserializer.NumberDeserializer",
261:       "com.alibaba.fastjson.serializer.IntegerCodec",
262:       "com.alibaba.fastjson.serializer.LongCodec",
263:       "com.alibaba.fastjson.serializer.BigIntegerCodec",
264:       "com.alibaba.fastjson.serializer.BigDecimalCodec",
265:       "com.alibaba.fastjson.serializer.FloatCodec",
266:       "com.alibaba.fastjson.serializer.BooleanCodec",
267:       "com.alibaba.fastjson.serializer.CharArrayCodec",
268:       "com.alibaba.fastjson.serializer.ReferenceCodec",
269:       "com.alibaba.fastjson.serializer.AtomicCodec",
270:       "com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer",
271:       "com.alibaba.fastjson.parser.deserializer.JSONPDeserializer",
272:       "com.alibaba.fastjson.parser.ParserConfig",
273:       "com.alibaba.fastjson.serializer.ASMSerializerFactory",
274:       "com.alibaba.fastjson.serializer.DoubleSerializer",
275:       "com.alibaba.fastjson.serializer.PrimitiveArraySerializer",
276:       "com.alibaba.fastjson.serializer.ObjectArrayCodec",
277:       "com.alibaba.fastjson.serializer.AppendableSerializer",
278:       "com.alibaba.fastjson.serializer.ToStringSerializer",
279:       "com.alibaba.fastjson.serializer.SerializeConfig",
280:       "com.alibaba.fastjson.JSONArray",
281:       "com.alibaba.fastjson.parser.DefaultJSONParser",
282:       "com.alibaba.fastjson.parser.JSONLexerBase",
283:       "com.alibaba.fastjson.parser.JSONScanner",
284:       "com.alibaba.fastjson.JSONException",
285:       "com.alibaba.fastjson.serializer.SimplePropertyPreFilter",
286:       "com.alibaba.fastjson.parser.JSONToken",
287:       "com.alibaba.fastjson.serializer.SerializeWriter",
288:       "com.alibaba.fastjson.serializer.SerializeFilterable",
289:       "com.alibaba.fastjson.serializer.JSONSerializer",
290:       "com.alibaba.fastjson.JSONObject",
291:       "com.alibaba.fastjson.PropertyNamingStrategy",
292:       "com.alibaba.fastjson.JSONPObject",
293:       "com.alibaba.fastjson.util.ServiceLoader",
294:       "com.alibaba.fastjson.serializer.JSONSerializableSerializer",
295:       "com.alibaba.fastjson.serializer.JavaBeanSerializer",
296:       "com.alibaba.fastjson.serializer.SerializeBeanInfo",
297:       "com.alibaba.fastjson.util.FieldInfo",
298:       "com.alibaba.fastjson.serializer.FieldSerializer",
299:       "com.alibaba.fastjson.serializer.BeanContext",
300:       "com.alibaba.fastjson.util.GenericArrayTypeImpl",
301:       "com.alibaba.fastjson.serializer.FieldSerializer$RuntimeSerializerInfo",
302:       "com.alibaba.fastjson.util.JavaBeanInfo",
303:       "com.alibaba.fastjson.serializer.MapSerializer",
304:       "com.alibaba.fastjson.serializer.SerialContext",
305:       "com.alibaba.fastjson.util.UTF8Decoder",
306:       "com.alibaba.fastjson.asm.ClassWriter",
307:       "com.alibaba.fastjson.asm.ByteVector",
308:       "com.alibaba.fastjson.asm.Item",
309:       "com.alibaba.fastjson.asm.MethodWriter",
310:       "com.alibaba.fastjson.serializer.ASMSerializerFactory$Context",
311:       "com.alibaba.fastjson.asm.Label",
312:       "com.alibaba.fastjson.serializer.EnumSerializer",
313:       "com.alibaba.fastjson.PropertyNamingStrategy$1",
314:       "com.alibaba.fastjson.asm.FieldWriter",
315:       "com.alibaba.fastjson.asm.Type",
316:       "com.alibaba.fastjson.parser.JSONReaderScanner",
317:       "com.alibaba.fastjson.parser.ParseContext",
318:       "com.alibaba.fastjson.serializer.PascalNameFilter",
319:       "com.alibaba.fastjson.serializer.ListSerializer",
320:       "com.alibaba.fastjson.asm.ClassReader",
321:       "com.alibaba.fastjson.asm.TypeCollector$1",
322:       "com.alibaba.fastjson.asm.TypeCollector",
323:       "com.alibaba.fastjson.asm.MethodCollector",
324:       "com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer",
325:       "com.alibaba.fastjson.parser.deserializer.FieldDeserializer",
326:       "com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer",
327:       "com.alibaba.fastjson.TypeReference$1",
328:       "com.alibaba.fastjson.TypeReference",
329:       "com.alibaba.fastjson.util.ParameterizedTypeImpl",
330:       "com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context",
331:       "com.alibaba.fastjson.JSONObject$SecureObjectInputStream",
332:       "com.alibaba.fastjson.serializer.ArraySerializer",
333:       "com.alibaba.fastjson.parser.deserializer.EnumDeserializer",
334:       "com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer"
335:     );
336:   }
337: }

[MASTER] 17:58:58.636 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
JSONObject jSONObject0 = new JSONObject(false);
Class<JSONArray> class0 = JSONArray.class;
jSONObject0.toJavaObject((Class<Constructor<LinkedList>>) class0);

[MASTER] 17:59:23.131 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to java.util.LinkedHashMap
[MASTER] 17:59:23.131 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SerializeConfig serializeConfig0 = SerializeConfig.getGlobalInstance();
LinkedHashMap<PropertyNamingStrategy, Object> linkedHashMap0 = new LinkedHashMap<PropertyNamingStrategy, Object>();
LinkedHashMap linkedHashMap1 = (LinkedHashMap)JSON.toJSON((Object) linkedHashMap0, serializeConfig0);
assertEquals(3089, JSON.DEFAULT_GENERATE_FEATURE);


[MASTER] 17:59:36.223 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to java.util.TreeMap
[MASTER] 17:59:36.224 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SerializeConfig serializeConfig0 = SerializeConfig.globalInstance;
TreeMap<JSONObject, PascalNameFilter> treeMap0 = new TreeMap<JSONObject, PascalNameFilter>();
TreeMap treeMap1 = (TreeMap)JSON.toJSON((Object) treeMap0, serializeConfig0);
assertEquals(989, JSON.DEFAULT_PARSER_FEATURE);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'JSON_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 18:00:46.096 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: StringIndexOutOfBoundsException
[MASTER] 18:00:46.096 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONScanner jSONScanner0 = new JSONScanner("");
char[] charArray0 = new char[0];
Class<Object> class0 = Object.class;
jSONScanner0.scanFieldStringArray(charArray0, class0);

[MASTER] 18:00:47.456 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: StringIndexOutOfBoundsException
[MASTER] 18:00:47.456 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JSONScanner jSONScanner0 = new JSONScanner("");
jSONScanner0.next();
ParserConfig parserConfig0 = new ParserConfig();
jSONScanner0.scanTypeName(parserConfig0.symbolTable);

* Writing tests to file
* Writing JUnit test case 'JSONScanner_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s16/fastjson/evosuite-tests
* Done!

* Computation finished
