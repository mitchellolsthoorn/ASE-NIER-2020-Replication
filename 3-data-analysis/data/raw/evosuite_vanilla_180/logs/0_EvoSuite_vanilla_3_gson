* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.stream.JsonReader
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.internal.bind.JsonTreeWriter
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.JsonElement
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.stream.JsonWriter
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 11495
* Connecting to master process on port 11496
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 11498
* Connecting to master process on port 11497
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonElement
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.bind.JsonTreeWriter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class com.google.gson.stream.JsonWriter
* Total number of test goals for DYNAMOSA: 265
* Using seed 3
* Starting evolution
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 443
* Using seed 3
* Starting evolution
* Initial Number of Goals in DynaMOSA = 183 / 265
* Initial Number of Goals in DynaMOSA = 202 / 443
* Total number of test goals for DYNAMOSA: 1024
* Using seed 3
* Starting evolution
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Initial Number of Goals in DynaMOSA = 410 / 1024
* Finished analyzing classpath
* Generating tests for class com.google.gson.stream.JsonReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2813
* Using seed 3
* Starting evolution
* Initial Number of Goals in DynaMOSA = 438 / 2813
* Search finished after 181s and 2498 generations, 480391 statements, best individual has fitness: 54.0
* Minimizing test suite
* Search finished after 182s and 1449 generations, 525170 statements, best individual has fitness: 114.0
* Search finished after 182s and 1213 generations, 148269 statements, best individual has fitness: 99.0
* Minimizing test suite
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 36
* Number of covered goals: 34
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 124
* Number of covered goals: 70
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 22
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Generated 85 tests with total length 207
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 83
* Number of covered goals: 79
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 74
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 87
* Number of covered goals: 78
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 93
* Number of covered goals: 80
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 74
* Number of covered goals: 67
* Generated 60 tests with total length 209
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 185s and 657 generations, 169116 statements, best individual has fitness: 871.0
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 179
* Number of covered goals: 173
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 117
* Number of covered goals: 106
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 468
* Number of covered goals: 419
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 87%
* Total number of goals: 97
* Number of covered goals: 84
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 117
* Number of covered goals: 98
* Generated 73 tests with total length 353
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonTreeWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 44%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 671
* Number of covered goals: 493
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 72%
* Total number of goals: 677
* Number of covered goals: 485
* Coverage analysis for criterion EXCEPTION
* Writing tests to file
* Writing JUnit test case 'JsonWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 76
* Number of covered goals: 76
* Coverage analysis for criterion WEAKMUTATION
* Done!

* Computation finished
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 709
* Number of covered goals: 439
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 35
* Number of covered goals: 17
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 22
* Number of covered goals: 19
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 677
* Number of covered goals: 479
* Generated 161 tests with total length 602
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 17:55:43.627 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 17:55:43.628 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsonArray jsonArray0 = new JsonArray();
jsonArray0.add((JsonElement) jsonArray0);
jsonArray0.getAsNumber();

* Writing tests to file
* Writing JUnit test case 'JsonElement_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.JsonPrimitive
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.internal.LinkedHashTreeMap
* Starting Client-0
* Connecting to master process on port 11494
* Starting Client-0
* Connecting to master process on port 11499
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonPrimitive
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 433
* Using seed 3
* Starting evolution
* Initial Number of Goals in DynaMOSA = 165 / 433
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.LinkedHashTreeMap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1627
* Using seed 3
* Starting evolution
* Initial Number of Goals in DynaMOSA = 578 / 1627
[MASTER] 17:57:04.403 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:57:04.404 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 17:57:26.575 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:58:24.716 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
* Search finished after 185s and 323 generations, 94214 statements, best individual has fitness: 59.0
* Search finished after 183s and 34 generations, 26261 statements, best individual has fitness: 788.0
* Minimizing test suite
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 62
* Number of covered goals: 60
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 77
* Number of covered goals: 70
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 91
* Number of covered goals: 79
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 79%
* Total number of goals: 82
* Number of covered goals: 65
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 77
* Number of covered goals: 70
* Generated 76 tests with total length 234
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 45%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 61%
* Total number of goals: 387
* Number of covered goals: 236
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 50%
* Total number of goals: 262
* Number of covered goals: 132
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 588
* Number of covered goals: 308
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 34
* Number of covered goals: 17
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 47
* Number of covered goals: 42
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 89%
* Total number of goals: 47
* Number of covered goals: 42
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 262
* Number of covered goals: 131
* Generated 59 tests with total length 262
* Resulting test suite's coverage: 48% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonPrimitive_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
* Writing tests to file
* Writing JUnit test case 'LinkedHashTreeMap_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.JsonArray
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.internal.bind.JsonTreeReader
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.JsonObject
* Starting Client-0
* Connecting to master process on port 11497
* Starting Client-0
* Connecting to master process on port 11498
* Starting Client-0
* Connecting to master process on port 11499
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonArray
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 427
* Using seed 3
* Starting evolution
* Initial Number of Goals in DynaMOSA = 249 / 427
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonObject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 221
* Using seed 3
* Starting evolution
* Initial Number of Goals in DynaMOSA = 142 / 221
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.bind.JsonTreeReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 18:03:35.674 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 18:03:35.679 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Total number of test goals for DYNAMOSA: 830
* Using seed 3
* Starting evolution
* Initial Number of Goals in DynaMOSA = 253 / 830
[MASTER] 18:03:36.019 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 18:03:36.020 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 181s and 356 generations, 63801 statements, best individual has fitness: 92.0
* Search finished after 181s and 1519 generations, 228482 statements, best individual has fitness: 47.0
* Minimizing test suite
* Search finished after 182s and 1759 generations, 395751 statements, best individual has fitness: 137.0
* Minimizing test suite
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 162
* Number of covered goals: 152
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 103
* Number of covered goals: 94
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 397
* Number of covered goals: 331
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 103
* Number of covered goals: 94
* Generated 79 tests with total length 311
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Compiling and checking tests
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 82
* Number of covered goals: 43
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Generated 37 tests with total length 102
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 94%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 42
* Number of covered goals: 42
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 70
* Number of covered goals: 68
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 109
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 30
* Number of covered goals: 29
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 91 tests with total length 298
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 84%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonObject_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
* Writing tests to file
* Writing JUnit test case 'JsonTreeReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
[MASTER] 18:07:12.940 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 18:07:12.941 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsonArray jsonArray0 = new JsonArray(2147483645);

* Writing tests to file
* Writing JUnit test case 'JsonArray_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_vanilla
* Going to generate test cases for class: com.google.gson.Gson
* Starting Client-0
* Connecting to master process on port 11493
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.Gson
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 991
* Using seed 3
* Starting evolution
* Initial Number of Goals in DynaMOSA = 599 / 991
[MASTER] 18:10:51.556 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 18:10:51.586 [logback-2] ERROR TestCluster - Failed to check cache for com.google.gson.Gson.FutureTypeAdapter<T> : Type points to itself
* Search finished after 184s and 101 generations, 32795 statements, best individual has fitness: 235.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 333
* Number of covered goals: 289
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 113
* Number of covered goals: 96
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 292
* Number of covered goals: 220
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 70
* Number of covered goals: 41
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 35
* Number of covered goals: 34
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 35
* Number of covered goals: 32
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 113
* Number of covered goals: 90
* Generated 92 tests with total length 349
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:16:01.685 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8769333333333333% of time used, but only 32/92 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 20
* Writing tests to file
* Writing JUnit test case 'Gson_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_vanilla/tests/s3/gson/evosuite-tests
* Done!

* Computation finished
