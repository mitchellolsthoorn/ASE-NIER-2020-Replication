* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.Gson
* Starting Client-0
* Connecting to master process on port 8705
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.Gson
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 991
* Using seed 5
* Starting evolution
* Initial Number of Goals in DynaMOSA = 599 / 991
[MASTER] 00:40:08.467 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 00:40:08.469 [logback-2] ERROR TestCluster - Failed to check cache for com.google.gson.Gson.FutureTypeAdapter<T> : Type points to itself
* Search finished after 121s and 102 generations, 31037 statements, best individual has fitness: 257.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 333
* Number of covered goals: 281
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 113
* Number of covered goals: 91
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 51
* Number of covered goals: 51
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 292
* Number of covered goals: 213
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 60%
* Total number of goals: 70
* Number of covered goals: 42
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 35
* Number of covered goals: 34
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 35
* Number of covered goals: 32
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 113
* Number of covered goals: 86
* Generated 88 tests with total length 346
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 14
* Writing tests to file
* Writing JUnit test case 'Gson_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.JsonObject
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.internal.bind.JsonTreeReader
* Starting Client-0
* Connecting to master process on port 8707
* Starting Client-0
* Connecting to master process on port 8709
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonObject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 221
* Using seed 5
* Starting evolution
* Initial Number of Goals in DynaMOSA = 142 / 221
[MASTER] 00:43:58.609 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 00:43:58.609 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.bind.JsonTreeReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 830
* Using seed 5
* Starting evolution
* Initial Number of Goals in DynaMOSA = 253 / 830
[MASTER] 00:43:59.443 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 00:43:59.443 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 121s and 1031 generations, 144249 statements, best individual has fitness: 45.0
* Minimizing test suite
* Search finished after 121s and 1308 generations, 303821 statements, best individual has fitness: 169.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 82
* Number of covered goals: 44
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Generated 36 tests with total length 99
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 88%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 162
* Number of covered goals: 150
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 103
* Number of covered goals: 92
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 397
* Number of covered goals: 303
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 103
* Number of covered goals: 92
* Generated 76 tests with total length 280
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonObject_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* Writing tests to file
* Writing JUnit test case 'JsonTreeReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.stream.JsonReader
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.JsonPrimitive
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.internal.bind.JsonTreeWriter
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.internal.LinkedHashTreeMap
* Starting Client-0
* Starting Client-0
* Starting Client-0
* Connecting to master process on port 8708
* Connecting to master process on port 8709
* Starting Client-0
* Connecting to master process on port 8706
* Connecting to master process on port 8710
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonPrimitive
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.bind.JsonTreeWriter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 433
* Using seed 5
* Starting evolution
* Initial Number of Goals in DynaMOSA = 165 / 433
* Total number of test goals for DYNAMOSA: 443
* Using seed 5
* Starting evolution
* Initial Number of Goals in DynaMOSA = 202 / 443
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.LinkedHashTreeMap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class com.google.gson.stream.JsonReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1627
* Using seed 5
* Starting evolution
* Initial Number of Goals in DynaMOSA = 578 / 1627
* Total number of test goals for DYNAMOSA: 2813
* Using seed 5
* Starting evolution
[MASTER] 00:50:52.017 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 00:50:52.018 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Initial Number of Goals in DynaMOSA = 438 / 2813
[MASTER] 00:51:03.622 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 121s and 1481 generations, 287853 statements, best individual has fitness: 54.0
* Minimizing test suite
* Search finished after 122s and 18 generations, 15494 statements, best individual has fitness: 621.0
* Search finished after 123s and 511 generations, 162362 statements, best individual has fitness: 57.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 83
* Number of covered goals: 79
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 74
* Number of covered goals: 67
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 87
* Number of covered goals: 78
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 93
* Number of covered goals: 80
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 74
* Number of covered goals: 67
* Generated 62 tests with total length 208
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 432 generations, 113684 statements, best individual has fitness: 708.0
* Minimizing test suite
* Resulting test suite's mutation score: 51%
* Compiling and checking tests
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 61%
* Total number of goals: 387
* Number of covered goals: 238
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 262
* Number of covered goals: 134
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 65%
* Total number of goals: 588
* Number of covered goals: 384
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 34
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 47
* Number of covered goals: 42
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 87%
* Total number of goals: 47
* Number of covered goals: 41
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 51%
* Total number of goals: 262
* Number of covered goals: 134
* Generated 57 tests with total length 227
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Writing tests to file
* Writing JUnit test case 'JsonTreeWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 671
* Number of covered goals: 541
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 677
* Number of covered goals: 529
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 78
* Number of covered goals: 78
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 70%
* Total number of goals: 709
* Number of covered goals: 493
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 35
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 22
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 677
* Number of covered goals: 524
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 62
* Number of covered goals: 60
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 77
* Number of covered goals: 70
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 91
* Number of covered goals: 79
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 82%
* Total number of goals: 82
* Number of covered goals: 67
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 77
* Number of covered goals: 70
* Generated 174 tests with total length 638
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Generated 77 tests with total length 225
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'LinkedHashTreeMap_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* Writing tests to file
* Writing JUnit test case 'JsonPrimitive_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonReader_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.JsonElement
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.JsonArray
* Starting Client-0
* Connecting to master process on port 8705
* Starting Client-0
* Connecting to master process on port 8706
* Analyzing classpath: 
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonElement
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 265
* Using seed 5
* Starting evolution
* Finished analyzing classpath
* Generating tests for class com.google.gson.JsonArray
* Initial Number of Goals in DynaMOSA = 183 / 265
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 427
* Using seed 5
* Starting evolution
* Initial Number of Goals in DynaMOSA = 249 / 427
* Search finished after 122s and 54 generations, 9570 statements, best individual has fitness: 103.0
* Search finished after 123s and 813 generations, 99145 statements, best individual has fitness: 102.0
* Minimizing test suite
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 72
* Number of covered goals: 72
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 70
* Number of covered goals: 68
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 36%
* Total number of goals: 109
* Number of covered goals: 39
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 87%
* Total number of goals: 30
* Number of covered goals: 26
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 66 tests with total length 203
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 73%
* Compiling and checking tests
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 36
* Number of covered goals: 34
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 95%
* Total number of goals: 42
* Number of covered goals: 40
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 124
* Number of covered goals: 66
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 22
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Generated 86 tests with total length 216
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:56:35.392 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 00:56:35.392 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsonArray jsonArray0 = new JsonArray(2147483645);

* Writing tests to file
* Writing JUnit test case 'JsonArray_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 67%
* Compiling and checking tests
[MASTER] 00:57:18.445 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:57:18.447 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsonArray jsonArray0 = new JsonArray();
jsonArray0.add((JsonElement) jsonArray0);
jsonArray0.getAsJsonPrimitive();

[MASTER] 00:57:22.396 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:57:22.397 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsonArray jsonArray0 = new JsonArray();
jsonArray0.add((JsonElement) jsonArray0);
jsonArray0.toString();

* Writing tests to file
* Writing JUnit test case 'JsonElement_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.7-SNAPSHOT
* Configuration: EvoSuite_fuzzer
* Going to generate test cases for class: com.google.gson.stream.JsonWriter
* Starting Client-0
* Connecting to master process on port 8709
* Analyzing classpath: 
  - /home/apaniche/mitchell/generation-scripts/projects/gson/gson-2.8.6.jar
* Finished analyzing classpath
* Generating tests for class com.google.gson.stream.JsonWriter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1024
* Using seed 5
* Starting evolution
* Initial Number of Goals in DynaMOSA = 410 / 1024
* Search finished after 121s and 982 generations, 339498 statements, best individual has fitness: 130.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 179
* Number of covered goals: 172
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 117
* Number of covered goals: 105
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 468
* Number of covered goals: 407
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 97
* Number of covered goals: 83
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 117
* Number of covered goals: 97
* Generated 76 tests with total length 331
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JsonWriter_ESTest' to /home/apaniche/mitchell/generation-scripts/evosuite_fuzzer/tests/s5/gson/evosuite-tests
* Done!

* Computation finished
